<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>程序猿的MacOS环境(一)</title>
      <link href="/2020/09/29/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84MacOS%E7%8E%AF%E5%A2%83(%E4%BA%8C)/"/>
      <url>/2020/09/29/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84MacOS%E7%8E%AF%E5%A2%83(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<p>上一篇的补充<br><a href="https://www.jianshu.com/p/c485142a6a7e" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>推荐：<a href="https://www.jianshu.com/p/2f8b0f0aca93" target="_blank" rel="noopener">https://www.jianshu.com/p/2f8b0f0aca93</a><br>本篇：比较好用的几款日常软件<br>推荐来源：<a href="https://www.jianshu.com/p/bdb899112d5b" target="_blank" rel="noopener">10个macOS免费小工具，能帮你省下一大笔钱</a></p><h2 id="1-iShot"><a href="#1-iShot" class="headerlink" title="1. iShot"></a>1. iShot</h2><p>截图软件,本人一直用的是非专业版的Xnip，日常截图也基本够用，也能滚屏截图，但是没有延时截图的功能，主要是不是免费的。</p><p>替代品iShot我反而觉得更胜一筹。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a323e09dbbe49fb3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><p>还支持录屏，重点是录屏还可以直接转成gif，方便至极。</p><h2 id="2-翻译工具Bob"><a href="#2-翻译工具Bob" class="headerlink" title="2. 翻译工具Bob"></a>2. 翻译工具Bob</h2><p>除了能选中文字，粘贴文字进行翻译，还可以截图翻译，通过 OCR 识别文字，Bob 可以直接截图翻译，这样突破了文字限制，可以直接翻译图片或者视频中某个画面内容，即便你不需要翻译的时候，也可以将其作为一个 OCR 识别工具使用，直接复制识别后的内容，实测识别准确率很可观。</p><h2 id="3-NTFS-读写工具：Paragon-NTFS-Tuxera-NTFS（100-元）——-NTFS-Tool（免费）"><a href="#3-NTFS-读写工具：Paragon-NTFS-Tuxera-NTFS（100-元）——-NTFS-Tool（免费）" class="headerlink" title="3. NTFS 读写工具：Paragon NTFS / Tuxera NTFS（100+元）—— NTFS Tool（免费）"></a>3. NTFS 读写工具：Paragon NTFS / Tuxera NTFS（100+元）—— NTFS Tool（免费）</h2><p>我想很多刚刚接触 macOS 都会遇到这个麻烦——NTFS 格式硬盘无法读取，此前通过搜索引擎了解到用户量比较大的是 Paragon NTFS 和 Tuxera NTFS 这两款工具，由于代理方不一样，售价也不统一，但也基本都在 100 元以上，出于软件包大小以及 UI 风格，我最终购买了 Paragon NTFS，使用到现在倒也没遇到什么不如意。</p><p><img src="//upload-images.jianshu.io/upload_images/6999897-e162935d3f7fdf1b.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="image"></p><p>在准备这篇文章，又重新了解了一下，新出现了不少价格更低甚至免费的 NTFS 读写工具，其它付费的我就不说了，NTFS Tool 这款免费开源的工具倒是值得推荐。安装完成后，直接在 Finder 中对硬盘中文件进行读写操作。不过 NTFS Tool 对于系统盘的识别上似乎有些不一样，使用上倒也没什么问题。</p><p><img src="//upload-images.jianshu.io/upload_images/6999897-99eaef6b5afed6b5.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="image"></p><p>基本 macOS 上所有的 NTFS 读写工具只是能让系统正常读写 NTFS 格式硬盘，其它所有的文件操作还是在 Finder 中完成，不过这类工具倒是也可以作为外接硬盘的管理作用。</p><p>无论是用的哪一款工具，只要能够实现想要的目的，那就够了，NTFS Tool 可能不是最好用的，但作为免费开源工具，这样却也是足够了。</p><h2 id="4-ffmpeg"><a href="#4-ffmpeg" class="headerlink" title="4. ffmpeg"></a>4. ffmpeg</h2><p>视频格式转换、视频转 gif、视频压缩等视频操作的命令行工具。基本现在播放器的软件都使用了该仓库的代码。我平常主要用它压缩视频，例如介绍 utools 章节的视频，原视频 23M，然后通过它压缩 8M，方便快捷。缺点是命令行复杂，需要好好调教，我本人用的较少。</p><ol><li>主页地址：<a href="https://github.com/FFmpeg/FFmpeg" target="_blank" rel="noopener">github.com/FFmpeg/FFmp…</a></li><li>下载： <code>brew install ffmpeg</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>程序猿的MacOS环境(一)</title>
      <link href="/2020/09/29/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84MacOS%E7%8E%AF%E5%A2%83(%E4%B8%80)/"/>
      <url>/2020/09/29/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84MacOS%E7%8E%AF%E5%A2%83(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/2f8b0f0aca93" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>每个江湖上的高手都有自己趁手的兵器，你也应该有你自己的那把小李飞刀。<br>小李飞刀这个兵器还真不是突然想到的。</p><p>要是问我什么不是方天画戟、青龙偃月刀、丈八蛇矛云云，或者为啥不是独孤求败的利剑、紫薇软剑、玄铁重剑之类的。我就呵呵了，你见过哪个道法高深的神仙，随身手里扛着这么大的兵器，关二哥拉屎时应该不会扛着青龙偃月刀吧。</p><p>小李飞刀则不然，随身携带，杀伤力不弱于其他，最重要的其实是小李飞刀是在浪子李寻欢手里，李寻欢此人是一个倾倒天下多情红颜的潇洒浪子，一个重情重义的悲情英雄，一生都被身心的痛苦折磨，却又不轻易显示喜怒哀乐，复杂的内心情感全靠眼神表现。所以计算式小李飞刀只是在百晓生兵器谱上排第三，我还是更喜欢，也许我是不喜欢天机老人的懦弱，和上官金虹的恶霸行为。</p><p>有人说，自古没有最厉害的兵器，只有最厉害的人。也是，孤独前辈的第四把剑就是木剑，“四十岁后，草木竹石均可为剑”，何其雄壮，人家有傲视群雄的本事的啊，这境界太高了，没几个能达到的。</p><p>我不反对上面的观点，但是顺手的兵器总也是能为平庸的人增添战斗力，要不然那么多人去抢倚天剑、屠龙刀。</p><p>废话太多了哈。。。😁</p><p>作为一坨程序猿，我想表达的意思是打造自己最趁手，最适合自己工作的工具—-要不换个标题：MacOS系统上常用的软件和插件。</p><p>关键词：程序猿、MacOS</p><p>所以我要说微信，QQ之类的估计您的揍我了。</p><p>先推荐两个资源下载地址：</p><p><strong><a href="https://xclient.info/?t=b43ff20a95f7a8f8c2453e68b2650326403e6b99" target="_blank" rel="noopener">xclient.info</a></strong><br><strong><a href="https://www.waitsun.com/" target="_blank" rel="noopener">爱情守望者</a></strong></p><p><strong>必备应用：</strong></p><ul><li>git客户端：gitKarken，sourceTree</li><li>接口测试工具：postman</li><li>笔记工具：为知笔记，印象笔记</li><li>IDE：Intellij Idea，VS code，Emcas</li><li>markdown写作工具：Typora</li><li>翻墙客户端：Shadowsocks</li><li>手机投屏软件：Vysor，有谷歌浏览器插件</li><li>硬盘U盘读写软件：Tuxera Disk Manager</li></ul><p>####一些在线工具和网址:</p><blockquote><p>发起在线问卷调查：<a href="https://www.wenjuan.com/" target="_blank" rel="noopener">https://www.wenjuan.com/</a><br>在线定时任务执行写法工具：<a href="http://cron.qqe2.com/" target="_blank" rel="noopener">http://cron.qqe2.com/</a><br>国际推荐使用：<a href="https://cdnjs.com/" target="_blank" rel="noopener">https://cdnjs.com/</a><br>下载系统及工具：<a href="http://msdn.itellyou.cn" target="_blank" rel="noopener">http://msdn.itellyou.cn</a><br>优雅高效的免费在线APP原型工具  <a href="http://www.xiaopiu.com/" target="_blank" rel="noopener">http://www.xiaopiu.com/</a><br>showdoc文档工具：<a href="https://www.showdoc.cc/web/#/" target="_blank" rel="noopener">https://www.showdoc.cc/web/#/</a><br>各种java工具：<a href="http://www.hutool.cn/" target="_blank" rel="noopener">http://www.hutool.cn/</a><br>在线无损压缩图片：<a href="https://squoosh.app/" target="_blank" rel="noopener">https://squoosh.app/</a><br>生成短链接：<a href="http://www.surl.sinaapp.com/" target="_blank" rel="noopener">http://www.surl.sinaapp.com/</a><br>在线工具集合：<a href="http://oktools.net" target="_blank" rel="noopener">http://oktools.net</a><br>在线工具集合2 ：<a href="http://www.atoolbox.net/" target="_blank" rel="noopener">http://www.atoolbox.net</a><br>mockjs: <a href="http://mockjs.com/" target="_blank" rel="noopener">http://mockjs.com/</a><br>lisp里json转edn/map：<a href="http://pschwarz.bicycle.io/json-to-edn/" target="_blank" rel="noopener">http://pschwarz.bicycle.io/json-to-edn/</a></p></blockquote><h2 id="1-shell客户端"><a href="#1-shell客户端" class="headerlink" title="1. shell客户端"></a>1. shell客户端</h2><p>iterm2截止目前最喜欢的shell客户端，没有之一，之所以加个截止目前，是因为今年用emcas，都说这里面的shell也很赞。</p><p>做后端开发，经常要快速进入某一台远端服务器，然后看个log，改个配置啥的，这时候iterm+sshpass就能让你事半功倍了。<br>关于怎么配，此处不再细说。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http://sourceforge.net/projects/sshpass/files/sshpass/1.05/sshpass-1.05.tar.gz  </span><br><span class="line">tar xvzf sshpass-1.05.tar.gz  </span><br><span class="line">cd sshpass-1.05</span><br><span class="line">./configure  </span><br><span class="line">make  </span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>[站外图片上传中…(image-aefec1-1572691340926)]</p><p>推荐两个网友的杰作，一个安装，一个使用。<br><a href="https://www.iteye.com/blog/tinyhema-2093795" target="_blank" rel="noopener">mac下使用sshpass实现ssh记住密码</a><br><a href="https://www.jianshu.com/p/ae7bf4086b0d" target="_blank" rel="noopener">Mac下，使用sshpass让iTerm2支持ssh登录信息保存</a></p><p>安装sshpass有问题的用户，可以试试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb</span><br><span class="line">Updating Homebrew...</span><br><span class="line">Warning: Calling Non-checksummed download of sshpass formula file from an arbitrary URL is deprecated! Use &apos;brew extract&apos; or &apos;brew create&apos; and &apos;brew tap-new&apos; to create a formula file in a tap on GitHub instead.</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Downloading http://sourceforge.net/projects/sshpass/files/sshpass/1.06/sshpass-1.06.tar.gz</span><br><span class="line">==&gt; Downloading from https://netcologne.dl.sourceforge.net/project/sshpass/sshpass/1.06/sshpass-1.06.tar.gz</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; ./configure --prefix=/usr/local/Cellar/sshpass/1.06</span><br><span class="line">==&gt; make install</span><br><span class="line">🍺  /usr/local/Cellar/sshpass/1.06: 9 files, 45.8KB, built in 9 seconds</span><br></pre></td></tr></table></figure></p><p>安装成功。</p><p>iterm里另一个不得不用的是<code>Zsh</code>和<code>Oh My Zsh</code>家庭套餐，点到为止，网上一搜一大把，选个自己喜欢的theme用就行了。</p><p>iterm2的profiles里执行一个登录的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/sshpass -f /Users/mahaiqiang/Documents/sshpass/&lt;file_name&gt; ssh -p&lt;port&gt; marvin@ip</span><br></pre></td></tr></table></figure></p><p>file_name 只存储这个ip对应的用户登录密码，而且文件没有后缀。</p><p>如果没有安装成功sshpass，也可以用iterm的命令行模式，执行一个shell脚本，脚本的内容可能荣幸<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/expect -f</span></span><br><span class="line">set user &lt;user-name&gt;</span><br><span class="line">set host &lt;ip&gt;</span><br><span class="line">set password &lt;password&gt;</span><br><span class="line">set port &lt;port&gt;</span><br><span class="line">set timeout -1</span><br><span class="line"></span><br><span class="line">spawn ssh -p $port $user@$host</span><br><span class="line">expect "*assword:*"</span><br><span class="line">send "$password\r"</span><br><span class="line">interact</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure></p><p>High起来吧</p><ul><li>2020-10-04<br>json_pp，json_pp 我主要是用来格式化 curl 命令行的结果，例如测试某个 restful 接口，返回的 json，在命令行就会自动给你格式化好输出，json_pp 安装：<code>brew install jsonpp</code></li></ul><h2 id="2-Navicat-Permium"><a href="#2-Navicat-Permium" class="headerlink" title="2. Navicat Permium"></a>2. Navicat Permium</h2><p><a href="https://navicat.com.cn/products/navicat-premium" target="_blank" rel="noopener">Navicat Premium </a>是一套数据库开发工具，让你从单一应用程序中同时连接 MySQL、MariaDB、MongoDB、SQL Server、Oracle、PostgreSQL 和 SQLite 数据库。它与 Amazon RDS、Amazon Aurora、Amazon Redshift、Microsoft Azure、Oracle Cloud、MongoDB Atlas、阿里云、腾讯云和华为云等云数据库兼容。你可以快速轻松地创建、管理和维护数据库。</p><p>数据库工具在Mac上我比较钟情这款，导入导出都很方便，其他不推荐。不要说不是免费版，我相信你一定有办法免费，而且你还能搞个汉化版。</p><p>在Windows我用的最多<a href="https://www.heidisql.com/" target="_blank" rel="noopener">HeidiSQL</a>，轻量级，非常稳定的数据库客户端。是可惜没有mac版。</p><h2 id="3-transmit"><a href="#3-transmit" class="headerlink" title="3. transmit"></a>3. transmit</h2><p>相同功能的我还用过的filezilla和WinScp，但是从体验和视觉上来说，我更喜欢transmit，简洁直观</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f914d812b03195cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="transmit"></p><h2 id="4-tinyCal"><a href="#4-tinyCal" class="headerlink" title="4. tinyCal"></a>4. tinyCal</h2><p>这个小日历可了不得，试图比mac自带的日历小，但是又比mac状态栏上那个还不如没有日历表好。截图如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-dc432a42db92884d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tinyCal"></p><p>还有农历，看着不错吧，在设置个开机自启，系统自带的可以关闭了。</p><h2 id="5-Alfred"><a href="#5-Alfred" class="headerlink" title="5. Alfred"></a>5. Alfred</h2><p>这个是在去年在海尔一起工作的小唐同学那里看来的，直接抄一下原创：<br>Alfred作为老牌效率神器，网上很多帖子都已经做过介绍，这里说一下Alfred的剪贴板。</p><p>[站外图片上传中…(image-2652a3-1572691340926)]<br>Alfred的剪贴板可以保存最近几天位于系统剪贴板的所有内容。因此如果当键入命令时，突然想起来这个命令我昨天好像复制过，那就可以直接调出来，贴进命令行即可。</p><p>这款神器可是<a href="https://github.com/hzlzh/Best-App" target="_blank" rel="noopener">Best-App</a>排行NO.1的，可见一斑。</p><p>使用教程：<a href="https://www.jianshu.com/p/e9f3352c785f" target="_blank" rel="noopener">5分钟上手Mac效率神器Alfred以及Alfred常用操作</a></p><h2 id="6-LICECap-捕捉屏幕生成GIF"><a href="#6-LICECap-捕捉屏幕生成GIF" class="headerlink" title="6. LICECap 捕捉屏幕生成GIF"></a>6. LICECap 捕捉屏幕生成GIF</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install LICECap</span><br></pre></td></tr></table></figure><p>相对应的截图软件推荐<a href="https://zh.xnipapp.com/" target="_blank" rel="noopener">xnipapp</a>一款免费的截图软件，还支持滚动截图，离线操作。</p><h2 id="7-Recorder-it"><a href="#7-Recorder-it" class="headerlink" title="7. Recorder it"></a>7. Recorder it</h2><p>屏幕录制软件，可以在xclient.info上下载到。</p><h2 id="8-keycastr-显示快捷键"><a href="#8-keycastr-显示快捷键" class="headerlink" title="8. keycastr 显示快捷键"></a>8. keycastr 显示快捷键</h2><p>在你想做一个教程时，不管是gif了，还是录屏了，你或许在冥思苦想到底怎么解释我在键盘上按了啥，这回不用解释了，你按了啥有软件帮你显示出来了，简单明了。<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install keycastr</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-eef71ac73357c5fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="keycastr"></p><p>配合上生成gif搞个小教程简直不要太爽。</p><h2 id="9-ssh-tunnel"><a href="#9-ssh-tunnel" class="headerlink" title="9. ssh tunnel"></a>9. ssh tunnel</h2><p>再复制小唐同学推荐的一个神器ssh tunnel。</p><h4 id="场景："><a href="#场景：" class="headerlink" title="场景："></a>场景：</h4><p>我们需要搭建开发环境，使得本地的web server/api server 能够访问位于云服务器上局域网环境中的数据库，例如百度云提供的数据库服务。这些数据库服务器可以在百度云的机器上直接访问，而不能在公网环境下通过公网ip访问。这个时候可以用百度云的普通server建一个tunnel，从而实现数据访问。在xshell中也有类似功能，中文翻译做：隧道。</p><h4 id="界面展示："><a href="#界面展示：" class="headerlink" title="界面展示："></a>界面展示：</h4><p><img src="//upload-images.jianshu.io/upload_images/7862575-bc40d062a8637a22.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="image"></p><p>如图便是建立了三个tunnel，分别连向了两个关系型数据库服务器和一个redis服务器。<br>举例来说第一条隧道连接，使用时的访问方法，就是直接localhost:13306即可。<br>当然，直接用ssh命令也可解决，但麻烦不是。程序员就应该能偷懒的时候尽可能偷懒，美其名曰：解放和发展生产力~<br>命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -CfNg -L 16306:postgresql94.rd*****lwr2zr.rds.bj.baidubce.com:3306 root@180.***.***.189</span><br></pre></td></tr></table></figure><p>原作者：<a href="https://www.jianshu.com/p/e0b96caa3e7c" target="_blank" rel="noopener">tangxqa</a></p><h2 id="10-PicGo"><a href="#10-PicGo" class="headerlink" title="10. PicGo"></a>10. PicGo</h2><p><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">图床</a>，上传图片后直接将复制复制到了粘贴板，非常方便，尤其要写markdown<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4b471f30ea33d34e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PicGo"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install PicGo</span><br></pre></td></tr></table></figure></p><p>如果常写markdown的话，绝对是个不错的选择，谁还每个github账号，合理使用资源就行了，图片拖进上传区，直接就能返回来个markdown的地址放到粘贴板里了。至于怎么利用github做图床自行google下。</p><h2 id="11-Charles抓包工具"><a href="#11-Charles抓包工具" class="headerlink" title="11. Charles抓包工具"></a>11. Charles抓包工具</h2><p><a href="http://www.charlesproxy.com/" target="_blank" rel="noopener">Charles</a>是一款抓包代理调试工具、类 Fiddler。<br>ios系统手机上有一款抓包神器：stream<br>安卓手机上一般用：Packet Capture，或者抓包精灵</p><h2 id="12-内网穿透工具"><a href="#12-内网穿透工具" class="headerlink" title="12. 内网穿透工具"></a>12. 内网穿透工具</h2><p>这个东西不常用，但是如果不知道还有个这么个玩意儿那就有点low了。<br>我用过serveo和ngrok，ngrok相对稳定，但是使用便捷性赶不上什么都不用serveo一句命令的快。<br>我的两个总结：<br><a href="https://www.jianshu.com/p/57485240708c" target="_blank" rel="noopener">使用serveo一秒钟实现内网穿透</a><br><a href="https://www.jianshu.com/p/4f008e2b7622" target="_blank" rel="noopener">使用ngrok一分钟实现内网穿透</a></p><h2 id="13-为知笔记-印象笔记"><a href="#13-为知笔记-印象笔记" class="headerlink" title="13. 为知笔记|印象笔记"></a>13. 为知笔记|印象笔记</h2><p>有时候你会有两台电脑，或者需要用移动端看看曾经报错的一些有效资源，这时候如果没有个云笔记，有点说不过去了，而且这种笔记不管是保存自己的东西，还可以通过google浏览器插件快速收藏网页，将某<br>一篇博客剪切成自己的东西笔记。</p><p>[站外图片上传中…(image-7835d8-1572691340926)]</p><h2 id="14-Parallels虚拟机神器"><a href="#14-Parallels虚拟机神器" class="headerlink" title="14. Parallels虚拟机神器"></a>14. Parallels虚拟机神器</h2><p>带你飞~</p><h2 id="15-LogTail-日志监控查看工具"><a href="#15-LogTail-日志监控查看工具" class="headerlink" title="15. LogTail 日志监控查看工具"></a>15. LogTail 日志监控查看工具</h2><p>前面说到的iterm配合sshpass登录到服务器不是个啥问题了，但是最近用的不管是阿里云和百度云的ECS，在终端连接一会儿后就会自动断开，而且我也不知道咋搞，就算是tail 了，一会儿没有动就自己断开了，非常糟心。</p><p>今天终于找到了一款我众里寻他千百度的logtail，我简直爱死他了，查看云服务器日志居然还有这么个玩意儿，简直神器啊，来两张图看看：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-fd0b2997d586b446.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我收藏的标签"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-dcc72c2018c69385.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="滚动时自动开始/停止tail"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-562752335b3f544e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="标签功能"></p><p>有了它服务器上的日志就不需要搭建类似ELK或者EFK环境了。</p><h2 id="16-mpv：一个高可配的程序猿专用视频播放器"><a href="#16-mpv：一个高可配的程序猿专用视频播放器" class="headerlink" title="16. mpv：一个高可配的程序猿专用视频播放器"></a>16. <a href="https://mpv.io/" target="_blank" rel="noopener">mpv</a>：一个高可配的程序猿专用视频播放器</h2><p>安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install mpv</span><br></pre></td></tr></table></figure></p><p>这是一款一个跨平台、简洁、开源、免费、且性能和功能兼备万能视频播放器。MPV 是一个基于 MPlayer 和 mplayer2 的开源极简全能播放器。支持各种视频格式、音频解码、支持特效字幕（电影动漫的ass特效字幕都没啥问题），不仅支持本地播放，同样支持网络播放。重点是 MPV 具有多系统平台支持、命令行、自定义、GPU 解码、脚本支持等特点……</p><p><a href="https://www.iplaysoft.com/mpv.html" target="_blank" rel="noopener">看这篇介绍</a></p><h2 id="17-Moom"><a href="#17-Moom" class="headerlink" title="17 Moom"></a>17 Moom</h2><p>或许有许多人和小编一样，感觉Mac OS在使用时各种都很好用，但是就是对于窗口大小的调整需要用鼠标去拖动大小不满意。</p><p>  那么有没有一种更为快速的方法，可以让你迅速的最大化、最小化各种窗口，甚至和WIN10系统一样做到左右对半分配两个窗口呢？当然有！只需要在你的Mac上安装Moom这一款小软件即可实现。</p><p>Moom是苹果os平台上优秀的窗口管理工具，可以快速修改当前窗口的大小并放置在指定位置，默认情况下拥有五种尺寸可选，单击选项即可更改窗口大小，如最大化，移动到左边、右边等操作，还可以自定义窗口，让用户可以更好的查看mac上的内容。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5c6e5512751166b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="moom"></p><h2 id="18-PopClip"><a href="#18-PopClip" class="headerlink" title="18. PopClip"></a>18. PopClip</h2><p>一款在 Mac 上人尽皆知的小工具，它简单高效，具有强大的拓展功能，PopClip 最基本的功能即用鼠标选中一段文字就可以做复制粘贴的动作，省去了我们平时 Command+C or V 的麻烦。</p><p>除此之外，再无拓展支持的情况下，根据鼠标选中的内容，PopClip 还自身支持链接的跳转打开、自带词典的翻译、邮件地址跳转、搜索引擎搜索、单词纠正等功能，但这个工具真正强大之处在于它的拓展功能的使用哦。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-2ec485aea0213985.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h1 id="小插件"><a href="#小插件" class="headerlink" title="小插件"></a>小插件</h1><ol><li><p>Bartender<br>展开和收缩状态栏<br><img src="https://upload-images.jianshu.io/upload_images/4109786-aff686857922b5fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p>外接2K显示器无法开启hign dpi时的处理</p></li></ol><p>开启教程：<a href="https://bbs.feng.com/forum.php?mod=viewthread&amp;tid=11669269&amp;page=1" target="_blank" rel="noopener">https://bbs.feng.com/forum.php?mod=viewthread&amp;tid=11669269&amp;page=1</a><br>用到的三个软件：</p><p><img src="//upload-images.jianshu.io/upload_images/7862575-c8b02bf8e94054d1.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="image"></p><p>设置完成之后，在外接显示器也可以看到hign dpi的选项：</p><p><img src="//upload-images.jianshu.io/upload_images/7862575-31377a33004663b6.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="image"></p><ol start="3"><li>Go2Shell<br>在访达里增加一个打开命令行的快捷入口，快速进入命令行<br><img src="https://upload-images.jianshu.io/upload_images/4109786-1bafd77955fbffb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ol><p>还可以设置在哪打开<br><img src="https://upload-images.jianshu.io/upload_images/4109786-110f3ed1ef464801.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ol start="4"><li><p>FeHelper<br>一款谷歌浏览器插件，主要是免费的工具集合。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-9cd7f23018ebe5bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="FeHelper"></p></li><li><p>Octotree<br>这又是一款chrome插件，能将github项目在左侧边栏以目录树形结构展示。让你更直观地感受自己或别人的项目。感谢@朋友你的学生卡掉了 同学的推荐<br><img src="https://upload-images.jianshu.io/upload_images/4109786-1e143b5f51793d80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p>WeChatPlugin mac<br>mac微信助手，<a href="https://www.jianshu.com/p/b6ecd2c3c1dd" target="_blank" rel="noopener">mac微信助手，功能全新升级</a>，有很多比如消息防撤回、远程控制(已支持语音)、微信多开、第二次登录免认证等等的功能。</p></li></ol><h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><p><a href="https://www.jianshu.com/p/65cec2a1055d" target="_blank" rel="noopener">工欲善其事，必先利其器-程序员工具推荐</a><br><a href="https://www.macdown.com/news/3644.html" target="_blank" rel="noopener">正是有了这些神器，让我再也离不开Mac！</a></p>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安卓有线无线投屏神器---scrcpy</title>
      <link href="/2020/09/28/%E5%AE%89%E5%8D%93%E6%9C%89%E7%BA%BF%E6%97%A0%E7%BA%BF%E6%8A%95%E5%B1%8F%E7%A5%9E%E5%99%A8---scrcpy/"/>
      <url>/2020/09/28/%E5%AE%89%E5%8D%93%E6%9C%89%E7%BA%BF%E6%97%A0%E7%BA%BF%E6%8A%95%E5%B1%8F%E7%A5%9E%E5%99%A8---scrcpy/</url>
      
        <content type="html"><![CDATA[<p>一款最简单，切PC上可以操作移动设备的安卓投屏软件，基于adb实现<br><a href="https://www.jianshu.com/p/04bdcf8a09b9" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>用过sync，用过免费的软件<a href="https://letsview.com/zh/" target="_blank" rel="noopener">幕享</a>，最后发现哪一款也没有scrcpy好使。</p><p>需要两个命令行，<code>adb</code>和<code>scrcpy</code></p><p>安装就不用描述了，能有把手机投到电脑上的想法的人应该都能安装上。</p><p>安装上以后就更了不得了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># mahaiqiang @ mahaiqiangs-MacBook-Pro in ~ [8:58:14]</span><br><span class="line">$ adb usb</span><br><span class="line">* daemon not running; starting now at tcp:5037</span><br><span class="line">* daemon started successfully</span><br><span class="line">restarting in USB mode</span><br><span class="line"></span><br><span class="line"># mahaiqiang @ mahaiqiangs-MacBook-Pro in ~ [8:59:10]</span><br><span class="line">$ scrcpy</span><br><span class="line">2020-09-28 08:59:14.880 scrcpy[1865:48805] INFO: scrcpy 1.14 &lt;https://github.com/Genymobile/scrcpy&gt;</span><br><span class="line">/usr/local/Cellar/scrcpy/1.14_1/share/scrcpy/scrcpy-server: 1 file pushed. 1.3 MB/s (33142 bytes in 0.025s)</span><br><span class="line">[server] INFO: Device: HUAWEI EVA-AL00 (Android 8.0.0)</span><br><span class="line">2020-09-28 08:59:16.304 scrcpy[1865:48805] INFO: Created renderer: metal</span><br><span class="line">2020-09-28 08:59:16.304 scrcpy[1865:48805] INFO: Renderer: metal</span><br><span class="line">2020-09-28 08:59:16.311 scrcpy[1865:48805] INFO: Initial texture: 1080x1920</span><br></pre></td></tr></table></figure></p><p>如果电脑信任了手机,开了USB调试，这时候应该能从电脑上看到手机了，就是这么简单。</p><p>强烈推荐<br><a href="https://blog.csdn.net/was172/article/details/99705855" target="_blank" rel="noopener">scrcpy——Android投屏神器(使用教程)</a></p><p>稍微给自己备份一下，万一以上博客哪天下架了。</p><h2 id="使用scrcpy的要求"><a href="#使用scrcpy的要求" class="headerlink" title="使用scrcpy的要求"></a>使用scrcpy的要求</h2><ol><li>Android设备至少需要API 21（Android 5.0以上版本）;</li><li>确保在您的设备上启用了<a href="https://developer.android.com/studio/command-line/adb.html#Enabling" target="_blank" rel="noopener">adb调试</a>;</li><li>在某些设备上，您还需要启用<a href="https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323" target="_blank" rel="noopener">其他选项</a>以使用键盘和鼠标控制它。</li></ol><h2 id="使用电脑连接手机"><a href="#使用电脑连接手机" class="headerlink" title="使用电脑连接手机"></a>使用电脑连接手机</h2><p>在Android手机中打开了USB调试后，我们即可在电脑中使用adb进行调试。</p><p>我使用的是Windows10系统，以下以Windows为例，MacOS或Linux请<a href="https://github.com/Genymobile/scrcpy#get-the-app" target="_blank" rel="noopener">点击这里</a>。</p><p>程序使用了Java语言，我们需要在电脑中搭建Java运行环境，参考：<a href="https://blog.csdn.net/sigmarising/article/details/80139287" target="_blank" rel="noopener">Windows10 配置 Java 开发环境</a></p><p>首先下载scrcpy，可去<code>releases</code>下载最新版本，目前最新版本为<code>v1.10</code>。</p><p>下载地址：<a href="https://github.com/Genymobile/scrcpy/releases" target="_blank" rel="noopener">https://github.com/Genymobile/scrcpy/releases</a></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-9f46707c232fe855.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>打开cmd定位到此目录（在地址栏中输入<code>cmd</code>回车），或者将该目录如<code>D:\Github_Run\scrcpy-win64-v1.10</code>加入到系统环境变量中，程序的使用都在cmd命令行中操作。</p><h2 id="使用USB进行连接"><a href="#使用USB进行连接" class="headerlink" title="使用USB进行连接"></a>使用USB进行连接</h2><p>此方式推荐使用，相对更加流畅。</p><ol><li>手机通过USB连接到PC上，首次连接会弹出是否信任该电脑，点击始终信任即可。</li><li>运行<code>adb usb</code>查看是否连接成功</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb usb</span><br><span class="line">restarting in USB mode</span><br></pre></td></tr></table></figure><ol start="3"><li>运行<code>scrcpy</code>即可。</li></ol><h2 id="使用无线连接"><a href="#使用无线连接" class="headerlink" title="使用无线连接"></a>使用无线连接</h2><p>可参考官方文档：<a href="https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/" target="_blank" rel="noopener">Open Source Project - Scrcpy now works wirelessly</a></p><p>此连接方式更加方便快捷，若宽带速率高，使用效果更佳，使用方法也非常简单。</p><ol><li>确保PC和手机在同一Wifi中</li><li>手机先通过USB与PC相连</li><li>在PC上运行 adb tcpip 服务端口，如端口为5555</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb tcpip 5555</span><br><span class="line">restarting in TCP mode port: 5555</span><br></pre></td></tr></table></figure><ol start="4"><li>拔下你的设备，断开USB连接</li><li>在PC上运行 adb connect 手机IP:服务端口（手机IP可通过手机的<code>状态信息</code>查看，或者登录路由器查看，一般以192.168开头）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Github_Run\scrcpy-win64-v1.10&gt;adb connect 192.168.0.4:5555</span><br><span class="line">connected to 192.168.0.4:5555</span><br></pre></td></tr></table></figure><ol start="6"><li>运行scrcpy，在cmd中输入<code>scrcpy.exe</code></li></ol><p>参考：<br><a href="https://blog.csdn.net/was172/article/details/99705855" target="_blank" rel="noopener">scrcpy——Android投屏神器(使用教程)</a></p><p><a href="http://blog.lujun9972.win/blog/2019/03/20/%E4%BD%BF%E7%94%A8scrcpy%E6%8E%A7%E5%88%B6%E4%BD%A0%E7%9A%84%E6%89%8B%E6%9C%BA/" target="_blank" rel="noopener">使用scrcpy控制你的手机</a></p>]]></content>
      
      
      <categories>
          
          <category> cljs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>nginx文件目录服务器</title>
      <link href="/2020/09/22/nginx%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/09/22/nginx%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>nginx搭建一个文件服务器<br><a href="https://www.jianshu.com/p/96560e2f4e47" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>用nginx配置一个文件服务器，并解决中文乱码问题，配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name downloadapp.3vyd.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos; always;</span><br><span class="line">add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos;;</span><br><span class="line">add_header &apos;Access-Control-Expose-Headers&apos; &apos;Content-Length,Content-Range&apos;;</span><br><span class="line">add_header &apos;Access-Control-Allow-Headers&apos; &apos;Range&apos;;</span><br><span class="line">        root /var/packages;</span><br><span class="line">        autoindex on;</span><br><span class="line">        autoindex_localtime on;</span><br><span class="line">        autoindex_exact_size off;</span><br><span class="line">charset utf-8;</span><br><span class="line">        try_files $uri $uri/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-9b7df3ca35a5bec4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>如果，开放目录，当时不允许直接访问，只能访问指定路径下的html文件，nginx.conf的配置如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    add_header Access-Control-Allow-Origin *;</span><br><span class="line">    add_header Access-Control-Allow-Headers *;</span><br><span class="line">    add_header Access-Control-Allow-Credentials true always;</span><br><span class="line">    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;</span><br><span class="line">    add_header Access-Control-Max-Age 1728000 always;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 8088;</span><br><span class="line">        server_name localhost;</span><br><span class="line">        </span><br><span class="line">        # location / &#123;</span><br><span class="line">        #     root   /var/jenkins/report/admin/dist;</span><br><span class="line">        #     try_files $uri $uri/ /index.html;</span><br><span class="line">        #     index  index.html;</span><br><span class="line">        # &#125;</span><br><span class="line"></span><br><span class="line">        location /report &#123;</span><br><span class="line">            if ($request_method = &apos;OPTIONS&apos;) &#123;</span><br><span class="line">                add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;</span><br><span class="line">                add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET,POST,OPTIONS&apos;;</span><br><span class="line">                add_header &apos;Access-Control-Allow-Headers&apos; &apos;*&apos;;</span><br><span class="line">                return 204;</span><br><span class="line">            &#125;</span><br><span class="line">            root   /var/jenkins_home;</span><br><span class="line">            try_files $uri $uri/ /index.html;</span><br><span class="line">            index  index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~* \.(eot|ttf|woff)$ &#123;</span><br><span class="line">          add_header Access-Control-Allow-Origin *;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-9cfb0b549fddf60b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-fc56aec1386eae03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="403"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://cloud.tencent.com/developer/article/1142152" target="_blank" rel="noopener">nginx开启目录浏览及解决中文文件名乱码问题</a></p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>websocket本地调试html</title>
      <link href="/2020/09/13/websocket%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95html/"/>
      <url>/2020/09/13/websocket%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95html/</url>
      
        <content type="html"><![CDATA[<p>新起websocket服务后本地如何调试呢？<br><a href="https://www.jianshu.com/p/8ad2746b0866" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>先看看本地这个静态html在浏览器里看到的页面。</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-7d808ef9f949ee34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class="line">&lt;title&gt;本地websocket测试&lt;/title&gt;</span><br><span class="line">&lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;keywords&quot; content=&quot;本地,websocket,测试工具&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;description&quot; content=&quot;本地,websocket,测试工具&quot; /&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.btn-group&#123;</span><br><span class="line">display: inline-block;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;input type=&apos;text&apos; value=&apos;ws://localhost:3000/api/ws&apos; class=&quot;form-control&quot; style=&apos;width:390px;display:inline&apos;</span><br><span class="line"> id=&apos;wsaddr&apos; /&gt;</span><br><span class="line">&lt;div class=&quot;btn-group&quot; &gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&apos;addsocket();&apos;&gt;连接&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&apos;closesocket();&apos;&gt;断开&lt;/button&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-default&quot; onclick=&apos;$(&quot;#wsaddr&quot;).val(&quot;&quot;)&apos;&gt;清空&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;row&quot;&gt;</span><br><span class="line">&lt;div id=&quot;output&quot; style=&quot;border:1px solid #ccc;height:365px;overflow: auto;margin: 20px 0;&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; id=&apos;message&apos; class=&quot;form-control&quot; style=&apos;width:810px&apos; placeholder=&quot;待发信息&quot; onkeydown=&quot;en(event);&quot;&gt;</span><br><span class="line">&lt;span class=&quot;input-group-btn&quot;&gt;</span><br><span class="line">&lt;button class=&quot;btn btn-default&quot; type=&quot;button&quot; onclick=&quot;doSend();&quot;&gt;发送&lt;/button&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">        &lt;script crossorigin=&quot;anonymous&quot; integrity=&quot;sha384-LVoNJ6yst/aLxKvxwp6s2GAabqPczfWh6xzm38S/YtjUyZ+3aTKOnD/OJVGYLZDl&quot; src=&quot;https://lib.baomitu.com/jquery/3.5.0/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function formatDate(now) &#123;</span><br><span class="line">var year = now.getFullYear();</span><br><span class="line">var month = now.getMonth() + 1;</span><br><span class="line">var date = now.getDate();</span><br><span class="line">var hour = now.getHours();</span><br><span class="line">var minute = now.getMinutes();</span><br><span class="line">var second = now.getSeconds();</span><br><span class="line">return year + &quot;-&quot; + (month = month &lt; 10 ? (&quot;0&quot; + month) : month) + &quot;-&quot; + (date = date &lt; 10 ? (&quot;0&quot; + date) : date) +</span><br><span class="line">&quot; &quot; + (hour = hour &lt; 10 ? (&quot;0&quot; + hour) : hour) + &quot;:&quot; + (minute = minute &lt; 10 ? (&quot;0&quot; + minute) : minute) + &quot;:&quot; + (</span><br><span class="line">second = second &lt; 10 ? (&quot;0&quot; + second) : second);</span><br><span class="line">&#125;</span><br><span class="line">var output;</span><br><span class="line">var websocket;</span><br><span class="line"> </span><br><span class="line">function init() &#123;</span><br><span class="line">output = document.getElementById(&quot;output&quot;);</span><br><span class="line">testWebSocket();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function addsocket() &#123;</span><br><span class="line">var wsaddr = $(&quot;#wsaddr&quot;).val();</span><br><span class="line">if (wsaddr == &apos;&apos;) &#123;</span><br><span class="line">alert(&quot;请填写websocket的地址&quot;);</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">StartWebSocket(wsaddr);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function closesocket() &#123;</span><br><span class="line">websocket.close();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function StartWebSocket(wsUri) &#123;</span><br><span class="line">websocket = new WebSocket(wsUri);</span><br><span class="line">websocket.onopen = function(evt) &#123;</span><br><span class="line">onOpen(evt)</span><br><span class="line">&#125;;</span><br><span class="line">websocket.onclose = function(evt) &#123;</span><br><span class="line">onClose(evt)</span><br><span class="line">&#125;;</span><br><span class="line">websocket.onmessage = function(evt) &#123;</span><br><span class="line">onMessage(evt)</span><br><span class="line">&#125;;</span><br><span class="line">websocket.onerror = function(evt) &#123;</span><br><span class="line">onError(evt)</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function onOpen(evt) &#123;</span><br><span class="line">writeToScreen(&quot;&lt;span style=&apos;color:red&apos;&gt;连接成功，现在你可以发送信息啦！！！&lt;/span&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function onClose(evt) &#123;</span><br><span class="line">writeToScreen(&quot;&lt;span style=&apos;color:red&apos;&gt;websocket连接已断开!!!&lt;/span&gt;&quot;);</span><br><span class="line">websocket.close();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function onMessage(evt) &#123;</span><br><span class="line">writeToScreen(&apos;&lt;span style=&quot;color:blue&quot;&gt;服务端回应&amp;nbsp;&apos; + formatDate(new Date()) + &apos;&lt;/span&gt;&lt;br/&gt;&lt;span class=&quot;bubble&quot;&gt;&apos; +</span><br><span class="line">evt.data + &apos;&lt;/span&gt;&apos;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function onError(evt) &#123;</span><br><span class="line">writeToScreen(&apos;&lt;span style=&quot;color: red;&quot;&gt;发生错误:&lt;/span&gt; &apos; + evt.data);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function doSend() &#123;</span><br><span class="line">var message = $(&quot;#message&quot;).val();</span><br><span class="line">if (message == &apos;&apos;) &#123;</span><br><span class="line">alert(&quot;请先填写发送信息&quot;);</span><br><span class="line">$(&quot;#message&quot;).focus();</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">if (typeof websocket === &quot;undefined&quot;) &#123;</span><br><span class="line">alert(&quot;websocket还没有连接，或者连接失败，请检测&quot;);</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">if (websocket.readyState == 3) &#123;</span><br><span class="line">alert(&quot;websocket已经关闭，请重新连接&quot;);</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">console.log(websocket);</span><br><span class="line">$(&quot;#message&quot;).val(&apos;&apos;);</span><br><span class="line">writeToScreen(&apos;&lt;span style=&quot;color:green&quot;&gt;你发送的信息&amp;nbsp;&apos; + formatDate(new Date()) + &apos;&lt;/span&gt;&lt;br/&gt;&apos; + message);</span><br><span class="line">websocket.send(message);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function writeToScreen(message) &#123;</span><br><span class="line">var div = &quot;&lt;div class=&apos;newmessage&apos;&gt;&quot; + message + &quot;&lt;/div&gt;&quot;;</span><br><span class="line">var d = $(&quot;#output&quot;);</span><br><span class="line">var d = d[0];</span><br><span class="line">var doScroll = d.scrollTop == d.scrollHeight - d.clientHeight;</span><br><span class="line">$(&quot;#output&quot;).append(div);</span><br><span class="line">if (doScroll) &#123;</span><br><span class="line">d.scrollTop = d.scrollHeight - d.clientHeight;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">function en(event) &#123;</span><br><span class="line">var evt = evt ? evt : (window.event ? window.event : null);</span><br><span class="line">if (evt.keyCode == 13) &#123;</span><br><span class="line">doSend()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> cljs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shadow-cljs hooks解决css延迟加载导致页面邹形问题</title>
      <link href="/2020/08/29/shadow-cljs%20hooks%E8%A7%A3%E5%86%B3css%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E5%AF%BC%E8%87%B4%E9%A1%B5%E9%9D%A2%E9%82%B9%E5%BD%A2%E9%97%AE%E9%A2%98/"/>
      <url>/2020/08/29/shadow-cljs%20hooks%E8%A7%A3%E5%86%B3css%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD%E5%AF%BC%E8%87%B4%E9%A1%B5%E9%9D%A2%E9%82%B9%E5%BD%A2%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在shadow-cljs项目中在最后编译的时候将所有的css写入到同一个css文件，在index.html里引用一次<br><a href="https://www.jianshu.com/p/ff7885afaab9" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><p>我司使用shadow-cljs编译clojure script代码，考虑到大家都编辑一个css文件的话，冲突比较严重，并且代码也没有模块化，所以每个模块有自己的样式文件，目前都是在自己业务模块或者component里引入自己的css文件，结构基本是这样的：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> login-main []</span><br><span class="line">  [<span class="symbol">:div</span></span><br><span class="line">   [<span class="symbol">:link</span> &#123;<span class="symbol">:rel</span> <span class="string">"stylesheet"</span> <span class="symbol">:href</span> <span class="string">"/css/login.css"</span> &#125;]</span><br><span class="line">   [<span class="symbol">:div</span> <span class="string">"登录组件样式"</span>]])</span><br></pre></td></tr></table></figure></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>好处：</p><ul><li>代码模块化，业务组件与样式文件一一对应，便于开发团队维护代码。</li><li>不用在入口文件里引入一堆css文件，减少commit冲突。</li><li>减少资源浪费，只有页面加载处才加载css，系统不加载无用的资源文件。</li></ul><p>痛点</p><ul><li>一条足以致命，那就是产品体验不好，css加载延迟，几乎每个页面都出现如下一个瞬间。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-c1571f59ff4e79be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="定制"></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4109786-5497b1a6f46b1c32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="订单"></p><p>是的，你看的没有错，浏览确实没有加载完，网络好的话这个页面瞬间就过了，但是万一碰上不好的，那就尴尬了，并且有时候还出现过最后样式就没有出来的情况。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>不能让组件渲染时才去加载css，所以link这个方案pass掉。<br>那么只能将css在<code>index.html</code>里引入，不管用不用得到，都先加载出来，让浏览器先缓存下来备用。</p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><ol><li>代码层面，还是分模块，业务模块和css模块一一对应。</li><li>在系统运行时将所有自定义的css合并到一个样式文件，在<code>index.html</code>中引用。</li></ol><p>其中第二点，在部署时可以使用脚本处理，但是在本地开发时就比较不便，不过好在shadow-cljs提供了<a href="https://shadow-cljs.github.io/docs/UsersGuide.html#build-hooks" target="_blank" rel="noopener">build-hooks</a>神器。加载配置中，让我们代码编译时做了这个合并css文件的工作。具体的配置是在根目录的<code>shadow-cljs.edn</code>中加入如下配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;...</span><br><span class="line"> :builds</span><br><span class="line"> &#123;:app &#123;:target ...</span><br><span class="line">           :build-hooks [(utils.hooks/watch-resource)]</span><br><span class="line">        ...&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>这个hooks的全部代码如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(ns utils.hooks</span><br><span class="line">  (:require [clojure.java.shell :as shell]))</span><br><span class="line"></span><br><span class="line">(defn watch-resource</span><br><span class="line">  &#123;:shadow.build/stage :flush&#125;</span><br><span class="line">  [build-state &amp; args]</span><br><span class="line">  (future</span><br><span class="line">    (prn &quot;configure completed&quot;)</span><br><span class="line">    (let [dir (System/getProperty &quot;user.dir&quot;)]</span><br><span class="line">      (clojure.java.shell/with-sh-dir (str dir &quot;/src/cljs/utils&quot;)</span><br><span class="line">        (clojure.java.shell/sh &quot;mergecss.sh&quot; (str dir &quot;/resources/public/css&quot;) (str dir &quot;/resources/public/css/style.css&quot;)))))</span><br><span class="line">  build-state)</span><br></pre></td></tr></table></figure></p><p>如果参考，shadow-cljs官方对<a href="https://shadow-cljs.github.io/docs/UsersGuide.html#build-hooks" target="_blank" rel="noopener">build-hooks</a>的说明，不难理解。解释两个东西</p><ol><li><code>(System/getProperty &quot;user.dir&quot;)</code>，这个是获取当前项目的工作目录，也就是项目跟目录，注意不是git根目录。有了这个，想获取什么目录或者文件，手到擒来。</li><li>hooks里还调用了一个脚本文件<code>mergecss.sh</code>,这个文件的作用是把开发团队自己写的所有css的内容copy到同一个<code>style.css</code>文件中去，第一个参数是要处理的目录(会向下遍历目录)，第二个参数是要写入的目标文件，附上脚本代码：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">获取第一个参数,目标目录</span></span><br><span class="line">srcpath=$1</span><br><span class="line"><span class="meta">#</span><span class="bash">第二个参数，输出文件</span></span><br><span class="line">target_file=$2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">先删除原目标文件</span></span><br><span class="line">rm -rf $&#123;target_file&#125;;</span><br><span class="line"></span><br><span class="line">function writeByDir()&#123;</span><br><span class="line">    for file in $1/*</span><br><span class="line">      do</span><br><span class="line">        if test -f $file; then</span><br><span class="line"><span class="meta">  #</span><span class="bash">_echo $(basename <span class="variable">$file</span>)</span></span><br><span class="line">          if [[ $(basename $file) = "antd.min.css" ]] || [[ $(basename $file) = "slick.min.css" ]] || [[ $(basename $file) = "slick-theme.min.css" ]]; then</span><br><span class="line">            echo "uncopy css :"$(basename $file)</span><br><span class="line">          else</span><br><span class="line">            cat "$file" &gt;&gt; "$&#123;target_file&#125;"</span><br><span class="line">          echo "" &gt;&gt; "$&#123;target_file&#125;"</span><br><span class="line">          fi</span><br><span class="line">        else</span><br><span class="line">          writeByDir $file</span><br><span class="line">       fi</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line">writeByDir $&#123;srcpath&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>此处由衷感慨下，repl真好用，clojure.java.shell这个库的使用，及最后钩子内容好不好使全靠这个工具调试。否则的话，修改hooks就要频繁启动shadow-cljs项目，并且如果hooks函数有错误的没有任何报错信息，只是钩子函数不执行。</p></blockquote><p>这样本地开发的css文件也能及时写入到<code>style.css</code>里，在<code>index.html</code>引用这个文件，妥了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/style.css&quot; type=&quot;text/css&quot; &gt;</span><br></pre></td></tr></table></figure></p><h2 id="一顿操作猛如虎，定睛一看原地杵"><a href="#一顿操作猛如虎，定睛一看原地杵" class="headerlink" title="一顿操作猛如虎，定睛一看原地杵"></a>一顿操作猛如虎，定睛一看原地杵</h2><p>以上操作还是不够完美，</p><ol><li><p>加上hook后，在本地修改自己的css后，钩子不执行，改的代码不会自己写入目标文件。<br>方案一：在9630端口上手动触发compile，强制flush。<br>方案二：开发过程中可以在cljs文件里link自己的样式文件，达到高效开发，link段落不用提交。</p></li><li><p>为了开发时不冲突，更新gitignore，生成的css不用commit到项目里，release环境在持续集成时执行该hook的操作，调用服务器的脚本文件。</p></li><li><p>样式文件没有hash，纯copy，只为解决css加载延迟导致的页面丑陋。</p></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://blog.csdn.net/sirfenygu/article/details/47025083" target="_blank" rel="noopener">https://blog.csdn.net/sirfenygu/article/details/47025083</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> cljs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mac上soundflower+OBS+微信公众号直播项目总结</title>
      <link href="/2020/08/16/mac%E4%B8%8Asoundflower+OBS+%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9B%B4%E6%92%AD%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
      <url>/2020/08/16/mac%E4%B8%8Asoundflower+OBS+%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9B%B4%E6%92%AD%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>mac上使用腾讯会议+OBS客户端做直播<br><a href="https://www.jianshu.com/p/7764b4c643a6" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="1-本地微信公众号开发"><a href="#1-本地微信公众号开发" class="headerlink" title="1. 本地微信公众号开发"></a>1. 本地微信公众号开发</h2><p>参考：<a href="https://www.jianshu.com/p/05a58682cbac" target="_blank" rel="noopener">微信配置本地公众号开发环境</a></p><h2 id="2-runtime的addShutdownHook钩子不执行"><a href="#2-runtime的addShutdownHook钩子不执行" class="headerlink" title="2. runtime的addShutdownHook钩子不执行"></a>2. runtime的addShutdownHook钩子不执行</h2><p>参考：<a href="https://www.jianshu.com/p/8001a66d37c9" target="_blank" rel="noopener">Linux kill &amp; Java shutdownhook</a><br>最后用的kill-15 pid停止进程，或许有更好的方式，比如System.exit();</p><h4 id="读文件好说，项目启动时编译就会读"><a href="#读文件好说，项目启动时编译就会读" class="headerlink" title="读文件好说，项目启动时编译就会读"></a>读文件好说，项目启动时编译就会读</h4><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">def</span></span> file-url <span class="string">"/opt/xhlive-training/pkg/activity/db.edn"</span>)</span><br><span class="line">(<span class="name"><span class="builtin-name">def</span></span> messages (<span class="name"><span class="builtin-name">atom</span></span> (<span class="name">clojure.edn/read-string</span> (<span class="name"><span class="builtin-name">slurp</span></span> file-url))))</span><br></pre></td></tr></table></figure><h4 id="增加hook"><a href="#增加hook" class="headerlink" title="增加hook"></a>增加hook</h4><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> -main [&amp; args]</span><br><span class="line">  (<span class="name">start!</span>)</span><br><span class="line">  (<span class="name">.addShutdownHook</span> (<span class="name">Runtime/getRuntime</span>)</span><br><span class="line">                    (<span class="name"><span class="builtin-name">new</span></span> Thread (<span class="name"><span class="builtin-name">fn</span></span>[]</span><br><span class="line">                                  (<span class="name"><span class="builtin-name">prn</span></span> <span class="string">"I am going down...."</span>)</span><br><span class="line">                                  (<span class="name"><span class="builtin-name">when</span></span> (<span class="name"><span class="builtin-name">not</span></span> (<span class="name"><span class="builtin-name">empty?</span></span> @messages))</span><br><span class="line">                                    (<span class="name">spit</span> file-url @messages)))))</span><br><span class="line">  (<span class="name">println</span> <span class="string">"启动ws...."</span>))</span><br></pre></td></tr></table></figure><h2 id="3-项目启动时读文件，项目结束时写文件"><a href="#3-项目启动时读文件，项目结束时写文件" class="headerlink" title="3. 项目启动时读文件，项目结束时写文件"></a>3. 项目启动时读文件，项目结束时写文件</h2><p>类似在服务结束时增加一些销毁现场的能力。<a href="https://zhuanlan.zhihu.com/p/82350423" target="_blank" rel="noopener">Java中使用shutdownHook的一些注意事项</a><br>上博主的介绍相对来说能够帮助addShutdownHook的场景了。</p><p>本文介绍clojure版实践。</p><h4 id="slurp-读函数"><a href="#slurp-读函数" class="headerlink" title="slurp 读函数"></a>slurp 读函数</h4><p>读取一个文本文件的全部内容</p><blockquote><p>clojure.core/slurp<br>读取一个文件的全部内容，并以字符串形式返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(comment</span><br><span class="line">  (slurp &quot;files/file-test.txt&quot; :encoding &quot;UTF-8&quot;)</span><br><span class="line">  ;; =&gt; &quot;a txt file line1\na txt file line2\n这是中文字符&quot;</span><br><span class="line">  )</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="spit-写函数"><a href="#spit-写函数" class="headerlink" title="spit 写函数"></a>spit 写函数</h4><p>clojure.core/spit [file-path content &amp; options]<br>file-path：为文件路径；<br>content：为要写入文件的内容，所有的内容都会被转为String类型写入。<br>options：一些设置参数，常见的有：</p><p>:append true/false；当为true是，内容会从文件后面写入，如果要换行写入，需要在内容后面加入\n换行符，当为false时，会擦掉文件原有的内容。<br>:encoding “UTF-8”或”GBK”等。 默认是UTF-8.<br>spit函数会先打开文件，再将内容写入，再关闭文件。<br>spit都是以字符串形式写入。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(comment</span><br><span class="line">  (spit &quot;files/file-test.txt&quot; &quot;新增文件内容\n&quot; :append false :encoding &quot;GBK&quot;)</span><br><span class="line">  (slurp &quot;files/file-test.txt&quot; :encoding &quot;GBK&quot;)</span><br><span class="line">  ;; =&gt; &quot;新增文件内容\n&quot;</span><br><span class="line">  (slurp &quot;files/file-test.txt&quot; :encoding &quot;UTF-8&quot;)</span><br><span class="line">  ;; =&gt; &quot;�����ļ�����\n&quot;</span><br><span class="line">  (spit &quot;files/file-test.txt&quot; &quot;新增文件内容\n&quot; :append false)</span><br><span class="line">  (slurp &quot;files/file-test.txt&quot; :encoding &quot;GBK&quot;)</span><br><span class="line">  ;; =&gt; &quot;鏂板鏂囦欢鍐呭\n&quot;</span><br><span class="line">  (slurp &quot;files/file-test.txt&quot; :encoding &quot;UTF-8&quot;)</span><br><span class="line">  ;; =&gt; &quot;新增文件内容\n&quot;</span><br><span class="line"></span><br><span class="line">  ;; 逐行写大量数据到文件时，用spit会降低效率，因为它每写一次都会执行打开、关闭文件。</span><br><span class="line">  ;; 此时可以用java.io.writer.</span><br><span class="line">  (with-open [w (cio/writer &quot;files/file-test.txt&quot;)]</span><br><span class="line">    (doseq [l  [&quot;第一行&quot; &quot;第二行&quot; &quot;第三行&quot;]]</span><br><span class="line">      (.write w l)</span><br><span class="line">      ;; 新起一行</span><br><span class="line">      (.newLine w)))</span><br><span class="line">  )</span><br></pre></td></tr></table></figure></p><h2 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h2><p>clojure使用两个库，不附源码。<br><a href="https://github.com/ptaoussanis/sente" target="_blank" rel="noopener">https://github.com/ptaoussanis/sente</a><br><a href="https://github.com/ptaoussanis/timbre" target="_blank" rel="noopener">https://github.com/ptaoussanis/timbre</a></p><h2 id="mac上使用OBS做直播"><a href="#mac上使用OBS做直播" class="headerlink" title="mac上使用OBS做直播"></a>mac上使用OBS做直播</h2><p>我们的方案是把腾讯会议的会议内容做一定的背景、头像的裁剪处理后用OBS studio软件把流推出去，然后在客户端用m3u8的格式拉取播放。</p><p>为什么单独提一下这个，因为mac上能把麦克风的声音播出去，但是桌面的声音拨不出去。换句话说，你用网易云音乐，想只把这个软件的声音用OBS播出去，是不可以的，于是借助soundFlower这款软件可以实现，在腾讯会议上选择soundflower (64ch)这个通道。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4c0676502c8378d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>OBS里设置也选择soundflower (64ch)<br><img src="https://upload-images.jianshu.io/upload_images/4109786-e9541b0fff6ca3c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>可以只将腾讯会议的声音播出去。</p><p>然而，这样有产生个新问题，腾讯会议的声音都被OBS拨出去了，自己的电脑端却听不见了，于是参考<br><a href="https://www.bilibili.com/video/av32168478/" target="_blank" rel="noopener">在MacOS上利用OBS+Soundflower内录声音与直播</a>这个教程配置了聚合输入和混合输出，相当于将一个声音进行了扩展，这样才妥当了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/linux2_scdn/article/details/52575659" target="_blank" rel="noopener">clojure实战——IO（1）</a><br><a href="https://www.bilibili.com/video/av32168478/" target="_blank" rel="noopener">在MacOS上利用OBS+Soundflower内录声音与直播</a></p>]]></content>
      
      
      <categories>
          
          <category> cljs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ant Design Pro V4安装&quot;辛&quot;路历程</title>
      <link href="/2020/08/09/Ant%20Design%20Pro%20V4%E5%AE%89%E8%A3%85%22%E8%BE%9B%22%E8%B7%AF%E5%8E%86%E7%A8%8B/"/>
      <url>/2020/08/09/Ant%20Design%20Pro%20V4%E5%AE%89%E8%A3%85%22%E8%BE%9B%22%E8%B7%AF%E5%8E%86%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>新版本antd pro后台项目的demo搭建使用<br><a href="https://www.jianshu.com/p/5c5c2d0fc119" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>以前安装ant design pro从github上clone下来，两句话就在浏览器看到登录页面了，现在这个东西越来越臃肿了，我就想要个页面，跑起来给客户看看样子，结果废了老劲了，也不知道都往里面搞了啥。</p><p>今天记录一下吧。<br>参考<a href="https://pro.ant.design/docs/getting-started-cn" target="_blank" rel="noopener">官网</a>教程.<br>选择ant-design-pro,Pro V4，TypeScript，complete.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ npm create umi</span><br><span class="line">? Select the boilerplate type ant-design-pro</span><br><span class="line">? 🧙 Be the first to experience the new umi@3 ? Pro V4</span><br><span class="line">? 🤓 Which language do you want to use? TypeScript</span><br><span class="line">? 🚀 Do you need all the blocks or a simple scaffold? complete</span><br><span class="line">&gt; 🙈 complete mode can only use the version of antd@4</span><br><span class="line">Cloning into &apos;/Users/marvin/git/opensource/react/antd-pro&apos;...</span><br><span class="line">remote: Enumerating objects: 564, done.</span><br><span class="line">remote: Counting objects: 100% (564/564), done.</span><br><span class="line">remote: Compressing objects: 100% (481/481), done.</span><br><span class="line">remote: Total 564 (delta 89), reused 318 (delta 62), pack-reused 0</span><br><span class="line">Receiving objects: 100% (564/564), 461.41 KiB | 435.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (89/89), done.</span><br><span class="line">&gt; 🚚 clone success</span><br><span class="line">&gt; Clean up...</span><br><span class="line">✨ File Generate Done</span><br></pre></td></tr></table></figure></p><p>项目创建成功后执行<code>npm install</code>,出个错<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&gt; node-pty@0.10.0-beta9 install /Users/marvin/git/opensource/react/antd-pro/node_modules/node-pty</span><br><span class="line">&gt; node scripts/install.js</span><br><span class="line"></span><br><span class="line">gyp WARN install got an error, rolling back install</span><br><span class="line">gyp ERR! configure error</span><br><span class="line">gyp ERR! stack ZlibError: zlib: unexpected end of file</span><br><span class="line">gyp ERR! stack     at Unzip.write (/Users/marvin/.nvm/versions/node/v14.5.0/lib/node_modules/npm/node_modules/minizlib/index.js:147:22)</span><br><span class="line">gyp ERR! stack     at Unzip.flush (/Users/marvin/.nvm/versions/node/v14.5.0/lib/node_modules/npm/node_modules/minizlib/index.js:98:10)</span><br><span class="line">gyp ERR! stack     at Unzip.end (/Users/marvin/.nvm/versions/node/v14.5.0/lib/node_modules/npm/node_modules/minizlib/index.js:104:10)</span><br><span class="line">gyp ERR! stack     at Unpack.end (/Users/marvin/.nvm/versions/node/v14.5.0/lib/node_modules/npm/node_modules/tar/lib/parse.js:421:21)</span><br><span class="line">gyp ERR! stack     at IncomingMessage.onend (_stream_readable.js:679:10)</span><br><span class="line">gyp ERR! stack     at Object.onceWrapper (events.js:420:28)</span><br><span class="line">gyp ERR! stack     at IncomingMessage.emit (events.js:326:22)</span><br><span class="line">gyp ERR! stack     at IncomingMessage.&lt;anonymous&gt; (/Users/marvin/.nvm/versions/node/v14.5.0/lib/node_modules/npm/node_modules/request/request.js:1000:23)</span><br><span class="line">gyp ERR! stack     at IncomingMessage.emit (events.js:326:22)</span><br><span class="line">gyp ERR! stack     at TLSSocket.socketCloseListener (_http_client.js:435:11)</span><br><span class="line">gyp ERR! System Darwin 19.6.0</span><br><span class="line">gyp ERR! command &quot;/Users/marvin/.nvm/versions/node/v14.5.0/bin/node&quot; &quot;/Users/marvin/.nvm/versions/node/v14.5.0/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js&quot; &quot;rebuild&quot;</span><br><span class="line">gyp ERR! cwd /Users/marvin/git/opensource/react/antd-pro/node_modules/node-pty</span><br><span class="line">gyp ERR! node -v v14.5.0</span><br><span class="line">gyp ERR! node-gyp -v v5.1.0</span><br><span class="line">gyp ERR! not ok</span><br></pre></td></tr></table></figure></p><p>查了半天，按照<a href="https://www.jianshu.com/p/a2a2ddeb174c" target="_blank" rel="noopener">https://www.jianshu.com/p/a2a2ddeb174c</a><br>的思路，错误变成了下面这个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br><span class="line"></span><br><span class="line">&gt; fsevents@1.2.13 install /Users/marvin/git/opensource/react/antd-pro/node_modules/jest-environment-jsdom-fourteen/node_modules/fsevents</span><br><span class="line">&gt; node install.js</span><br><span class="line"></span><br><span class="line">No receipt for &apos;com.apple.pkg.CLTools_Executables&apos; found at &apos;/&apos;.</span><br><span class="line"></span><br><span class="line">No receipt for &apos;com.apple.pkg.DeveloperToolsCLILeo&apos; found at &apos;/&apos;.</span><br><span class="line"></span><br><span class="line">No receipt for &apos;com.apple.pkg.DeveloperToolsCLI&apos; found at &apos;/&apos;.</span><br><span class="line"></span><br><span class="line">gyp: No Xcode or CLT version detected!</span><br><span class="line">gyp ERR! configure error</span><br><span class="line">gyp ERR! stack Error: `gyp` failed with exit code: 1</span><br><span class="line">gyp ERR! stack     at ChildProcess.onCpExit (/Users/marvin/.nvm/versions/node/v12.8.0/lib/node_modules/npm/node_modules/node-gyp/lib/configure.js:344:16)</span><br><span class="line">gyp ERR! stack     at ChildProcess.emit (events.js:203:13)</span><br><span class="line">gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:272:12)</span><br><span class="line">gyp ERR! System Darwin 19.6.0</span><br><span class="line">gyp ERR! command &quot;/Users/marvin/.nvm/versions/node/v12.8.0/bin/node&quot; &quot;/Users/marvin/.nvm/versions/node/v12.8.0/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js&quot; &quot;rebuild&quot;</span><br><span class="line">gyp ERR! cwd /Users/marvin/git/opensource/react/antd-pro/node_modules/jest-environment-jsdom-fourteen/node_modules/fsevents</span><br><span class="line">gyp ERR! node -v v12.8.0</span><br><span class="line">gyp ERR! node-gyp -v v5.0.3</span><br><span class="line">gyp ERR! not ok</span><br></pre></td></tr></table></figure></p><p>在查询错误，终于<a href="https://juejin.im/post/6844904058076020743" target="_blank" rel="noopener">https://juejin.im/post/6844904058076020743</a>上找到了解决方案。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><ol><li>尝试用如下命令进行修复<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xcode-select --install</span><br></pre></td></tr></table></figure></li></ol><p>复制代码系统提示如下信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select: error: command line tools are already installed, use &quot;Software Update&quot; to install updates</span><br></pre></td></tr></table></figure></p><p>复制代码而事实上并没有所谓的”Software Update”可以更新</p><ol start="2"><li>正确姿势<br>一筹莫展之际，找到如下解决方案：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm -rf $(xcode-select -print-path)</span><br><span class="line">$ xcode-select --install</span><br></pre></td></tr></table></figure></li></ol><p>终于安装成功了。</p>]]></content>
      
      
      <categories>
          
          <category> antd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> antd </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>微信配置本地公众号开发环境</title>
      <link href="/2020/08/06/%E5%BE%AE%E4%BF%A1%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2020/08/06/%E5%BE%AE%E4%BF%A1%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%85%AC%E4%BC%97%E5%8F%B7%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>配置微信公众号的本地开发环境<br><a href="https://www.jianshu.com/p/05a58682cbac" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="第一步：申请微信测试号"><a href="#第一步：申请微信测试号" class="headerlink" title="第一步：申请微信测试号"></a>第一步：申请微信测试号</h2><p><a href="https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;t=sandbox/index" target="_blank" rel="noopener">https://mp.weixin.qq.com/debug/cgi-bin/sandboxinfo?action=showinfo&amp;t=sandbox/index</a></p><p> <img src="https://upload-images.jianshu.io/upload_images/4109786-56a468432203bf0e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="长图"></p><h2 id="第二步：在申请的测试号上配置回调域名等"><a href="#第二步：在申请的测试号上配置回调域名等" class="headerlink" title="第二步：在申请的测试号上配置回调域名等"></a>第二步：在申请的测试号上配置回调域名等</h2><p><img src="https://upload-images.jianshu.io/upload_images/4109786-ab666f8bdcd1a626.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="第三步：核心"><a href="#第三步：核心" class="headerlink" title="第三步：核心"></a>第三步：核心</h2><p>在上面的<code>| 网页帐号 | [网页授权获取用户基本信息]&quot;网页授权获取用户基本信息&quot;</code>后点击【修改】,增加本地ip，注意</p><blockquote><p>一定带着端口号</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/4109786-3e2ccf3d2fe6b4bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><h2 id="第四步：微信开发者工具访问地址"><a href="#第四步：微信开发者工具访问地址" class="headerlink" title="第四步：微信开发者工具访问地址"></a>第四步：微信开发者工具访问地址</h2><p>redirect_uri要<a href="http://tool.chinaz.com/tools/urlencode.aspx" target="_blank" rel="noopener">在这儿</a>进行URL编码，然后用微信开发者工具打开<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx6d8c0247f15f96df&amp;redirect_uri=http%3a%2f%2f192.168.0.110%3a8000%2fweixin-redirect&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=STATE#wechat_redirect</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-eed37b103db621f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ul><li>redirect_uri 参数错误</li></ul><ol><li>微信测试号上没有配置授权回调域名</li><li>配置的授权回调页面域名跟请求时带着的参数不一样</li><li>本地开发有端口，配置的回调域名没有带着端口</li></ol>]]></content>
      
      
      <categories>
          
          <category> cljs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>【转】Clojure 引用java文件 lein javac 报ClassNotFoundException</title>
      <link href="/2020/07/23/%E3%80%90%E8%BD%AC%E3%80%91Clojure%20%E5%BC%95%E7%94%A8java%E6%96%87%E4%BB%B6%20lein%20javac%20%E6%8A%A5ClassNotFoundException/"/>
      <url>/2020/07/23/%E3%80%90%E8%BD%AC%E3%80%91Clojure%20%E5%BC%95%E7%94%A8java%E6%96%87%E4%BB%B6%20lein%20javac%20%E6%8A%A5ClassNotFoundException/</url>
      
        <content type="html"><![CDATA[<p>在luminus web的clojure模板里直接使用java文件的正确姿势。<br><a href="https://www.jianshu.com/p/80e3fcb4267e" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>经过两次才彻底解决的一个问题，把同事总计的在自己的小本子上转存一下。<a href="[http://blog.3vyd.com/blog/posts-output/2020-07-04-Clojure-Java-%E6%96%87%E4%BB%B6%E7%BC%96%E8%BE%91%E9%94%99%E8%AF%AF/](http://blog.3vyd.com/blog/posts-output/2020-07-04-Clojure-Java-%E6%96%87%E4%BB%B6%E7%BC%96%E8%BE%91%E9%94%99%E8%AF%AF/">猛戳此处</a><br>)进入我司blog系统。</p><p>在Clojure中使用Luminus进行Web开发时，如果有自定义Java文件，在<strong>开发环境</strong>中编译（<code>lein javac</code>）时，会出现<code>ClassNotFoundException</code>错误。</p><p>产生原因：在开发环境下，<code>env-&gt;dev-&gt;clj-&gt;user.clj</code>文件会自动加载，并且是在Java文件编译前执行。<code>user.clj</code>文件会引用<code>core</code>下的<code>start-app</code>，<code>core.clj</code>文件又会引用<code>handler</code>，如果在<code>handler</code>的引用文件中引用了自定义Java类时，就会出现<code>ClassNotFoundException</code>错误。</p><p>解决方法一：修改<code>user.clj</code>文件名</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;; 1. 将 user.clj 文件名修改为 hctest.clj</span></span><br><span class="line"><span class="comment">;; 2. 修改 hctest.clj 文件命名空间</span></span><br><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> hctest)</span><br><span class="line"><span class="comment">;; 3. 修改 project.clj 文件下的 :project/dev -&gt; :repl-options -&gt; :init-ns 值</span></span><br><span class="line">&#123;<span class="symbol">:project/dev</span></span><br><span class="line"> &#123;<span class="symbol">:repl-options</span></span><br><span class="line">  &#123;<span class="symbol">:init-ns</span> hctest&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>解决方法二：移动<code>user.clj</code>文件</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;; 可选 --&gt; 1. 修改 project.clj 下的 :profiles -&gt; :uberjar -&gt; :prep-tasks，在开始添加 "javac"</span></span><br><span class="line">&#123;<span class="symbol">:profiles</span></span><br><span class="line"> &#123;<span class="symbol">:uberjar</span> </span><br><span class="line">  &#123;<span class="symbol">:prep-tasks</span> [<span class="string">"javac"</span> <span class="string">"compile"</span>]&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">;; 2. 将 env-&gt;clj-&gt;user.clj 文件移到到指定文件夹下，比如 env-&gt;clj-&gt;empty-&gt; user.clj，并修改命名空间为 empty.user</span></span><br><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> empty.user)</span><br><span class="line"><span class="comment">;; 3. 修改 project.clj 下的 :project/dev -&gt; :repl-options -&gt; :init-ns 值</span></span><br><span class="line">&#123;<span class="symbol">:project/dev</span></span><br><span class="line"> &#123;<span class="symbol">:repl-options</span></span><br><span class="line">  &#123;<span class="symbol">:init-ns</span> empty.user&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h4 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h4><p><a href="https://github.com/luminus-framework/luminus-template/issues/319" target="_blank" rel="noopener">https://github.com/luminus-framework/luminus-template/issues/319</a></p>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>postgressql数据库+postgrest服务搭建</title>
      <link href="/2020/06/21/postgressql%E6%95%B0%E6%8D%AE%E5%BA%93+postgrest%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/06/21/postgressql%E6%95%B0%E6%8D%AE%E5%BA%93+postgrest%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>在linux上搭建postgresql和postgrest服务<br><a href="https://www.jianshu.com/p/a71fa1207042" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>环境：ubuntu</p><h2 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h2><p>postgresql是又一款开源的关系数据库，经常有人拿来跟mysql进行对比，比如<a href="https://www.zhihu.com/question/20010554" target="_blank" rel="noopener">PostgreSQL 与 MySQL 相比，优势何在？</a>，上网搜了下，还真不少。本人了解太少，不做评论，老板要求用用咱就用，又可以学东西了（又有坑要踩了），学无止境…。</p><h2 id="postgresSql"><a href="#postgresSql" class="headerlink" title="postgresSql"></a>postgresSql</h2><h4 id="1-安装服务"><a href="#1-安装服务" class="headerlink" title="1.安装服务"></a>1.安装服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install postgresql postgresql-contrib</span><br></pre></td></tr></table></figure><h4 id="2-进入服务"><a href="#2-进入服务" class="headerlink" title="2.进入服务"></a>2.进入服务</h4><p>上一步安装完成后，执行如下命令启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service postgresql status</span><br><span class="line">service postgresql start</span><br></pre></td></tr></table></figure></p><p>默认情况下，PostgreSQL 会创建一个拥有所权限的特殊用户 postgres。要实际使用 PostgreSQL，你必须先登录该账户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su postgres</span><br></pre></td></tr></table></figure></p><p>你的提示符会更改为类似于以下的内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postgres@ubuntu-VirtualBox:/home/ubuntu$</span><br></pre></td></tr></table></figure></p><p>现在，使用 psql 来启动 PostgreSQL Shell：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql</span><br></pre></td></tr></table></figure></p><p>你应该会看到如下提示符：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postgress=#</span><br></pre></td></tr></table></figure></p><p>要查看现有的所有表，输入如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\l</span><br></pre></td></tr></table></figure></p><p>你可以输入 \q 以退出，输入 \? 获取帮助。其他更多命令参考：<a href="https://blog.csdn.net/ifucking/article/details/80005241" target="_blank" rel="noopener">PostgreSQL命令行常用命令psql</a></p><h4 id="3-修改postgres数据库用户的密码"><a href="#3-修改postgres数据库用户的密码" class="headerlink" title="3.修改postgres数据库用户的密码"></a>3.修改postgres数据库用户的密码</h4><p>  1) 打开客户端工具（psql）<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql  (或者分两步： sudo -u postgres -i; psql)</span><br></pre></td></tr></table></figure></p><p>其中，<code>sudo -u postgres</code>是使用postgres 用户登录的意思</p><p>PostgreSQL数据默认会创建一个postgres的数据库用户作为数据库的管理员，密码是随机的，创建用户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postgres=#</span><br></pre></td></tr></table></figure></p><p><code>postgres=#</code>为PostgreSQL下的命令提示符，–注意最后的分号；</p><p>   2) 退出PostgreSQL psql客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">postgres=# \q</span><br></pre></td></tr></table></figure></p><ol start="4"><li>修改ubuntu操作系统的postgres用户的密码（密码要与数据库用户postgres的密码相同）</li></ol><ul><li><p>切换到root用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure></li><li><p>删除PostgreSQL用户密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd -d postgres</span><br></pre></td></tr></table></figure></li></ul><p>passwd -d 是清空指定用户密码的意思</p><ul><li>设置PostgreSQL系统用户的密码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres passwd</span><br></pre></td></tr></table></figure></li></ul><p>按照提示，输入两次新密码</p><p>输入新的 UNIX 密码</p><p>重新输入新的 UNIX 密码</p><p>passwd：已成功更新密码</p><ol start="5"><li>修改PostgresSQL数据库配置实现远程访问<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/postgresql/9.5/main/postgresql.conf</span><br></pre></td></tr></table></figure></li></ol><p>监听任何地址访问，修改连接权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#listen_addresses = &apos;localhost&apos; 改为 listen_addresses = &apos;*&apos; (uncomment it)</span><br></pre></td></tr></table></figure></p><p>启用密码验证<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#password_encryption = on 改为 password_encryption = on (uncomment it)</span><br><span class="line">vi /etc/postgresql/9.6/main/pg_hba.conf</span><br></pre></td></tr></table></figure></p><p> 在文档末尾加上以下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host all all 0.0.0.0 0.0.0.0 md5</span><br></pre></td></tr></table></figure></p><p>创建用户、数据库，授权<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">postgres=# CREATE USER training WITH CREATEROLE PASSWORD &apos;training_plat&apos;;</span><br><span class="line">postgres=# CREATE DATABASE traindb OWNER lizy;</span><br><span class="line">postgres=# GRANT ALL PRIVILEGES ON DATABASE traindb to lizy;</span><br></pre></td></tr></table></figure></p><p>postgresql的教程，目前刚上手，推荐：</p><h2 id="postgrest服务"><a href="#postgrest服务" class="headerlink" title="postgrest服务"></a>postgrest服务</h2><p>使用源码下载安装的方式</p><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># download from https://github.com/PostgREST/postgrest/releases/latest</span><br><span class="line"># 下载后进行解压</span><br><span class="line">curl https://github.com/PostgREST/postgrest/releases/download/v7.0.1/postgrest-v7.0.1-linux-x64-static.tar.xz</span><br><span class="line">tar xfJ postgrest-v7.0.1-linux-x64-static.tar.xz</span><br></pre></td></tr></table></figure><p>解压文件只有一个名为<code>postgrest</code>的可执行脚本。</p><h4 id="2-运行postgrest服务"><a href="#2-运行postgrest服务" class="headerlink" title="2.运行postgrest服务"></a>2.运行postgrest服务</h4><p>运行postgrest是需要指定一个conf文件，文件名可以随意，比如<code>tutorial.conf</code>,内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db-uri = &quot;postgres://training:training_plat@localhost:5432/traindb&quot;</span><br><span class="line">db-schema = &quot;testapp_db, basic_auth,global_info&quot;</span><br><span class="line">db-anon-role = &quot;training&quot;</span><br><span class="line">jwt-secret = &quot;MqQx7uwtxH3JjphNvRzgeQMkNjDt5JzfpqWwNHrQ13c=&quot;</span><br><span class="line">log_statement = &quot;all&quot;</span><br><span class="line">server-port = 3032</span><br></pre></td></tr></table></figure></p><p>如果不指定<code>server-port</code>,则默认的端口是3000。<br>有了配置文件后在解压后的目录执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./postgrest tutorial.conf</span><br></pre></td></tr></table></figure></p><p>推荐：总是在解压目录执行可执行脚本，写路径还是麻烦了些，可以将此脚本加入环境变量<code>/usr/local/bin</code>下，这样任意目录都可以执行该命令。</p><h2 id="一个简单用来启动postgrest的脚本"><a href="#一个简单用来启动postgrest的脚本" class="headerlink" title="一个简单用来启动postgrest的脚本"></a>一个简单用来启动postgrest的脚本</h2><p>作用：修改了数据库以后，需要重启postgrest服务，接口才能生效，在jenkins上可以执行脚本重启，脚本内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#获取第1个参数，conf文件，路径+文件名</span><br><span class="line">#获取第2个参数，postgrest服务的log目录</span><br><span class="line">config_file=$1</span><br><span class="line">log_dir=$2</span><br><span class="line"></span><br><span class="line">echo &quot;================== server restart start=======================&quot;</span><br><span class="line">pid=`ps -aux | grep $&#123;config_file&#125; | grep -v bash |grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">if [ -n &quot;$&#123;pid&#125;&quot; ]</span><br><span class="line">then</span><br><span class="line">#!kill -9 强制终止</span><br><span class="line">   echo &quot;kill -9 的pid:&quot; $pid</span><br><span class="line">   kill -9 $pid</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">nohup postgrest $&#123;config_file&#125; &gt; $&#123;log_dir&#125;nohup.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">echo &quot;================== server restart end =======================&quot;</span><br></pre></td></tr></table></figure></p><p>顺便，推荐一款mac的数据库连接客户端<code>Dbeaver</code>尤其是看postgresql的表关联关系还是很不错的。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-626ca2075400acf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ER图"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/tanql/p/10444512.html" target="_blank" rel="noopener">Install Postgresql on Ubuntu</a><br><a href="http://postgrest.org" target="_blank" rel="noopener">PostgREST官网</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> postgrest </tag>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>emacs的cider-debug-defun-point</title>
      <link href="/2020/06/08/emacs%E7%9A%84cider-debug-defun-point/"/>
      <url>/2020/06/08/emacs%E7%9A%84cider-debug-defun-point/</url>
      
        <content type="html"><![CDATA[<p>用emacs工具debug后端的clj代码</p><p><a href="https://www.jianshu.com/p/36a065d7d46c" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>演示代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">;; 1. Call M-x cider-debug-init-connectiong(only needed once),</span><br><span class="line">;; 2. Call M-x cider-debug-defun-at-ponit with point inside this defn.</span><br><span class="line">;; 3. Run the function, and using key word</span><br><span class="line">;; 4. link:https://docs.cider.mx/cider/debugging/debugger.html</span><br><span class="line">(defn foo [n]</span><br><span class="line">  (map (partial * 2)</span><br><span class="line">       (filter even?</span><br><span class="line">               (range 0 n))))</span><br><span class="line"></span><br><span class="line">;; break out when reaching a condition</span><br><span class="line">(defn foo2 []</span><br><span class="line">  (dotimes [i 10]</span><br><span class="line">    #dbg ^&#123;:break/when (= i 7)&#125;</span><br><span class="line">    (prn i)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(defn eval-msg [&#123;:keys [inspect] :as msg&#125;]</span><br><span class="line">  (if inspect</span><br><span class="line">    #break (clojure.inspector/inspect msg)</span><br><span class="line">    msg))</span><br></pre></td></tr></table></figure></p><p>进入debug<br><code>M-x cider-debug-defun-at-point</code></p><p>常见的操作：</p><p>j   Inject a value into running code</p><p>e   <code>C-c M-:</code>  表达式求值</p><p>enlighten模式：查看最后一次表达式的值<br><code>M-x cider-enlighten-mode</code><br><code>C-M-x 或者 C-x C-e</code> 开始执行。 <code>C-c C-k</code>取消操作。<br><code>M-x cider-enlighten-mode</code>关闭enlighten模式<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> foo2 [x]</span><br><span class="line">  (<span class="name"><span class="builtin-name">let</span></span> [y (<span class="name"><span class="builtin-name">*</span></span> <span class="number">3</span> x)]</span><br><span class="line">    (<span class="name"><span class="builtin-name">+</span></span> x y)))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> bar [x]</span><br><span class="line">  (<span class="name"><span class="builtin-name">dotimes</span></span> [i x]</span><br><span class="line">    (<span class="name">foo2</span> i)))</span><br><span class="line"></span><br><span class="line">(<span class="name">bar</span> <span class="number">5</span>)</span><br></pre></td></tr></table></figure></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://docs.cider.mx/cider/debugging/debugger.html" target="_blank" rel="noopener">debugger</a><br><a href="https://docs.cider.mx/cider/debugging/enlighten.html" target="_blank" rel="noopener">Enlighten</a></p>]]></content>
      
      
      <categories>
          
          <category> emacs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>emacs里的小游戏</title>
      <link href="/2020/04/24/emacs%E9%87%8C%E7%9A%84%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
      <url>/2020/04/24/emacs%E9%87%8C%E7%9A%84%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<p>物料的时候玩玩emacs里的小游戏放松放松</p><p><a href="https://www.jianshu.com/p/1cf86d794219" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>引用：<a href="https://linux.cn/article-11949-1-rel.html" target="_blank" rel="noopener">https://linux.cn/article-11949-1-rel.html</a></p><h2 id="1-消消乐"><a href="#1-消消乐" class="headerlink" title="1. 消消乐"></a>1. 消消乐</h2><p><code>M-x bubble</code> 游戏相当简单：你必须用尽可能少移动清除尽可能多的“泡泡”。当你移除气泡时，其他气泡会掉落并粘在一起。这是一款有趣的游戏，此外如果你使用 Emacs 的图形用户界面，它还支持图像显示。而且它还支持鼠标。</p><p>你可以通过调用 <code>M-x bubbles-set-game-&lt;difficulty&gt;</code>来设置难度，其中<code>&lt;difficulty&gt;</code>可以是这些之一：easy、medium、difficult、hard 或 userdefined。此外，你可以使用：<code>M-x custom-group bubbles</code>来更改图形、网格大小和颜色。</p><p>由于它即简单又有趣，这是 Emacs 中我最喜欢的游戏之一。</p><h2 id="2-五子棋"><a href="#2-五子棋" class="headerlink" title="2. 五子棋"></a>2. 五子棋</h2><p>你必须将 5 个方块连成一条线，井字棋风格。你可以运行 <code>M-x gomoku</code>来与 Emacs 对抗。游戏还支持鼠标，非常方便。你也可以自定义 gomoku 组来调整网格的大小。</p><h2 id="3-乒乓、贪食蛇、俄罗斯方块"><a href="#3-乒乓、贪食蛇、俄罗斯方块" class="headerlink" title="3. 乒乓、贪食蛇、俄罗斯方块"></a>3. 乒乓、贪食蛇、俄罗斯方块</h2><p>这些经典游戏都是使用 Emacs 包 gamegrid 实现的，这是一个用于构建网格游戏（如俄罗斯方块和贪吃蛇）的通用框架。gamegrid 包的伟大之处在于它同时兼容图形化和终端 Emacs：如果你在 GUI 中运行 Emacs，你会得到精美的图形；如果你没有，你看到简单的 ASCII 艺术。</p><p>你可以通过输入 M-x pong、M-x snake、M-x tetris 来运行这些游戏。</p><h2 id="4-Zone"><a href="#4-Zone" class="headerlink" title="4. Zone"></a>4. Zone</h2><p>我的另一个最爱。这是一个屏幕保护程序——或者更确切地说，是一系列的屏幕保护程序。</p><p>输入 <code>M-x zone</code>，然后看看屏幕上发生了什么！</p><p>你可以通过运行 <code>M-x zone-when-idle</code>（或从 elisp 调用它）来配置屏幕保护程序的空闲时间，时间以秒为单位。你也可以通过 <code>M-x zone-leave-me-alone</code>来关闭它。</p><p>如果在你的同事看着的时候启动它，你的同事肯定会抓狂的。go</p>]]></content>
      
      
      <categories>
          
          <category> emacs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux shell 监控应用存活并发邮件通知</title>
      <link href="/2020/04/18/Linux%20shell%20%E7%9B%91%E6%8E%A7%E5%BA%94%E7%94%A8%E5%AD%98%E6%B4%BB%E5%B9%B6%E5%8F%91%E9%82%AE%E4%BB%B6%E9%80%9A%E7%9F%A5/"/>
      <url>/2020/04/18/Linux%20shell%20%E7%9B%91%E6%8E%A7%E5%BA%94%E7%94%A8%E5%AD%98%E6%B4%BB%E5%B9%B6%E5%8F%91%E9%82%AE%E4%BB%B6%E9%80%9A%E7%9F%A5/</url>
      
        <content type="html"><![CDATA[<p>curl需要监控的接口，将结果发送邮件通知，也可以判断REST接口的返回数据内容。<br><a href="https://www.jianshu.com/p/4b025d8dc12a" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ol><li><p>每天执行三次，分别为：7:10，12:10，16:10</p></li><li><p>7:10执行日期参数为T-1，12:10,16:10执行日期参数为T(T是指当天)</p></li><li><p>每次执行判断一下接口返回的数据量，以邮件形式发送给相关人员</p></li></ol><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var1=$1</span><br><span class="line">webUrls=(</span><br><span class="line">&quot;http://sso1169sjdptest.haier.net/fx_app/common/inter?fresh=1&amp;dataType=rrs_fxapp_for_leader&amp;params=period_date::$&#123;var1&#125;&quot;</span><br><span class="line">&quot;http://sso1169sjdptest.haier.net/fx_app/common/inter?fresh=1&amp;dataType=rrs_fxapp_m_wl_gongm_result_info_view&amp;params=period_date::$&#123;var1&#125;&quot;</span><br><span class="line">&quot;http://sso1169sjdptest.haier.net/fx_app/common/inter?fresh=1&amp;dataType=rrs_fxapp_m_wl_lianq_result_info_view&amp;params=period_date::$&#123;var1&#125;&quot;</span><br><span class="line">&quot;http://sso1169sjdptest.haier.net/fx_app/common/inter?fresh=1&amp;dataType=rrs_fxapp_for_soldier_mall_score&amp;params=period_date::$&#123;var1&#125;&quot;</span><br><span class="line">)</span><br><span class="line">declare -a name</span><br><span class="line"></span><br><span class="line">#使用curl命令检查http服务器的状态</span><br><span class="line">#-m设置curl不管访问成功或失败，最大消耗的时间为5秒，5秒连接服未响应则视为无法连接</span><br><span class="line">#-s设置静默连接，不显示连接时的连接速度、时间消耗等信息</span><br><span class="line">#-o将curl下载的页面内容导出到/dev/null(默认会在屏幕显示页面内容)</span><br><span class="line">#-w设置curl命令需要显示的内容%&#123;http_code&#125;，指定curl返回服务器的状态码</span><br><span class="line"># 如果不是看结果，是看http状态的话使用如下函数</span><br><span class="line">check_http()&#123;</span><br><span class="line">    status_code=$(curl -m 5 -s-o /dev/null -w %&#123;http_code&#125; https://www.baidu.com)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function httpRequest()</span><br><span class="line">&#123;</span><br><span class="line">    echo  &quot;日期参数：$&#123;var1&#125;&quot;</span><br><span class="line">    for ((i=0; i&lt;$&#123;#webUrls[@]&#125;; i++))</span><br><span class="line">    do</span><br><span class="line">        echo &quot;顺序：$&#123;i&#125;，请求：$&#123;webUrls[i]&#125;&quot;</span><br><span class="line">        res=$(curl -m 5 -s $&#123;webUrls[i]&#125; | jq &apos;.data&apos; | jq &apos;length&apos;)</span><br><span class="line">        name[$i]=$res</span><br><span class="line">        echo $&#123;name[$i]&#125; #为方便检查，加了打印</span><br><span class="line">    done</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">httpRequest &quot;$@&quot;</span><br><span class="line"></span><br><span class="line">emailContent=&quot;链接数据接口：$&#123;name[0]&#125;      中心数据接口：$&#123;name[1]&#125;      链群数据接口：$&#123;name[2]&#125;     评分数据接口：$&#123;name[3]&#125;&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;$&#123;emailContent&#125;&quot; | mail -s &apos;4个指标接口当前的数据通知&apos; marvin.ma@redcreation.net,zhangsan@163.com</span><br></pre></td></tr></table></figure><h2 id="收到的邮件："><a href="#收到的邮件：" class="headerlink" title="收到的邮件："></a>收到的邮件：</h2><p><img src="https://upload-images.jianshu.io/upload_images/4109786-dcac1c6ef2dffc2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="email"></p><h2 id="知识储备"><a href="#知识储备" class="headerlink" title="知识储备"></a>知识储备</h2><h4 id="获取当前时间："><a href="#获取当前时间：" class="headerlink" title="获取当前时间："></a>获取当前时间：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">time=$(date &quot;+%Y%m%d-%H%M%S&quot;)</span><br><span class="line">time2=$(date &quot;+%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line">echo &quot;$&#123;time&#125;&quot;</span><br></pre></td></tr></table></figure><p>昨天:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $(date +&quot;%Y-%m-%d&quot; -d &quot;-1day&quot;)</span><br></pre></td></tr></table></figure></p><p>其他参考：<a href="https://blog.csdn.net/liu0808/article/details/79899139" target="_blank" rel="noopener">shell date 获取昨天日期</a></p><h4 id="curl-到json内容"><a href="#curl-到json内容" class="headerlink" title="curl 到json内容:"></a>curl 到json内容:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#使用curl命令检查http服务器的状态</span><br><span class="line">#-m设置curl不管访问成功或失败，最大消耗的时间为5秒，5秒连接服未响应则视为无法连接</span><br><span class="line">#-s设置静默连接，不显示连接时的连接速度、时间消耗等信息</span><br><span class="line">#-o将curl下载的页面内容导出到/dev/null(默认会在屏幕显示页面内容)</span><br><span class="line">#-w设置curl命令需要显示的内容%&#123;http_code&#125;，指定curl返回服务器的状态码</span><br><span class="line">res=$(curl  -s &quot;https://www.baidu.com&quot;)</span><br><span class="line">echo  $res</span><br></pre></td></tr></table></figure><h4 id="接收参数："><a href="#接收参数：" class="headerlink" title="接收参数："></a>接收参数：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 必须写绝对路径，不然crontab不执行，因为找不到路径</span><br><span class="line">log=/opt/jc/task.log</span><br><span class="line">var1=$1</span><br><span class="line">test()</span><br><span class="line">&#123;</span><br><span class="line">    time=$(date &quot;+%Y-%m-%d %H:%M:%S&quot;)</span><br><span class="line">    echo &quot;$&#123;time&#125; do something, set var1 = $&#123;var1&#125;&quot; &gt;&gt; $log</span><br><span class="line">&#125;</span><br><span class="line">test</span><br></pre></td></tr></table></figure><p>测试定时任务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/crontab</span><br></pre></td></tr></table></figure></p><p>添加一行，每2分钟执行一次<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/2 * * * * root /opt/jc/curl.sh hahaha</span><br></pre></td></tr></table></figure></p><p>为了完成这个需求，我的crontab的内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10 7 * * * root /opt/jc/curl.sh $(date +&quot;%Y%m%d&quot; -d &quot;-1day&quot;)</span><br><span class="line">10 12,16 * * * root /opt/jc/curl.sh $(date &quot;+%Y%m%d&quot;)</span><br></pre></td></tr></table></figure></p><h4 id="shell处理json数据工具—–jq"><a href="#shell处理json数据工具—–jq" class="headerlink" title="shell处理json数据工具—–jq"></a>shell处理json数据工具—–jq</h4><p>获取接口返回的数据中<code>data</code>的值数组大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res=$(curl -m 5 -s $&#123;webUrls[i]&#125;  |  jq &apos;.data&apos;  |  jq &apos;length&apos;)</span><br></pre></td></tr></table></figure></p><p>其他jq的用法参考：<a href="https://www.cnblogs.com/lurenjiashuo/p/bash-json-jq.html" target="_blank" rel="noopener">shell脚本处理JSON数据工具jq</a></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><ol><li>脚本不执行不知道为啥<br>方案：先用如下命令看看crontab服务是否正常，不正常的进行安装。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service crond status</span><br></pre></td></tr></table></figure></li></ol><p>没有安装的话先安装。</p><ol start="2"><li><p>定时任务出错<br>出错的情况会有邮件通知，位置在<code>/var/mail/root</code>中，可以查看脚本执行失败的原因</p></li><li><p>Shell 脚本时显示declare not found的问题<br>ubuntu系统将默认的bash换成了dash，需要手动替换下，参考下面的参考链接<a href="http://blog.sina.com.cn/s/blog_7cb1c50e0100rapz.html" target="_blank" rel="noopener">Shell 脚本时显示declare not found的问题</a>配置。</p></li></ol><h4 id="shell里发送邮件"><a href="#shell里发送邮件" class="headerlink" title="shell里发送邮件"></a>shell里发送邮件</h4><p>使用<a href="https://www.cnblogs.com/kerrycode/p/6432579.html" target="_blank" rel="noopener">sendmail</a>工具发送邮件。<br><a href="http://blog.sina.com.cn/s/blog_7cb1c50e0100rapz.html" target="_blank" rel="noopener">Shell 脚本时显示declare not found的问题</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux 配置sendmail发送邮件</title>
      <link href="/2020/04/18/Linux%20%E9%85%8D%E7%BD%AEsendmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
      <url>/2020/04/18/Linux%20%E9%85%8D%E7%BD%AEsendmail%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>linux服务器配置sendmail在命令行里方便发送邮件<br><a href="https://www.jianshu.com/p/e663f29f0eca" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><h2 id="Ubuntu-安装工具"><a href="#Ubuntu-安装工具" class="headerlink" title="Ubuntu 安装工具"></a>Ubuntu 安装工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install heirloom-mailx</span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p><code>vim /etc/s-nail.rc</code>在文件最后加入如下配置项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set from=&quot;mailtest@3vyd.com&quot;</span><br><span class="line">set smtp=&quot;smtp.exmail.qq.com&quot;</span><br><span class="line">set smtp-auth-user=&quot;mailtest@3vyd.com&quot;</span><br><span class="line">set smtp-auth-password=&quot;xxxx&quot;</span><br><span class="line">set smtp-auth=login</span><br></pre></td></tr></table></figure></p><h2 id="测试邮件"><a href="#测试邮件" class="headerlink" title="测试邮件"></a>测试邮件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;测试的邮件内容&quot; | s-nail  -s &quot;测试的邮件主题&quot; marvin.ma@redcreation.net</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/4109786-015b0f1f48e87cc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mail"></p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>root@hk-server:~# Could not connect: Operation now in progress<br>“/root/dead.letter” 8/209<br>… message not sent</p><p>这里注意！因为是阿里云服务器，可能是25端口被封，得改用465端口，所以配置内容那里要注意将smtp配置加上端口：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set smtp=smtp.exmail.qq.com:465</span><br></pre></td></tr></table></figure></p><h2 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h2><ol><li><p>install Mailx </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y mailx</span><br></pre></td></tr></table></figure></li><li><p>Config SMTP Params</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/mail.rc</span><br><span class="line"></span><br><span class="line"># Add Gmail SMTP</span><br><span class="line">set from=yiilib.com_t@gmail.com  #send from mail address</span><br><span class="line">set smtp=smtp.gmail.com    #SMTP server domain</span><br><span class="line">set smtp-auth-user=yiilib.com_t  #send account</span><br><span class="line">set smtp-auth-password=mailBoxPassword  #account password</span><br><span class="line">set smtp-auth=login     #auth way</span><br></pre></td></tr></table></figure><ol start="3"><li>send test <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;mail body&quot; |　mail marvin.ma@redcreation.net -s &quot;test mail subject&quot; -a /root/backup/yiilib.com_tmp.sql</span><br></pre></td></tr></table></figure></li></ol></li></ol><h2 id="两种常用配置"><a href="#两种常用配置" class="headerlink" title="两种常用配置"></a>两种常用配置</h2><ul><li><p>腾讯企业邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set from=&quot;mailtest@3vyd.com&quot;</span><br><span class="line">set smtp=&quot;smtp.exmail.qq.com&quot;</span><br><span class="line">set smtp-auth-user=&quot;mailtest@3vyd.com&quot;</span><br><span class="line">set smtp-auth-password=&quot;xxxx&quot;</span><br><span class="line">set smtp-auth=login</span><br></pre></td></tr></table></figure></li><li><p>163网易邮箱(密码是指客户端授权密码)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set from=&quot;chuangkehui@163.com&quot;</span><br><span class="line">set smtp=&quot;smtp.163.com&quot;</span><br><span class="line">set smtp-auth-user=&quot;chuangkehui@163.com&quot;</span><br><span class="line">set smtp-auth-password=&quot;xxxx&quot;</span><br><span class="line">set smtp-auth=login</span><br></pre></td></tr></table></figure></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/MissEel/article/details/79588808" target="_blank" rel="noopener">Linux发邮件-ubuntu和centos</a><br><a href="http://yiilib.com/en/topic/731/Centos+use+Mailx+send+SMTP+Mail" target="_blank" rel="noopener">http://yiilib.com/en/topic/731/Centos+use+Mailx+send+SMTP+Mail</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojureScript页面国际化(i18n多语言)实现</title>
      <link href="/2020/04/04/clojurescript-i18n/"/>
      <url>/2020/04/04/clojurescript-i18n/</url>
      
        <content type="html"><![CDATA[<p>clojurescript 国际化核心代码</p><p><a href="https://www.jianshu.com/p/97867dd37db5" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="先看下效果（证明是实践过的）"><a href="#先看下效果（证明是实践过的）" class="headerlink" title="先看下效果（证明是实践过的）"></a>先看下效果（证明是实践过的）</h2><p><img src="https://upload-images.jianshu.io/upload_images/4109786-42a6328eeea9558b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="中文"><br><img src="https://upload-images.jianshu.io/upload_images/4109786-976728fceac93658.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="英文"></p><p>国际化方案比较多，页面上的国际化一般比较简单，麻烦的还是数据库的数据的国际化。<br>本地cljs里的国际化采用前端db的atom控制当前语言，所有可见的翻译分为页面部分和数据库部分，最后在通过接口拿到数据库的翻译后跟页面的进行merge。</p><h2 id="方案原理"><a href="#方案原理" class="headerlink" title="方案原理"></a>方案原理</h2><ol><li>将当前用户设定的语言保存在本地localstorage，并且保存在页面db中。</li><li>切换语言时，每个需要国际化的文案前增加<code>i18n-str</code>函数调用，实时获取目标文案对应的i18n文案。</li><li>浏览器被刷新时从localstorage中回复已经选择的语音类型。</li><li>可视的多语言文案，分为页面部分数数据库部分，在前端进行merge处理，保存成一个。</li></ol><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>前端使用re-frame、kee-frame、shadow-cljs、antd框架</p><h2 id="当前方案核心代码"><a href="#当前方案核心代码" class="headerlink" title="当前方案核心代码"></a>当前方案核心代码</h2><p>分页页面部分，切换语言部分（保存db，保存localstorage，防止手动刷新页面时数据还原）。</p><h4 id="1-页面切换代码"><a href="#1-页面切换代码" class="headerlink" title="1. 页面切换代码"></a>1. 页面切换代码</h4><p>继续使用antd组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(def lang (rf/subscribe [:i18n/lang]))</span><br><span class="line"></span><br><span class="line">;; 语言</span><br><span class="line">(def ^:private language</span><br><span class="line">  &#123;:zh-cn &quot;中文&quot;</span><br><span class="line">   :en-us &quot;English&quot;</span><br><span class="line">   :ja-jp &quot;日本語&quot;&#125;)</span><br><span class="line"></span><br><span class="line">;; 语言菜单</span><br><span class="line">(defn- dropdown-menu []</span><br><span class="line">  [:&gt; ant/Menu</span><br><span class="line">   &#123;:className &quot;menu&quot;</span><br><span class="line">    :onClick   (fn [menu]</span><br><span class="line">                 (let [value (js-&gt;clj menu :keywordize-keys true)]</span><br><span class="line">                   (rf/dispatch [:i18n/change-lang (keyword (:key value))])))&#125;</span><br><span class="line">   [:&gt; MenuItem &#123;:key &quot;zh-cn&quot; :title &quot;中文&quot;&#125;</span><br><span class="line">    [:span (i18n-str &quot;中文&quot;)]]</span><br><span class="line">   [:&gt; MenuItem &#123;:key &quot;en-us&quot; :title &quot;英文&quot;&#125;</span><br><span class="line">    [:span (i18n-str &quot;英文&quot;)]]</span><br><span class="line">   [:&gt; MenuItem &#123;:key &quot;ja-jp&quot; :title &quot;日文&quot;&#125;</span><br><span class="line">    [:span (i18n-str &quot;日文&quot;)]]])</span><br><span class="line"></span><br><span class="line">[:div &#123;:style &#123;:margin-left 20</span><br><span class="line">                         :font-size   &quot;14px&quot;</span><br><span class="line">                         :font-family &quot;PingFangSC-Medium,PingFang SC&quot;</span><br><span class="line">                         :font-weight 500</span><br><span class="line">                         :color       &quot;rgba(0,0,0,1)&quot;&#125;&#125;</span><br><span class="line">           [:&gt; ant/Dropdown &#123;:overlay (reagent.core/as-element [dropdown-menu])&#125;</span><br><span class="line">            [:span (i18n-str (or (get language @lang) &quot;中文&quot;))]]]</span><br></pre></td></tr></table></figure></p><h4 id="2-切换和保存当前语言"><a href="#2-切换和保存当前语言" class="headerlink" title="2. 切换和保存当前语言"></a>2. 切换和保存当前语言</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">;;通过key设置和获取localstorage里的数据</span><br><span class="line">(defn set-local-storage [key value]</span><br><span class="line">  (.setItem js/localStorage key value))</span><br><span class="line"></span><br><span class="line">(defn get-local-storage [key]</span><br><span class="line">  (.getItem js/localStorage key))</span><br><span class="line"></span><br><span class="line">;;只要路由变化，就要触发获取当前语言的逻辑</span><br><span class="line">(kf/reg-controller</span><br><span class="line"> :lang-controller</span><br><span class="line"> &#123;:params (constantly true)</span><br><span class="line">  :start  [::set-lang-by-local]&#125;)</span><br><span class="line"></span><br><span class="line">;;如果页面刷新的话从localstorage里获取</span><br><span class="line">(kf/reg-event-fx</span><br><span class="line"> ::set-lang-by-local</span><br><span class="line"> (fn [_ [_ _]]</span><br><span class="line">   (when-not @(rf/subscribe [:i18n/lang])</span><br><span class="line">     (if (get-current-lang)</span><br><span class="line">       (rf/dispatch [:i18n/change-lang (get-current-lang)])</span><br><span class="line">       (rf/dispatch [:i18n/change-lang :zh-cn])))</span><br><span class="line">   &#123;:dispatch [:request/get &#123;:url (:get-lang-map mutil-lang)</span><br><span class="line">                             :params &#123;:hostname (.. js/window -location -hostname)&#125;   ;;此处根据当前域名获取该域名的对应租户的多语言文案</span><br><span class="line">                             :callback-event ::save-db-lang&#125;]&#125;))</span><br><span class="line"></span><br><span class="line">(kf/reg-event-fx</span><br><span class="line"> ::save-db-lang</span><br><span class="line"> (fn [&#123;:keys [db]&#125; [db-lang-map]]</span><br><span class="line">   &#123;:db (-&gt; db</span><br><span class="line">            (assoc-in [:db-lang-map] db-lang-map))&#125;))</span><br><span class="line"></span><br><span class="line">(rf/reg-event-fx</span><br><span class="line"> :i18n/change-lang</span><br><span class="line"> (fn [&#123;:keys [db]&#125; [_ data]]</span><br><span class="line">   (js/console.log &quot;切换语言到：&quot; data)</span><br><span class="line">   (set-current-lang data)</span><br><span class="line">   &#123;:db (assoc-in db [:global :lang] data)&#125;))</span><br><span class="line"></span><br><span class="line">(rf/reg-sub</span><br><span class="line"> :i18n/lang</span><br><span class="line"> (fn [data]</span><br><span class="line">   (get-in data [:global :lang])))</span><br><span class="line"></span><br><span class="line">(rf/reg-sub</span><br><span class="line"> :i18n/db-lang-map</span><br><span class="line"> (fn [db]</span><br><span class="line">   (get-in db [:db-lang-map])))</span><br><span class="line"></span><br><span class="line">(defn- merge-lang-map</span><br><span class="line">  &quot;对页面上的文案和db里的文案进行一次merge&quot;</span><br><span class="line">  [page-lang-map db-lang-map]</span><br><span class="line">  (if db-lang-map</span><br><span class="line">    (merge page-lang-map</span><br><span class="line">           (#(zipmap (map :key %) (map :value %))</span><br><span class="line">            db-lang-map))</span><br><span class="line">    page-lang-map))</span><br><span class="line"></span><br><span class="line">;;返回当前语言的关键字</span><br><span class="line">(defn i18n-str [s]</span><br><span class="line">  (let [lang (rf/subscribe [:i18n/lang])</span><br><span class="line">        db-lang-map (rf/subscribe [:i18n/db-lang-map])]</span><br><span class="line">    (get-in (merge-lang-map language-map @db-lang-map)</span><br><span class="line">            [s @lang] s)))</span><br></pre></td></tr></table></figure><h4 id="3-页面文案翻译"><a href="#3-页面文案翻译" class="headerlink" title="3. 页面文案翻译"></a>3. 页面文案翻译</h4><p>上面代码里用到的<code>language-map</code>类似如下结构:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(def language-map</span><br><span class="line">  &#123; &quot;切换语言&quot;                      &#123;:en-us &quot;Switch language&quot;  :ja-jp &quot;言語を切り替え&quot;&#125;</span><br><span class="line">     &quot;中文&quot;                        &#123;:en-us &quot;Chinese&quot;           :ja-jp &quot;中国語&quot;&#125;</span><br><span class="line">     &quot;英文&quot;                        &#123;:en-us &quot;English&quot;           :ja-jp &quot;英語&quot;&#125;</span><br><span class="line">     &quot;日文&quot;                        &#123;:en-us &quot;Japanese&quot;          :ja-jp &quot;日本語&quot;&#125;</span><br><span class="line">     &quot;体验门店&quot;                     &#123;:en-us &quot;Experience Store&quot;  :ja-jp &quot;店を体験する&quot;&#125;</span><br><span class="line">     &quot;返回首页&quot;                     &#123;:en-us &quot;Back to Home&quot;      :ja-jp &quot;ホームを戻す&quot;&#125;&#125;</span><br><span class="line">  )</span><br></pre></td></tr></table></figure></p><h4 id="4-数据库返回的文案"><a href="#4-数据库返回的文案" class="headerlink" title="4. 数据库返回的文案"></a>4. 数据库返回的文案</h4><p>即上文中<code>:i18n/db-lang-map</code>这个event从db中获取的对象，从接口获取的存在前端db中数据结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;key&quot;: &quot;双排六粒&quot;,</span><br><span class="line">            &quot;value&quot;: &#123;</span><br><span class="line">                &quot;en-us&quot;: &quot;Double six buttons&quot;,</span><br><span class="line">                &quot;ja-jp&quot;: &quot;w6*3&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;key&quot;: &quot;下摆(成衣)&quot;,</span><br><span class="line">            &quot;value&quot;: &#123;</span><br><span class="line">                &quot;en-us&quot;: &quot;Bottom(garment)&quot;,</span><br><span class="line">                &quot;ja-jp&quot;: &quot;蹴廻し（上がり寸法）&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;key&quot;: &quot;平钉纽扣&quot;,</span><br><span class="line">            &quot;value&quot;: &#123;</span><br><span class="line">                &quot;en-us&quot;: &quot;Level buttons&quot;,</span><br><span class="line">                &quot;ja-jp&quot;: &quot;平钉钮釦&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>这样将数据库中的和页面上的进行merge后使用。<br>当然，我们产品是因为对多个租户，各租户的翻译不同，所以页面上没有往DB里重复保存，采用merge两端的形式。简单的可以只在数据库维护。</p><h2 id="改进点"><a href="#改进点" class="headerlink" title="改进点"></a>改进点</h2><ul><li>页面文案便于扩展新语言<br>当前三个语言，在数据库采用一行保存一个形式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">+----------------+--------------+------+-----+-------------------+-------+</span><br><span class="line">| Field          | Type         | Null | Key | Default           | Extra |</span><br><span class="line">+----------------+--------------+------+-----+-------------------+-------+</span><br><span class="line">| id             | varchar(40)  | NO   | PRI | NULL              |       |</span><br><span class="line">| company_id     | varchar(40)  | NO   |     | NULL              |       |</span><br><span class="line">| lang_key       | varchar(255) | NO   |     | NULL              |       |</span><br><span class="line">| lang_value     | varchar(255) | NO   |     | NULL              |       |</span><br><span class="line">| lang           | varchar(40)  | NO   |     | NULL              |       |</span><br><span class="line">| delete_flag    | varchar(4)   | YES  |     | 0                 |       |</span><br><span class="line">| create_time    | timestamp    | NO   |     | CURRENT_TIMESTAMP |       |</span><br><span class="line">| create_user_id | varchar(40)  | YES  |     | NULL              |       |</span><br><span class="line">| update_time    | timestamp    | NO   |     | CURRENT_TIMESTAMP |       |</span><br><span class="line">| update_user_id | varchar(40)  | YES  |     | NULL              |       |</span><br><span class="line">+----------------+--------------+------+-----+-------------------+-------+</span><br></pre></td></tr></table></figure></li></ul><p>一个文案的翻译数据如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO  `t_store_language`(`id`, `company_id`, `lang_key`, `lang_value`, `lang`, `delete_flag`, `create_time`, `create_user_id`, `update_time`, `update_user_id`) VALUES (&apos;611348&apos;, &apos;61&apos;, &apos;常规(9个工作日)&apos;, &apos;Regular (9 working days)&apos;, &apos;en-us&apos;, &apos;0&apos;, &apos;2020-04-01 00:00:00&apos;, NULL, &apos;2020-04-01 00:00:00&apos;, NULL);</span><br><span class="line">INSERT INTO  `t_store_language`(`id`, `company_id`, `lang_key`, `lang_value`, `lang`, `delete_flag`, `create_time`, `create_user_id`, `update_time`, `update_user_id`) VALUES (&apos;611359&apos;, &apos;61&apos;, &apos;常规(9个工作日)&apos;, &apos;普通（９稼動日）&apos;, &apos;ja-jp&apos;, &apos;0&apos;, &apos;2020-04-01 00:00:00&apos;, NULL, &apos;2020-04-01 00:00:00&apos;, NULL);</span><br></pre></td></tr></table></figure></p><p>这个是便于扩展的，而页面上就不是那样的，如同上面的<code>language-map</code>，如果再增加一门比如韩语的话，需要逐项在原来的数据上修改，不利于扩展。</p><blockquote><p>改进方向：<br>一个语音一个map，最后将多个语言的文案进行合并</p></blockquote><p>仓促下没有考虑太多，如有更好的方案，欢迎交流。QQ：389709260</p>]]></content>
      
      
      <categories>
          
          <category> clojurescript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojurescript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shadow-cljs编译的clojurescript-antd项目使用less实现运行时主题切换</title>
      <link href="/2020/03/21/clojurescript-antd%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8less%E5%AE%9E%E7%8E%B0%E8%BF%90%E8%A1%8C%E6%97%B6%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/"/>
      <url>/2020/03/21/clojurescript-antd%E9%A1%B9%E7%9B%AE%E4%BD%BF%E7%94%A8less%E5%AE%9E%E7%8E%B0%E8%BF%90%E8%A1%8C%E6%97%B6%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>项目页面上动态切换主题</p><p><a href="https://www.jianshu.com/p/4db2e4214ed8" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>最近公司的电商定制平台的项目继上了国际化，又要搞多主题了，又让我练了一把手。</p><p>实现了，也就那么回事，但是动手之前的犹豫和无思路也着实让我慌了一逼。</p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>看了antd官网上<a href="https://ant.design/docs/react/customize-theme-cn" target="_blank" rel="noopener">定制主题</a>上的主题介绍，也看了其他博主的一些手段，比较多的还是打包时将某些主题色打包到代码里，运行起来就是这个主题色。</p><p>一来这个方式是静态的，通过打包之前去设置一些config，不是最终想要的，二来里面的介绍要么就是借助webpack，要么就是用Umi。巧的是我们项目用clojurescript开发，只用了antd的component，并没有用到<a href="https://pro.ant.design/docs/getting-started-cn/" target="_blank" rel="noopener">Antd Pro后台</a>的所有功能，所以官网的介绍对我来说就是个大大的“0️⃣”</p><p>运行时切换主题，显然只在编译时打包less是不够的的，必须是走在浏览器端动态修改less的方案。</p><p>有了目的就好办了，对于我一个前端菜鸡来说，分析到这一步已经涨知识了。</p><p>下面进入解决方案正题。</p><h2 id="美丽的插件"><a href="#美丽的插件" class="headerlink" title="美丽的插件"></a>美丽的插件</h2><p>首先迎面走来的，昂首挺胸的美女就是<a href="https://www.npmjs.com/package/antd-theme-generator" target="_blank" rel="noopener">antd-theme-generator</a>，非常感谢，帮大忙了。</p><p>核心代码就补贴了，作者太懒，不论是<a href="https://github.com/mzohaibqc/antd-theme-generator#readme" target="_blank" rel="noopener">github</a>还是npm库里，这个插件的<code>README.md</code>文件写的有点马虎。</p><p>参考了简书上<a href="https://www.jianshu.com/p/b635211658c8" target="_blank" rel="noopener">antd在线换肤定制功能</a>这位仁兄的介绍，我的代码做了如下改动</p><h4 id="1-增加依赖"><a href="#1-增加依赖" class="headerlink" title="1. 增加依赖"></a>1. 增加依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i antd-theme-generator --save</span><br></pre></td></tr></table></figure><h4 id="2-引入文件，根据我的项目修改文件内容"><a href="#2-引入文件，根据我的项目修改文件内容" class="headerlink" title="2. 引入文件，根据我的项目修改文件内容"></a>2. 引入文件，根据我的项目修改文件内容</h4><p>在<code>resources/public</code>下新建less目录，创建2个文件</p><ul><li><p>main.less</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//内容为空就行，防止生成color.less报错</span><br></pre></td></tr></table></figure></li><li><p>vars.less</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;~antd/lib/style/themes/default.less&quot;; //引入antd的变量文件，实现变量的覆盖</span><br><span class="line">@primary-color: #800019;</span><br><span class="line">@link-color: #800019;</span><br><span class="line">@btn-primary-bg:#800019;</span><br><span class="line"></span><br><span class="line">//color.less中加入css原生变量：--PC</span><br><span class="line">:root &#123; </span><br><span class="line">    --PC: @primary-color;   </span><br><span class="line">    --BPB: @btn-primary-bg;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p>项目<strong>根目录</strong>新建<code>color.js</code>文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">const path = require(&apos;path&apos;);</span><br><span class="line">const &#123; generateTheme, getLessVars &#125; = require(&apos;antd-theme-generator&apos;);</span><br><span class="line"></span><br><span class="line">const options = &#123;</span><br><span class="line">  stylesDir: path.join(__dirname, &apos;./resources/public/less&apos;),    //对应具体位置</span><br><span class="line">  antDir: path.join(__dirname, &apos;./node_modules/antd&apos;), //对应具体位置</span><br><span class="line">  varFile: path.join(__dirname, &apos;./resources/public/less/vars.less&apos;), //对应具体位置</span><br><span class="line">  mainLessFile: path.join(__dirname, &apos;./resources/public/less/main.less&apos;), //对应具体位置</span><br><span class="line">  themeVariables: [</span><br><span class="line">    &apos;@primary-color&apos;,</span><br><span class="line">    &apos;@secondary-color&apos;,</span><br><span class="line">    &apos;@text-color&apos;,</span><br><span class="line">    &apos;@text-color-secondary&apos;,</span><br><span class="line">    &apos;@heading-color&apos;,</span><br><span class="line">    &apos;@layout-body-background&apos;,</span><br><span class="line">    &apos;@btn-primary-bg&apos;,</span><br><span class="line">    &apos;@layout-header-background&apos;</span><br><span class="line">  ],</span><br><span class="line">  indexFileName: &apos;index.html&apos;,</span><br><span class="line">  outputFilePath: path.join(__dirname, &apos;./resources/public/css/color.less&apos;),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">generateTheme(options).then(less =&gt; &#123;</span><br><span class="line">  console.log(&apos;Theme generated successfully&apos;);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(error =&gt; &#123;</span><br><span class="line">    console.log(&apos;Error&apos;, error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure></li><li><p>修改index.html文件，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;cn&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;门店定制系统&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;/&gt;</span><br><span class="line">    &lt;meta content=&quot;width=device-width, initial-scale=1.0&quot; name=&quot;viewport&quot; /&gt;</span><br><span class="line">    &lt;link href=&quot;/css/antd.min.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">    &lt;link href=&quot;/css/redantd.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">    &lt;link href=&quot;/css/color.less&quot; type=&quot;text/css&quot;  rel=&quot;stylesheet/less&quot;/&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--这个代码不能放在最后--&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  window.less = &#123;</span><br><span class="line">    async: false,</span><br><span class="line">    env: &apos;production&apos;</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/less.js/2.7.2/less.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Our JavaScript will modify the DOM inside this element --&gt;</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;!-- All our ClojureScript gets compiled into this file --&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  document.write(&quot;&lt;script type=&apos;text/javascript&apos; src=&apos;/js/app.js?v=&quot;+Math.random()+&quot;&apos; type=&apos;text/javascript&apos;&gt;&lt;\/script&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>修改<code>package.json</code>，命令前面增加<code>node color</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;start&quot;: &quot;node color &amp;&amp; shadow-cljs server&quot;,</span><br><span class="line">  &quot;build&quot;: &quot;node color &amp;&amp; shadow-cljs release app&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-切换测试"><a href="#3-切换测试" class="headerlink" title="3. 切换测试"></a>3. 切换测试</h4><p>项目运行后页面比如页面有个Button的type=”primary”那它默认是红色的。</p><p>在浏览器的控制台执行如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">window.less.modifyVars(</span><br><span class="line">    &#123;</span><br><span class="line">        &apos;@primary-color&apos;: &apos;#722ed1&apos;,</span><br><span class="line">        &apos;@link-color&apos;: &apos;#722ed1&apos;,</span><br><span class="line">        &apos;@btn-primary-bg&apos;: &apos;#722ed1&apos;,</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>会发现颜色变成了酱紫色。</p><p>到此，实现逻辑修改完。</p><h2 id="在clojurescript中实现动态切换"><a href="#在clojurescript中实现动态切换" class="headerlink" title="在clojurescript中实现动态切换"></a>在clojurescript中实现动态切换</h2><h4 id="页面view部分"><a href="#页面view部分" class="headerlink" title="页面view部分"></a>页面view部分</h4><p>在页面布局文件的右上角加了个切换下拉按钮。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">(def ^:private theme-map</span><br><span class="line">  &#123;:#800019 &quot;喜庆红&quot;</span><br><span class="line">   :#4880FF &quot;拂晓蓝&quot;&#125;)</span><br><span class="line"></span><br><span class="line">;; 主题菜单</span><br><span class="line">(defn dropdown-theme []</span><br><span class="line">  [:&gt; ant/Menu</span><br><span class="line">   &#123;:className &quot;menu&quot;</span><br><span class="line">    :onClick   (fn [menu]</span><br><span class="line">                 (let [value (js-&gt;clj menu :keywordize-keys true)]</span><br><span class="line">                   (rf/dispatch [:theme/generate-theme (:key value)])))&#125;</span><br><span class="line">   [:&gt; MenuItem &#123;:key &quot;#800019&quot; :title (:#800019 theme-map)</span><br><span class="line">                 :style &#123;:background &quot;#800019&quot;</span><br><span class="line">                         :color &quot;white&quot;</span><br><span class="line">                         :border-radius &quot;5px&quot;&#125;&#125;</span><br><span class="line">    [:span (i18n-str (:#800019 theme-map))]]</span><br><span class="line">   [:&gt; MenuItem &#123;:key &quot;#4880FF&quot; :title (:#4880FF theme-map)</span><br><span class="line">                 :style &#123;:background &quot;#4880FF&quot;</span><br><span class="line">                         :color &quot;white&quot;</span><br><span class="line">                         :border-radius &quot;5px&quot;&#125;&#125;</span><br><span class="line">    [:span (i18n-str (:#4880FF theme-map))]]])</span><br><span class="line"></span><br><span class="line">;;在某个view组件里写入内容</span><br><span class="line">[:div &#123;:style &#123;:margin-left 20</span><br><span class="line">                         :font-size   &quot;14px&quot;</span><br><span class="line">                         :font-family &quot;PingFangSC-Medium,PingFang SC&quot;</span><br><span class="line">                         :font-weight 500</span><br><span class="line">                         :color       &quot;rgba(0,0,0,1)&quot;&#125;&#125;</span><br><span class="line">           [:&gt; ant/Dropdown &#123;:overlay (reagent.core/as-element [dropdown-theme])&#125;</span><br><span class="line">            [:div &#123;:className &quot;theme-setting&quot;&#125;</span><br><span class="line">             [:span (i18n-str &quot;颜色&quot;)]]]]</span><br></pre></td></tr></table></figure></p><h4 id="切换事件"><a href="#切换事件" class="headerlink" title="切换事件"></a>切换事件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">(ns store-pc.common.theme</span><br><span class="line">  (:require</span><br><span class="line">   [re-frame.core :as rf]</span><br><span class="line">   [kee-frame.core :as kf]</span><br><span class="line">   [store-pc.common.storage :as storage]))</span><br><span class="line"></span><br><span class="line">(defn- gen-theme [color]</span><br><span class="line">  #js&#123;</span><br><span class="line">      &quot;@primary-color&quot;   color</span><br><span class="line">      &quot;@link-color&quot;      color</span><br><span class="line">      &quot;@btn-primary-bg&quot;  color</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">(kf/reg-controller</span><br><span class="line"> :theme-controller</span><br><span class="line"> &#123;:params (constantly true)</span><br><span class="line">  :start  [::set-theme-by-local]&#125;)</span><br><span class="line"></span><br><span class="line">;;如果页面刷新的话从localstorage里获取</span><br><span class="line">(kf/reg-event-fx</span><br><span class="line"> ::set-theme-by-local</span><br><span class="line"> (fn [_ [_ _]]</span><br><span class="line">   (when-not @(rf/subscribe [:theme/now-theme])</span><br><span class="line">     (rf/dispatch [:theme/generate-theme (storage/get-current-theme)])</span><br><span class="line">     )))</span><br><span class="line"></span><br><span class="line">(rf/reg-event-fx</span><br><span class="line"> :theme/generate-theme</span><br><span class="line"> (fn [&#123;:keys [db]&#125; [_ color]]</span><br><span class="line">   (js/console.log &quot;设置主题为:&quot; (gen-theme color))</span><br><span class="line">   (.modifyVars (.-less js/window ) (gen-theme color))</span><br><span class="line">   (storage/set-current-theme color)</span><br><span class="line">   &#123;:db (assoc-in db [:global :theme] color)&#125;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(rf/reg-sub</span><br><span class="line"> :theme/now-theme</span><br><span class="line"> (fn [db]</span><br><span class="line">   (get-in db [:global :theme])))</span><br></pre></td></tr></table></figure><p>里面唯一用到的框架外的就是存储localstore和从localstore里拿值，核心代码就两个：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(defn get-local-storage [key]</span><br><span class="line">  (.getItem js/localStorage key))</span><br><span class="line"></span><br><span class="line">(defn set-local-storage [key value]</span><br><span class="line">  (.setItem js/localStorage key value))</span><br></pre></td></tr></table></figure></p><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><blockquote><ol><li><code>index.html</code>里一开始引入的less.min.js版本太高，得降成2.7.2才不会报错，否则modifyVars有错误提示</li><li>js里的window.less.modifyVars(obj)这句调用在cljs里不会写</li><li>上面一条解决了，但是modifyVars的参数不会传，后来查到原来是用 <code>#js</code>定义的就是原始js的意思。</li></ol></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/b635211658c8" target="_blank" rel="noopener">antd在线换肤定制功能</a><br><a href="https://github.com/bestRenekton/demos/tree/master/themeChanger" target="_blank" rel="noopener">themeChanger demo</a></p>]]></content>
      
      
      <categories>
          
          <category> cljs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> antd </tag>
            
            <tag> cljs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>海尔创客汇笔记----安卓上adb的使用笔记</title>
      <link href="/2020/03/01/%E6%B5%B7%E5%B0%94%E5%88%9B%E5%AE%A2%E6%B1%87%E7%AC%94%E8%AE%B0----%E5%AE%89%E5%8D%93%E4%B8%8Aadb%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/03/01/%E6%B5%B7%E5%B0%94%E5%88%9B%E5%AE%A2%E6%B1%87%E7%AC%94%E8%AE%B0----%E5%AE%89%E5%8D%93%E4%B8%8Aadb%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>使用adb命令抓包等<br><a href="https://www.jianshu.com/p/6151dca25217" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb logcat -v time tag 1&gt;F:\log.txt</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f179ebadb5281f78.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片1.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-370102821030f1e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片2.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-830c203315238b98.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片3.png"></p><blockquote><p>adb logcat -b main -v time&gt;app.log  打印应用程序的log<br>adb logcat -b radio -v time&gt; radio.log 打印射频相关的log，SIM STK也会在里面，modem相关的ATcommand等，当然跟QXDM差的很远了。<br>adb logcat -b events -v time  打印系统事件的日志，比如触屏事件。。。<br>//android log的抓取<br>adb logcat<br>//kernel log的抓取<br>adb shell cat /proc/kmsg<br>//log 信息的保存<br>mkdir  /data/anr<br>logcat *：V &gt; /data/anr/android<br>demsg &gt;/data/anr/kernel<br>//按ctrl+c结束log输出<br>adb pull /data/anr ./log/</p></blockquote><h3 id="手动彻底卸载app"><a href="#手动彻底卸载app" class="headerlink" title="手动彻底卸载app"></a>手动彻底卸载app</h3><p>D:\Git\pingtai\Portal&gt;adb uninstall com.haierchuangkeapp<br>Failure [DELETE_FAILED_INTERNAL_ERROR]<br>在本地用管理员身份运行cmd命令行工具，使用adb shell进入手机应用命令行，<br>根据提示 ：<br>D:\Git\pingtai\Portal&gt;adb shell<br>M1E:/ $ cd /data/local/tmp/<br>M1E:/data/local/tmp $ ll<br>/system/bin/sh: ll: not found<br>127|M1E:/data/local/tmp $ ls<br>com.haierchuangkeapp com.haierchuangkeapp-build-id.txt<br>M1E:/data/local/tmp $ rm -rf co<br>com.haierchuangkeapp                    com.haierchuangkeapp-build-id.txt<br>M1E:/data/local/tmp $ rm -rf com.haierchuangkeapp*<br>M1E:/data/local/tmp $</p><p>然后手动推送安装包，然后安装：<br>D:\Git\pingtai\Portal\android&gt;adb push D:\Git\pingtai\Portal\android\app\build\outputs\apk\debug\app-debug.apk /data/local/tmp/com.haierchuangkeapp<br>D:\Git\pingtai\Portal\android\app\build\outputs\apk\debug\app-debug.apk: 1 file pushed. 13.0 MB/s (64737700 bytes in 4.756s)</p><p>D:\Git\pingtai\Portal\android&gt;<br>D:\Git\pingtai\Portal\android&gt;<br>D:\Git\pingtai\Portal\android&gt;adb shell pm install -t -r “/data/local/tmp/com.haierchuangkeapp”<br>Success</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react-native </tag>
            
            <tag> android </tag>
            
            <tag> package </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>excel操作备忘</title>
      <link href="/2020/02/29/excel%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98/"/>
      <url>/2020/02/29/excel%E6%93%8D%E4%BD%9C%E5%A4%87%E5%BF%98/</url>
      
        <content type="html"><![CDATA[<p>把excel里的数据进行某些处理，记录一下，以后好复制粘贴</p><p><a href="https://www.jianshu.com/p/f6005d906ce5" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="1-excel数字按长度补0，并转换成文本"><a href="#1-excel数字按长度补0，并转换成文本" class="headerlink" title="1. excel数字按长度补0，并转换成文本"></a>1. excel数字按长度补0，并转换成文本</h2><p>在海尔这段时间从数据库里导出来的员工工号8位数，因为有些0开头的，导出到excel里后前面的0就没有了。<br>可以新建一列，然后以导出的那列为基础数据用公式处理成想要的，补齐8位，前面补0。公式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=REPT(0,8-LEN(A2))&amp;A2</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-197172968d66e595.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="补齐8位，前面补0"></p><h2 id="2-excel里将数据拼接成语句"><a href="#2-excel里将数据拼接成语句" class="headerlink" title="2. excel里将数据拼接成语句"></a>2. excel里将数据拼接成语句</h2><p>有时候需要将excel里的数据，拼接成想要的json或者sql。</p><ul><li>拼接成json或者map<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=CONCATENATE(&quot;&quot;&quot;&quot;,B2,&quot;&quot;&quot;&quot;,&quot;    &#123;:en-us &quot;&quot;&quot;,C2,&quot;&quot;&quot;  :ja-jp &quot;&quot;&quot;,D2,&quot;&quot;&quot;&#125;&quot;)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4109786-50e2d8fa74ff2115.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="拼接成json"><br>目标内容比如：<code>&quot;优裁精选&quot;    {:en-us &quot;Retail&quot;  :ja-jp &quot;優れた裁断&quot;}</code></p><ul><li>根据表头，拼接成sql的insert语句<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=CONCATENATE(&quot;INSERT INTO t_sys_user (`&quot;&amp;A$1&amp;&quot;`, `&quot;&amp;B$1&amp;&quot;`, `&quot;&amp;C$1&amp;&quot;`, `&quot;&amp;D$1&amp;&quot;`, `&quot;&amp;E$1&amp;&quot;`, `&quot;&amp;F$1&amp;&quot;`) VALUES (&apos;&quot;&amp;A3&amp;&quot;&apos;,&quot;&amp;&quot; &apos;&quot;&amp;B3&amp;&quot;&apos;,&apos;&quot;&amp;C3&amp;&quot;&apos;,&quot;&amp;&quot;&apos;&quot;&amp;D3&amp;&quot;&apos;,&quot;&amp;&quot;&apos;&quot;&amp;E3&amp;&quot;&apos;,&quot;&amp;&quot;&apos;&quot;&amp;F3&amp;&quot;&apos;);&quot;)</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4109786-2f3ea5a88e2c05f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="拼接成sql"></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>leiningen clojure web项目使用本地jar包</title>
      <link href="/2020/02/06/clojure%20lein%20use%20local%20jar/"/>
      <url>/2020/02/06/clojure%20lein%20use%20local%20jar/</url>
      
        <content type="html"><![CDATA[<p>leiningen clojure web项目使用本地jar简易方式</p><p><a href="https://www.jianshu.com/p/6642d446f087" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>用<a href="https://luminusweb.com/" target="_blank" rel="noopener">luminusweb</a>模板创建的clojure web服务端项目如何使用本地的jar。</p><h3 id="我的方案"><a href="#我的方案" class="headerlink" title="我的方案"></a>我的方案</h3><p>将jar放在项目里的某个目录下，推荐resources下，然后在<code>project.clj</code>里加入引用即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:resource-paths [&quot;resources/jars/sheet-clone-0.1.jar&quot;]</span><br></pre></td></tr></table></figure></p><p>使用的时候像跟调用其他第三方的java sdk一样使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(:import (com.alibaba.excel EasyExcel #_ExcelWriter)</span><br><span class="line">           [com.hczt.sheetclone.utils CloneExcelByPoi]</span><br><span class="line">           [org.apache.poi.xssf.usermodel XSSFWorkbook])</span><br></pre></td></tr></table></figure></p><h3 id="其他方案："><a href="#其他方案：" class="headerlink" title="其他方案："></a>其他方案：</h3><p>参考Paul大神的文章<a href="https://www.pgrs.net/2011/10/30/using-local-jars-with-leiningen/" target="_blank" rel="noopener">using-local-jars-with-leiningen</a><br>贴一下主要内容。<br>Create a directory in the project.<br>mkdir maven_repository.<br>Add local jars to this repository.<br>For example, this command adds the jaad-0.8.3.jar file to the maven repository.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -Dfile=jaad-0.8.3.jar -DartifactId=jaad -Dversion=0.8.3 -DgroupId=jaad -Dpackaging=jar -DlocalRepositoryPath=maven_repository</span><br></pre></td></tr></table></figure></p><p>Add the following to project.clj<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:repositories &#123;&quot;local&quot; ~(str (.toURI (java.io.File. &quot;maven_repository&quot;)))&#125;</span><br></pre></td></tr></table></figure></p><p>Now a regular lein deps should work<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lein deps</span><br><span class="line">Downloading: jaad/jaad/0.8.3/jaad-0.8.3.pom from local</span><br><span class="line">Transferring 0K from local</span><br><span class="line">[WARNING] *** CHECKSUM FAILED - Error retrieving checksum file for jaad/jaad/0.8.3/jaad-0.8.3.pom - IGNORING</span><br></pre></td></tr></table></figure></p><p>The warning can be ignored, since the jar will be checked into the project and not downloaded from the internet.</p>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
            <tag> leiningen </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot项目提示 No converter found for return value of type:class java.util.LinkedHashMap,@RequestBody无效</title>
      <link href="/2020/02/03/springboot-requestbody%E6%B3%A8%E8%A7%A3%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/"/>
      <url>/2020/02/03/springboot-requestbody%E6%B3%A8%E8%A7%A3%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>springboot项目提示<br>Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type ‘application/json;charset=UTF-8’ not supported]<br>Resolved [org.springframework.http.converter.HttpMessageNotWritableException: No converter found for return value of type: class java.util.LinkedHashMap]<br>@RequestBody注解直接无效<br><a href="https://www.jianshu.com/p/a6f35524dc25" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>先说解决方案，在pom中加入如下依赖，解决。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--json--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.9.9&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>说起来，这可真真是一个坑爹的问题，困扰了一天，烦了一天，我真以为我大半年没碰java，连新建个sprintboot的rest接口用完美的intellij idea这么高大上的工具都创建不出来了呢。</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>看看错误吧.<br>两个连入门都算不上的接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">package com.marvin.demo.controller;</span><br><span class="line"></span><br><span class="line">import com.marvin.demo.vo.DemoEntity;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> *</span><br><span class="line"> * @Author mahaiqiang</span><br><span class="line"> * @Create 2020/2/1 11:06 下午</span><br><span class="line"> * @Description TODO</span><br><span class="line"> **/</span><br><span class="line">@Slf4j</span><br><span class="line">@RestController</span><br><span class="line">public class DemoController &#123;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/demo1&quot;)</span><br><span class="line">    public DemoEntity demo1() &#123;</span><br><span class="line">        log.info(&quot;第一个get接口&quot;);</span><br><span class="line">        DemoEntity de = new DemoEntity();</span><br><span class="line">        de.setName(&quot;李四&quot;);</span><br><span class="line">        return de;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @PostMapping(&quot;/demo2&quot;)</span><br><span class="line">    public DemoEntity demo2(@RequestBody DemoEntity entity) &#123;</span><br><span class="line">        log.info(&quot;第一个post接口, 参数:&#123;&#125;&quot;, entity);</span><br><span class="line">        entity.setName(&quot;Hello, &quot; + entity.getName());</span><br><span class="line">        return entity;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p>GET是正常的，但是POST的这个接口，因为用了<code>@RequestBody</code>注解，要转换json，所以就死活不行。<br>错误是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2020-02-03 22:55:34.382  WARN 40841 --- [nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type &apos;application/json;charset=UTF-8&apos; not supported]</span><br><span class="line">2020-02-03 22:55:34.405  WARN 40841 --- [nio-8080-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.http.converter.HttpMessageNotWritableException: No converter found for return value of type: class java.util.LinkedHashMap]</span><br></pre></td></tr></table></figure></p><p>出这个错我先上网查，有个推荐找不到了说引入<code>jackson</code>看日志我引入的是2.9.6不知道是不是还少引用了啥，反正没成。</p><p>让别的同事试了下，人家说啥也不用干，导入进去就能运行，日了狗了，咋回事，肯定就是环境问题了呗。</p><p>于是就jdk、maven、intellij idea，重新配置，甚至重装，都搞一遍也没办法了。</p><p>第二天继续按照错误提示找，找到个原来就翻出来过的链接，加了依赖后莫名其妙好了，而且删除了依赖立马就能复现问题了。</p><h2 id="正常"><a href="#正常" class="headerlink" title="正常"></a>正常</h2><p>预期是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">com.marvin.demo.DemoApplication</span><br><span class="line"></span><br><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> /\\ / ___&apos;_ __ _ _(_)_ __  __ _ \ \ \ \</span><br><span class="line">( ( )\___ | &apos;_ | &apos;_| | &apos;_ \/ _` | \ \ \ \</span><br><span class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  &apos;  |____| .__|_| |_|_| |_\__, | / / / /</span><br><span class="line"> =========|_|==============|___/=/_/_/_/</span><br><span class="line"> :: Spring Boot ::        (v2.2.4.RELEASE)</span><br><span class="line"></span><br><span class="line">2020-02-03 22:51:16.565  INFO 40753 --- [           main] com.marvin.demo.DemoApplication          : Starting DemoApplication on 192.168.0.105 with PID 40753 (/Users/mahaiqiang/git/mygitrepo/secret-demo/target/classes started by mahaiqiang in /Users/mahaiqiang/git/mygitrepo/secret-demo)</span><br><span class="line">2020-02-03 22:51:16.571  INFO 40753 --- [           main] com.marvin.demo.DemoApplication          : No active profile set, falling back to default profiles: default</span><br><span class="line">2020-02-03 22:51:17.751  INFO 40753 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)</span><br><span class="line">2020-02-03 22:51:17.763  INFO 40753 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]</span><br><span class="line">2020-02-03 22:51:17.764  INFO 40753 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.30]</span><br><span class="line">2020-02-03 22:51:17.838  INFO 40753 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext</span><br><span class="line">2020-02-03 22:51:17.838  INFO 40753 --- [           main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1205 ms</span><br><span class="line">2020-02-03 22:51:18.043  INFO 40753 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService &apos;applicationTaskExecutor&apos;</span><br><span class="line">2020-02-03 22:51:18.230  INFO 40753 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path &apos;&apos;</span><br><span class="line">2020-02-03 22:51:18.234  INFO 40753 --- [           main] com.marvin.demo.DemoApplication          : Started DemoApplication in 2.039 seconds (JVM running for 2.681)</span><br><span class="line">2020-02-03 22:51:29.934  INFO 40753 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet &apos;dispatcherServlet&apos;</span><br><span class="line">2020-02-03 22:51:29.934  INFO 40753 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet &apos;dispatcherServlet&apos;</span><br><span class="line">2020-02-03 22:51:29.942  INFO 40753 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms</span><br><span class="line">2020-02-03 22:51:30.045  INFO 40753 --- [nio-8080-exec-1] c.marvin.demo.controller.DemoController  : 第一个post接口, 参数:DemoEntity(name=a)</span><br><span class="line">2020-02-03 22:51:50.866  INFO 40753 --- [nio-8080-exec-3] c.marvin.demo.controller.DemoController  : 第一个post接口, 参数:DemoEntity(name=marvin)</span><br></pre></td></tr></table></figure></p><p>这次是百度救了我，我一般用的<a href="https://www.bing.com" target="_blank" rel="noopener">必应</a>搜索引擎，没想到按照第二个错误百度出来的第一条直接就是解决方案。</p><p>但是按照方案说第一条，我的pom文件里已经有<code>spring-boot-starter-web</code>，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>但是还是逼着我加了jackson才好使了。<br>先记录一笔，再慢慢想原因吧，希望日后不会再碰到这么恶心的问题。</p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p><a href="https://blog.csdn.net/fxbin123/article/details/83221986" target="_blank" rel="noopener">SpringBoot2.X 遭遇 No converter found for return value of type: class java.util.LinkedHashMap</a></p>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>java-jar jar包带环境变量(参数)启动</title>
      <link href="/2020/01/20/java-jar%20jar%E5%8C%85%E5%B8%A6%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F(%E5%8F%82%E6%95%B0)%E5%90%AF%E5%8A%A8/"/>
      <url>/2020/01/20/java-jar%20jar%E5%8C%85%E5%B8%A6%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F(%E5%8F%82%E6%95%B0)%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>java -jar启动时加载环境变量</p><p><a href="https://www.jianshu.com/p/fed7a174bfb8" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>java工程我们可以编译成jar也可以翻译成war，一般地，war包我会丢到tomcat容器里，启动tomcat来访问服务，端口、SSL证书、日志等等，都托给tomcat。</p><p>如果打的是jar包，我通常会用nohup启动，比如生产环境的一些db、redis、第三方secret等不会配置到项目里，今天要记录的便是用nohup java -jar 启动jar包时如何加载环境变量配置的问题。</p><p>java语言开发的jar包启动时可以按照如下方式加启动参数。</p><h3 id="方式一：-DpropName-propValue"><a href="#方式一：-DpropName-propValue" class="headerlink" title="方式一：-DpropName=propValue"></a>方式一：-DpropName=propValue</h3><p>这种方式应该很快都能找到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-DpropName=propValue</span><br></pre></td></tr></table></figure></p><p>比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -DdatabaseUrl=&quot;mysql://localhost:3306/pdb?user=root&amp;password=root&quot;  -Dapp.key=&quot;123&quot; -Dapp.secret=&quot;xxx&quot;  demo.jar</span><br></pre></td></tr></table></figure></p><p>多个参数也可以。</p><h3 id="方式二：参数直接跟在命令后面，多个参数之间用空格隔开"><a href="#方式二：参数直接跟在命令后面，多个参数之间用空格隔开" class="headerlink" title="方式二：参数直接跟在命令后面，多个参数之间用空格隔开"></a>方式二：参数直接跟在命令后面，多个参数之间用空格隔开</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar demo.jar JOURNAL_TREENODE_DATA-20190404174502.txt processType=1</span><br></pre></td></tr></table></figure><p>这种方式参数就是jar包里主启动类中main方法的args参数，按顺序来</p><h3 id="方式三：使用springboot的方式，–propName-propValue方式"><a href="#方式三：使用springboot的方式，–propName-propValue方式" class="headerlink" title="方式三：使用springboot的方式，–propName=propValue方式"></a>方式三：使用springboot的方式，–propName=propValue方式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar demo.jar  --spring.profiles.active=dev  --server.port=8181</span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>运行jar包时指定端口：java -jar xxx.jar –server.port=8088<br>若命令行传入的server.port没有作用，服务仍然使用8081端口启动，原因是spring-cloud-config会覆盖命令行传入的参数，这是有意为之，</p><p>办法是在web-prod.yml中做点小改动，让“配置”变得“可配置”：加一对花括符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.port=&#123;port:8081&#125;</span><br></pre></td></tr></table></figure></p><h2 id="用clojure编写的jar里有惊喜"><a href="#用clojure编写的jar里有惊喜" class="headerlink" title="用clojure编写的jar里有惊喜"></a>用clojure编写的jar里有惊喜</h2><p>在clojure上面的配置就变得诡异了，猜猜下面的配置能不能生效呢？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -Ddatabase-url=&quot;mysql://localhost:3306/pdb?user=root&amp;password=root&quot;  -Dapp.key=&quot;123&quot; -Dapp.secret=&quot;xxx&quot;  demo.jar</span><br></pre></td></tr></table></figure></p><p>如果你用<code>cider-conect</code>通过nrepl的端口连接上你的服务，你会发现，这个配置导致<code>database-url</code>的值确实已经改了，但是后面两个没有。</p><p>究其原因，我们java从classpath里获取参数使用的是properties形式的，也就是json的格式。这不难理解，spring有它的办法，clojure当然也有自己的方式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;app&quot;: &#123;</span><br><span class="line">    &quot;key&quot;: &quot;123&quot;,</span><br><span class="line">    &quot;secret&quot;:&quot;xxx&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然json和我们的edn里map是很像的，但是毕竟是不同，于是要分析下现在的edn里的配置信息他是怎么读取的呢？</p><h3 id="代码里的env"><a href="#代码里的env" class="headerlink" title="代码里的env"></a>代码里的env</h3><p>在<code>config</code>这个namespace里找到了env<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(defstate env</span><br><span class="line">  :start</span><br><span class="line">  (load-config</span><br><span class="line">   :merge</span><br><span class="line">   [(args)</span><br><span class="line">    (source/from-system-props)</span><br><span class="line">    (source/from-env)]))</span><br></pre></td></tr></table></figure></p><h3 id="cprop加载配置"><a href="#cprop加载配置" class="headerlink" title="cprop加载配置"></a>cprop加载配置</h3><p><code>cprop.source</code>这个文件就是用来加载edn文件的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(defn- env-&gt;path [k]</span><br><span class="line">  (k-&gt;path k &quot;_&quot; #&quot;__&quot;))</span><br><span class="line"></span><br><span class="line">(defn read-system-env</span><br><span class="line">  ([]</span><br><span class="line">   (read-system-env &#123;&#125;))</span><br><span class="line">  ([opts]</span><br><span class="line">   (-&gt;&gt; (System/getenv)</span><br><span class="line">        (map (fn [[k v]] [(env-&gt;path k)</span><br><span class="line">                          (str-&gt;value v opts)]))</span><br><span class="line">        (into &#123;&#125;))))</span><br></pre></td></tr></table></figure></p><p>从获取的过程看，应该是会把<code>_</code>做为单元节点断开，因此需要改成这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -Ddatabase-url=&quot;mysql://localhost:3306/pdb?user=root&amp;password=root&quot;  -Dapp_key=&quot;123&quot; -Dapp_secret=&quot;xxx&quot;  demo.jar</span><br></pre></td></tr></table></figure></p><p>对应到edn里应该是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;:app</span><br><span class="line">    &#123;:key &quot;123&quot;</span><br><span class="line">     :secret &quot;xxx&quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>如果仔细看看<a href="https://github.com/tolitius/cprop#loading-config" target="_blank" rel="noopener">cprop</a>这个库就不难理解了。<br>cprop加载配置文件的顺序是 :</p><blockquote><p>By default cprop will merge all configurations it can find in the following order:<br>classpath resource config<br>file on a file system (pointed by a conf system property or by (load-config :file <path></path>))<br>custom configurations, maps from various sources, etc.<br>System properties<br>ENV variables</p></blockquote><p>对于ENV的加载也有明确说明</p><blockquote><p>ENV variables lack structure. The only way to mimic the structure is via use of an underscore character. The _ is converted to - by cprop, so instead, to identify nesting, two underscores can be used.</p></blockquote><p>了解更多详情，请阅读<a href="https://github.com/tolitius/cprop#speaking-env-variables" target="_blank" rel="noopener">cprop介绍</a></p><h2 id="我的期望"><a href="#我的期望" class="headerlink" title="我的期望"></a>我的期望</h2><p>像上面的命令如果有20个参数需要在启东时指定，估计看那个命令就疯了，那能不能在启东时指定一个配置文件，比如prod-config.edn之类的呢？我没有找到，如果有就更方便了。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/tolitius/cprop#loading-config" target="_blank" rel="noopener">cprop</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>shadow-cljs多环境多base domin配置(closure-defines篇)</title>
      <link href="/2020/01/03/shadow-cljs%E5%A4%9A%E7%8E%AF%E5%A2%83%E5%A4%9Abase%20domin%E9%85%8D%E7%BD%AE(closure-defines%E7%AF%87)/"/>
      <url>/2020/01/03/shadow-cljs%E5%A4%9A%E7%8E%AF%E5%A2%83%E5%A4%9Abase%20domin%E9%85%8D%E7%BD%AE(closure-defines%E7%AF%87)/</url>
      
        <content type="html"><![CDATA[<p>用shadow-cljs编译代码时使用环境变量实现多编译环境</p><p><a href="https://www.jianshu.com/p/fc68c58cae5c" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="原方案"><a href="#原方案" class="headerlink" title="原方案"></a>原方案</h2><p>前端有个config.cljs文件，定义了一个domain的函数，指定api接口的base-url，本地开发、测试、生产分别修改成不同地址。类似这样吧：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(ns &lt;&lt;project-ns&gt;&gt;.config)</span><br><span class="line"></span><br><span class="line">;; 测试环境</span><br><span class="line">#_(def domain &quot;https://test.url.com&quot;)</span><br><span class="line"></span><br><span class="line">;; 生产环境</span><br><span class="line">#_(def domain &quot;https://prod.url.com&quot;)</span><br><span class="line"></span><br><span class="line">;;开发环境</span><br><span class="line">(def domain &quot;http://localhost:3000&quot;)</span><br></pre></td></tr></table></figure></p><p>很显然，这个不是长久之计，又不智能，部署时还要修改地址，容易忘记，并且还有时会把修改提交上去。尤其是没有持续集成工具帮助做部署工作的时候。~</p><h2 id="当前方案"><a href="#当前方案" class="headerlink" title="当前方案"></a>当前方案</h2><p><a href="https://shadow-cljs.github.io/docs/UsersGuide.html" target="_blank" rel="noopener">shadow-cljs用户指南</a>我没有通读，但是从目录看也有<a href="https://shadow-cljs.github.io/docs/UsersGuide.html#shadow-env" target="_blank" rel="noopener">环境变量</a>章节看，也有方案。</p><p>采用<a href="https://github.com/shadow-cljs/shadow-cljs.github.io/blob/master/docs/build-config.adoc#closure-defines" target="_blank" rel="noopener">closure-defines</a>的方案，指定多个build id,在不同的build中传入环境变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(ns &lt;&lt;project-ns&gt;&gt;.config)</span><br><span class="line"></span><br><span class="line">;;此处的变量需要修改的请在项目跟目录的shadow-cljs.edn中修改</span><br><span class="line">(goog-define domain &quot;http://localhost:3000&quot;)</span><br></pre></td></tr></table></figure></p><p><code>shadow-cljs.edn</code>配置大概这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">:builds</span><br><span class="line">&#123;:app</span><br><span class="line">  &#123;:target :browser</span><br><span class="line">   :output-dir &quot;target/cljsbuild/public/dev/js&quot;</span><br><span class="line">   :asset-path &quot;/js&quot;</span><br><span class="line">   :modules &#123;:app &#123;:entries [YOUR-APP.app]&#125;&#125;</span><br><span class="line">   :devtools</span><br><span class="line">   &#123;:watch-dir &quot;resources/public&quot;</span><br><span class="line">    :ignore-warnings true</span><br><span class="line">    :preloads [re-frisk.preload]&#125;</span><br><span class="line">   :closure-defines &#123;&quot;re_frame.trace.trace_enabled_QMARK_&quot; true&#125;</span><br><span class="line">   :dev  &#123;:closure-defines &#123;&lt;&lt;project-ns&gt;&gt;.config/domain &quot;http://localhost:3000&quot;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">  :test-app</span><br><span class="line">  &#123;:target :browser</span><br><span class="line">   :output-dir &quot;target/cljsbuild/public/test/js&quot;</span><br><span class="line">   :asset-path &quot;/js&quot;</span><br><span class="line">   :modules &#123;:app &#123;:entries [YOUR-APP.app]&#125;&#125;</span><br><span class="line">   :release &#123;:closure-defines &#123;&lt;&lt;project-ns&gt;&gt;.config/domain &quot;https://test.url.com&quot;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">  :prod-app</span><br><span class="line">  &#123;:target :browser</span><br><span class="line">   :output-dir &quot;target/cljsbuild/public/prod/js&quot;</span><br><span class="line">   :asset-path &quot;/js&quot;</span><br><span class="line">   :modules &#123;:app &#123;:entries [YOUR-APP.app]&#125;&#125;</span><br><span class="line">   :release &#123;:closure-defines &#123;&lt;&lt;project-ns&gt;&gt;.config/domain &quot;https://prod.url.com&quot;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure></p><h4 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h4><ul><li>可以定义多个变量，比如从多个api地址</li><li>可以配置无限多个</li></ul><h4 id="不好处"><a href="#不好处" class="headerlink" title="不好处"></a>不好处</h4><ul><li>如果有新增地址，需要修改多个builds的配置</li><li>地址明文可见，想做部署层的保密的话，不可以。</li></ul><h2 id="其他方案"><a href="#其他方案" class="headerlink" title="其他方案"></a>其他方案</h2><p>还是在这篇文章里，后面提到了别的方案。当前来说上面的不利之处还不是个问题，用到时再调整其他方案。</p><ul><li><a href="https://github.com/shadow-cljs/shadow-cljs.github.io/blob/master/docs/build-config.adoc#conditional-reading" target="_blank" rel="noopener">Conditional Reading</a></li><li><a href="https://github.com/shadow-cljs/shadow-cljs.github.io/blob/master/docs/build-config.adoc#overriding-from-the-cli" target="_blank" rel="noopener">overriding-from-the-cli</a></li><li><a href="https://github.com/shadow-cljs/shadow-cljs.github.io/blob/master/docs/build-config.adoc#using-environment-variables" target="_blank" rel="noopener">using-environment-variables</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> shadow-cljs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojurescript </tag>
            
            <tag> shadow-cljs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojurescript编译后合并css文件解决缓存问题</title>
      <link href="/2020/01/02/clojurescript%E7%BC%96%E8%AF%91%E5%90%8E%E5%90%88%E5%B9%B6css%E6%96%87%E4%BB%B6%E8%A7%A3%E5%86%B3%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98/"/>
      <url>/2020/01/02/clojurescript%E7%BC%96%E8%AF%91%E5%90%8E%E5%90%88%E5%B9%B6css%E6%96%87%E4%BB%B6%E8%A7%A3%E5%86%B3%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>clojurescript项目用<code>shadow-cljs</code>编译后将所有css文件压缩成一个，并加版本号访问较少缓存。</p><p><a href="https://www.jianshu.com/p/3bc7713a5b08" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>本篇跟<a href="https://www.jianshu.com/p/b60fe36cbe84" target="_blank" rel="noopener">electron安装包里封装浏览器直接访问URL配置</a>有关。</p><p>我们目前的配置用<code>shadow-cljs release app</code> 打包好js文件后，需要将入口文件、图片、css、js一起copy到部署服务器。<br>其中css是散碎的各个页面自行添加的样式文件。<br>但是用electron直接访问URL以后，css总是被缓存下来，这样就导致了一个系统修改的样式后在应用里打开不生效的问题。</p><h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>将在部署 时将众多css文件内容合并到一个css文件，然后在入口的<code>index.html</code>里引入这个被合并的css文件，同时加上版本号，禁止缓存。</p><h2 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h2><ul><li><h3 id="第一步，准备脚本"><a href="#第一步，准备脚本" class="headerlink" title="第一步，准备脚本"></a>第一步，准备脚本</h3>因为使用jenkins发布，所以先搞一个合并文件的脚本(merge_css.sh)，等着在jenkins里远端执行一下。内容如下：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">获取第一个参数,目标目录</span></span><br><span class="line">srcpath=$1</span><br><span class="line"><span class="meta">#</span><span class="bash">第二个参数，输出文件</span></span><br><span class="line">target_file=$2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">先删除原目标文件</span></span><br><span class="line">rm -rf $&#123;target_file&#125;;</span><br><span class="line"></span><br><span class="line">function writeByDir()&#123;</span><br><span class="line">    echo $1</span><br><span class="line">    for file in $1/*</span><br><span class="line">      do</span><br><span class="line">        if test -f $file</span><br><span class="line">          then</span><br><span class="line">  echo $file</span><br><span class="line">          cat "$file" &gt;&gt; "$&#123;target_file&#125;"</span><br><span class="line">      echo "" &gt;&gt; "$&#123;target_file&#125;"</span><br><span class="line">        else</span><br><span class="line">          writeByDir $file</span><br><span class="line">       fi</span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">writeByDir $&#123;srcpath&#125;</span><br></pre></td></tr></table></figure></li></ul><p>很简单，连参数合理性都没有校验，自己用自己知道就行。</p><ul><li><h3 id="第二步，远端执行"><a href="#第二步，远端执行" class="headerlink" title="第二步，远端执行"></a>第二步，远端执行</h3>在jenkins里，跟原来一样，将css、img、index.html、app.js核心文件<code>rsync -rzve</code> 到远端以后，再构建最后加一个合并的shell<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p2020 root@*.*.*.* 'bash -s ' &lt; /opt/auto-deploy-scripts/merge_css.sh /opt/site/project/css /opt/site/project/css/main.css</span><br></pre></td></tr></table></figure></li></ul><p>在原来的css文件下，将生成一个main.css文件。</p><h3 id="第三步，使用合并的css文件"><a href="#第三步，使用合并的css文件" class="headerlink" title="第三步，使用合并的css文件"></a>第三步，使用合并的css文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"cn"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>平台<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span> <span class="attr">name</span>=<span class="string">"viewport"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/antd/3.18.0/antd.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Our JavaScript will modify the DOM inside this element --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">    document.write("<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">'stylesheet'</span> <span class="attr">type</span>=<span class="string">'text/css'</span> <span class="attr">href</span>=<span class="string">'css/main.css?v="+new Date().getTime()+"'</span>&gt;</span>");</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">    document.write("<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">'text/javascript'</span> <span class="attr">src</span>=<span class="string">'doctorjs/app.js?v="+new Date().getTime()+"'</span> <span class="attr">type</span>=<span class="string">'text/javascript'</span>&gt;</span><span class="xml"><span class="tag">&lt;<span class="name">\</span>/<span class="attr">script</span>&gt;</span>");</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>经检查，已生效。<br>完！！！</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-cb94031c9ca68648.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><h2 id="遗留问题"><a href="#遗留问题" class="headerlink" title="遗留问题"></a>遗留问题</h2><ul><li>本地开发因为没有压缩成一个css文件，所以可能会提示main.css下载404，可以创建个同名空文件</li><li>因为单个页面还是引用的自己的css文件，所以那些碎片css文件加载完成前页面元素还是聚集在view的左上角。加上合并的css，相当于双重样式。</li><li>还是把css都复制到了远端，做好了当然是编译时就编译成一个文件，并且去重，压缩等等，能集成webpack了再搞</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/3e3b1a5fa077" target="_blank" rel="noopener">Shell脚本合并文本文件</a></p>]]></content>
      
      
      <categories>
          
          <category> clojurescript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojurescript </tag>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>electron安装包里封装浏览器直接访问URL配置</title>
      <link href="/2019/12/31/electron%E5%AE%89%E8%A3%85%E5%8C%85%E9%87%8C%E5%B0%81%E8%A3%85%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AEURL%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/12/31/electron%E5%AE%89%E8%A3%85%E5%8C%85%E9%87%8C%E5%B0%81%E8%A3%85%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AEURL%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>在下载的electron里直接访问某个url地址</p><p><a href="https://www.jianshu.com/p/b60fe36cbe84" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>也是因为<a href="https://www.jianshu.com/p/bb7a92618379" target="_blank" rel="noopener">clojurescript编译后用electron打包成桌面应用安装程序</a>这篇没有解决问题，所以考虑直接用electron打个chrome浏览器进去，然后制定访问的网页，代替本地资源。</p><p>话说前一篇之所以没有成功，也不是完全解决不了，而是因为不想折腾了，解决的话思路应该有两条：</p><blockquote><ol><li>figwheel不支持npm程序，换成shadow-cljs之类的编译器</li><li>增加electron依赖，在应用层触发更新检查</li></ol></blockquote><p>这篇说明一下直接运行URL的配置和注意事项。</p><h3 id="1-下载electron的压缩包"><a href="#1-下载electron的压缩包" class="headerlink" title="1. 下载electron的压缩包"></a>1. 下载electron的压缩包</h3><p><a href="https://electronjs.org/releases/stable" target="_blank" rel="noopener">https://electronjs.org/releases/stable</a></p><p>下载解压，内部目录大概如此<br><img src="https://upload-images.jianshu.io/upload_images/4109786-55d7933d05ae87ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="electron"></p><p>主要运行时文件就是<code>resources/default_app.asar</code></p><h3 id="2-安装asar包解压缩命令"><a href="#2-安装asar包解压缩命令" class="headerlink" title="2. 安装asar包解压缩命令"></a>2. 安装<code>asar</code>包解压缩命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -g asar</span><br></pre></td></tr></table></figure><p>两个命令(asar –help)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">asar pack app default_app.asar    </span><br><span class="line">asar extract|e &lt;archive&gt; &lt;dest&gt;</span><br></pre></td></tr></table></figure></p><p>其他命令自行百度。</p><h3 id="3-核心文件"><a href="#3-核心文件" class="headerlink" title="3.核心文件"></a>3.核心文件</h3><p>核心文件就是打包成<code>resources/default_app.asar</code>所需要的文件。在<code>electron</code>的项目目录下，创建一个文件夹<code>app</code> ，里面新建两个文件。</p><h4 id="3-1-main-js"><a href="#3-1-main-js" class="headerlink" title="3.1 main.js"></a>3.1 main.js</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">// app 模块是为了控制整个应用的生命周期设计的。</span><br><span class="line">// BrowserWindow 类让你有创建一个浏览器窗口的权力。</span><br><span class="line">const &#123;app, BrowserWindow, Menu, ipcMain&#125; = require(&apos;electron&apos;);</span><br><span class="line">const nativeImage = require(&apos;electron&apos;).nativeImage;</span><br><span class="line">var overlay = nativeImage.createFromPath(&apos;icon.png&apos;);</span><br><span class="line"></span><br><span class="line">const mainWindowURL = &apos;https://www.baidu.com&apos;;</span><br><span class="line"></span><br><span class="line">let mainWindow;</span><br><span class="line"></span><br><span class="line">//api:https://wizardforcel.gitbooks.io/electron-doc/content/api/browser-window.html</span><br><span class="line">function createWindow () &#123;</span><br><span class="line">    console.log(&quot;createWindow......&quot;); </span><br><span class="line">      mainWindow = new BrowserWindow(&#123;</span><br><span class="line">      // fullscreen: true,</span><br><span class="line">      maximizable: true, //支持最大化</span><br><span class="line">      show: false,   //为了让初始化窗口显示无闪烁，先关闭显示，等待加载完成后再显示。</span><br><span class="line">      // icon: &quot;https://medical.3vyd.com/alk/prod/pc/icon/icon.ico&quot;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    // Emitted when the window is closed.</span><br><span class="line">    mainWindow.on(&apos;closed&apos;, function () &#123;</span><br><span class="line">      console.log(&quot;closed......&quot;); </span><br><span class="line">      mainWindow = null;</span><br><span class="line">    &#125;)</span><br><span class="line">    // mainWindow.once(&apos;ready-to-show&apos;, () =&gt; &#123;    //开启这个以后点击了图片虽然没有白屏，但是会感觉不到点了没点</span><br><span class="line">    mainWindow.maximize();    //打开时最大化打开，不是全屏，保留状态栏</span><br><span class="line">    // &#125;)</span><br><span class="line"></span><br><span class="line">  // mainWindow.setOverlayIcon(overlay, &quot;医敏&quot;)</span><br><span class="line">  mainWindow.setTitle(&quot;过敏性疾病高端用户平台&quot;);</span><br><span class="line">  mainWindow.setAutoHideMenuBar(true);//自动隐藏菜单</span><br><span class="line">  mainWindow.loadURL(mainWindowURL);</span><br><span class="line">  // app.commandLine.appendSwitch(&quot;--disable-http-cache&quot;)   禁用缓存</span><br><span class="line">  // mainWindow.webContents.openDevTools(&#123;mode:&apos;bottom&apos;&#125;);</span><br><span class="line">  mainWindow.show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.on(&apos;ready&apos;, function() &#123;</span><br><span class="line">  console.log(&quot;ready......&quot;);</span><br><span class="line">  createWindow();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// Quit when all windows are closed.</span><br><span class="line">app.on(&apos;window-all-closed&apos;, function () &#123;</span><br><span class="line">  // On OS X it is common for applications and their menu bar</span><br><span class="line">  // to stay active until the user quits explicitly with Cmd + Q</span><br><span class="line">  if (process.platform !== &apos;darwin&apos;) &#123;</span><br><span class="line">    app.quit();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-2-package-json"><a href="#3-2-package-json" class="headerlink" title="3.2 package.json"></a>3.2 package.json</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;electron&quot;,</span><br><span class="line">  &quot;productName&quot;: &quot;Electron&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;main.js&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong><code>productName</code>的值千万不需要改。</p><h4 id="4-打包"><a href="#4-打包" class="headerlink" title="4. 打包"></a>4. 打包</h4><p>在<code>electron/resources</code>目录下执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf default_app.asar</span><br><span class="line">asar pack app default_app.asar</span><br></pre></td></tr></table></figure></p><p>也就是用自己心大的asar文件替换原来旧的。</p><h4 id="5-测试"><a href="#5-测试" class="headerlink" title="5. 测试"></a>5. 测试</h4><p>在windows上访问该exe应用，一般应该没有问题打开百度的。</p><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><ol><li>electron缓存问题<br>浏览器访问的资源都会被缓存，几种方式避免缓存。</li></ol><ul><li>在css或者js等资源后面加版本号</li><li>打包时禁用缓存，参考：<a href="https://newsn.net/say/electron-no-cache.html" target="_blank" rel="noopener">electron 如何禁用本地缓存？强制刷新缓存方案</a></li><li>清除本地cache<blockquote><p>windows上位置：<br>The Electron stores it’s cache in these folders:<br>Windows:<br>C:\Users\<user>\AppData\Roaming\<yourappname>\Cache<br>Linux:<br>/home/<user>/.config/<yourappname>/Cache<br>OS X:<br>/Users/<user>/Library/Application Support/<yourappname>/Cache</yourappname></user></yourappname></user></yourappname></user></p></blockquote></li></ul><ol start="2"><li>升级问题<br>因为直接访问url，所以不存在上一篇说的版本更新问题。</li></ol>]]></content>
      
      
      <categories>
          
          <category> electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojurescript </tag>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojurescript编译后用electron打包成桌面应用安装程序</title>
      <link href="/2019/12/22/clojurescript%E7%BC%96%E8%AF%91%E5%90%8E%E7%94%A8electron%E6%89%93%E5%8C%85%E6%88%90%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F/"/>
      <url>/2019/12/22/clojurescript%E7%BC%96%E8%AF%91%E5%90%8E%E7%94%A8electron%E6%89%93%E5%8C%85%E6%88%90%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<p>用electron把clojurescript编译后的静态资源文件打包成windows安装程序</p><p><a href="https://www.jianshu.com/p/bb7a92618379" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>clojurescript最终还是编译成javascript在浏览器执行，本文描述的是在项目本身在C/S环境上运行没有问题的情况下，怎么将这些资源文件用electron打包成windows或者mac的B/S应用。</p><p>技术语言和工具：</p><ul><li><a href="https://clojurescript.org/" target="_blank" rel="noopener">clojurescript</a></li><li><a href="https://electronjs.org/" target="_blank" rel="noopener">electronjs</a></li><li><a href="https://www.electron.build/" target="_blank" rel="noopener">electron-builder</a></li></ul><h2 id="第一步：打包cljs成可通过浏览器浏览的网络资源"><a href="#第一步：打包cljs成可通过浏览器浏览的网络资源" class="headerlink" title="第一步：打包cljs成可通过浏览器浏览的网络资源"></a>第一步：打包cljs成可通过浏览器浏览的网络资源</h2><p>我这个项目是用figwheel编译的，打包命令如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lein cljsbuild once min-doctor</span><br></pre></td></tr></table></figure></p><p>如果是用shadow-cljs编译项目的话，命令应该是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shadow-cljs release app</span><br></pre></td></tr></table></figure></p><p><strong>重点来了</strong>：这些编译文件只是将cljs打包成app.js文件，目录一般在target目录的某个问题，这两种方式都是这样的。<br>但是众所周知，运行一个网页只要一个js肯定是不行的，在用luminus创建出来的模板里，css和image文件都在<code>resource/public</code>目录下，包括入口的index.html文件。</p><p>用nginx等部署时需要将这些文件也一并copy到nginx服务器上，这一步就不说了。</p><h2 id="第二步：将这些网络资源打包成electron安装程序"><a href="#第二步：将这些网络资源打包成electron安装程序" class="headerlink" title="第二步：将这些网络资源打包成electron安装程序"></a>第二步：将这些网络资源打包成electron安装程序</h2><p>有了上面的入口文件，css和image，以及唯一的一个js文件，我们只需要将这些文件和electron的配置文件放在一起便可以了进行下一步了。</p><h4 id="1-构建electron的打包目录"><a href="#1-构建electron的打包目录" class="headerlink" title="1. 构建electron的打包目录"></a>1. 构建electron的打包目录</h4><p>我在项目根目录创建了个<code>electron</code>文件夹，会将资源文件copy到这个位置下。所以整个项目结构大概如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">├── project</span><br><span class="line">    │   ├── resource</span><br><span class="line">    │   │     └──public</span><br><span class="line">    │   │            └── img</span><br><span class="line">    │   │                    ├── logo.png</span><br><span class="line">    │   │                    ├── user-header.png</span><br><span class="line">    │   │            └── css</span><br><span class="line">    │   │            └── js</span><br><span class="line">    │   │            └── index.html</span><br><span class="line">    │   ├── src</span><br><span class="line">    │   ├── electron</span><br><span class="line">    │   │      └──public</span><br><span class="line">    │   │            └── img</span><br><span class="line">    │   │                    ├── logo.png</span><br><span class="line">    │   │                    ├── user-header.png</span><br><span class="line">    │   │            └── css</span><br><span class="line">    │   │            └── js</span><br><span class="line">    │   │            └── index.html</span><br><span class="line">    │   │      └──package.json</span><br><span class="line">    │   │      └──main.js</span><br></pre></td></tr></table></figure></p><p>其中electron下的public文件夹内容结构就跟往nginx部署时是一样的，<code>main.js</code>和<code>package.json</code>是为electron手动加入的。main.js是win的默认行为的指定文件，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">// Modules to control application life and create native browser window</span><br><span class="line">const &#123;app, BrowserWindow&#125; = require(&apos;electron&apos;)</span><br><span class="line">// Keep a global reference of the window object, if you don&apos;t, the window will</span><br><span class="line">// be closed automatically when the JavaScript object is garbage collected.</span><br><span class="line">let mainWindow</span><br><span class="line">const mainWindowURL = &apos;http://localhost:10386/doc.html&apos;;</span><br><span class="line"></span><br><span class="line">function createWindow () &#123;</span><br><span class="line">  // Create the browser window.</span><br><span class="line">  mainWindow = new BrowserWindow(&#123;</span><br><span class="line">    //fullscreen: true,</span><br><span class="line">    webPreferences: &#123;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  // and load the index.html of the app.</span><br><span class="line">//   mainWindow.loadFile(&apos;index.html&apos;)</span><br><span class="line">  mainWindow.loadURL(mainWindowURL)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  // Emitted when the window is closed.</span><br><span class="line">  mainWindow.on(&apos;closed&apos;, function () &#123;</span><br><span class="line">    // Dereference the window object, usually you would store windows</span><br><span class="line">    // in an array if your app supports multi windows, this is the time</span><br><span class="line">    // when you should delete the corresponding element.</span><br><span class="line">    mainWindow = null</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function bootstrapServer() &#123;</span><br><span class="line">  const handler = require(&apos;serve-handler&apos;);</span><br><span class="line">  const http = require(&apos;http&apos;);</span><br><span class="line"></span><br><span class="line">  const server = http.createServer((request, response) =&gt; &#123;</span><br><span class="line">    // You pass two more arguments for config and middleware</span><br><span class="line">    // More details here: https://github.com/zeit/serve-handler#options</span><br><span class="line">    return handler(request, response, &#123;</span><br><span class="line">      public: &apos;resources/app.asar/public&apos;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  server.listen(10386, () =&gt; &#123;</span><br><span class="line">    createWindow()</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.on(&apos;ready&apos;, bootstrapServer)</span><br><span class="line"></span><br><span class="line">// Quit when all windows are closed.</span><br><span class="line">app.on(&apos;window-all-closed&apos;, function () &#123;</span><br><span class="line">  // On OS X it is common for applications and their menu bar</span><br><span class="line">  // to stay active until the user quits explicitly with Cmd + Q</span><br><span class="line">  if (process.platform !== &apos;darwin&apos;) &#123;</span><br><span class="line">    app.quit()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.on(&apos;activate&apos;, function () &#123;</span><br><span class="line">  // On OS X it&apos;s common to re-create a window in the app when the</span><br><span class="line">  // dock icon is clicked and there are no other windows open.</span><br><span class="line">  if (mainWindow === null) &#123;</span><br><span class="line">    createWindow()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// In this file you can include the rest of your app&apos;s specific main process</span><br><span class="line">// code. You can also put them in separate files and require them here.</span><br></pre></td></tr></table></figure></p><p>package.json的内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;eallergy&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;main.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;start&quot;: &quot;electron .&quot;,</span><br><span class="line">    &quot;dist&quot;: &quot;electron-builder -c.extraMetadata.main=main.js&quot;,</span><br><span class="line">    &quot;dist-32&quot;: &quot;electron-builder -c.extraMetadata.main=main.js --ia32&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;build&quot;: &#123;</span><br><span class="line">    &quot;productName&quot;: &quot;eallergy&quot;,</span><br><span class="line">    &quot;appId&quot;: &quot;alk.doctor&quot;,</span><br><span class="line">    &quot;copyright&quot;:&quot;红创科技&quot;,</span><br><span class="line">    &quot;directories&quot;: &#123;</span><br><span class="line">      &quot;buildResources&quot;: &quot;public&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;files&quot;: [</span><br><span class="line">      &quot;main.js&quot;,</span><br><span class="line">      &quot;public/**/*&quot;,</span><br><span class="line">      &quot;node_modules/**/*&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;mac&quot;: &#123;</span><br><span class="line">      &quot;category&quot;: &quot;your.app.category.type&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;electron&quot;: &quot;^5.0.7&quot;,</span><br><span class="line">    &quot;electron-builder&quot;: &quot;^21.0.15&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;serve-handler&quot;: &quot;^6.1.0&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>将资源文件copy到<code>electron/public/</code>位置后执行<code>yarn</code>和<code>yarn dist</code>命令（执行出错的请看下面的解决方案）。</p><h4 id="2-打包"><a href="#2-打包" class="headerlink" title="2. 打包"></a>2. 打包</h4><p>执行打包之前还有点环境准备工作</p><blockquote><p>安装node<br>安装yarn<br>安装electron<br>安装electron-builder</p></blockquote><p>然后可以在electron目录下载执行打包操作<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yarn</span></span><br><span class="line">yarn install v1.21.1</span><br><span class="line">warning package.json: License should be a valid SPDX license expression</span><br><span class="line">warning eallergy@1.0.0: License should be a valid SPDX license expression</span><br><span class="line">[1/4] Resolving packages...</span><br><span class="line">[2/4] Fetching packages...</span><br><span class="line">[3/4] Linking dependencies...</span><br><span class="line">[4/4] Building fresh packages...</span><br><span class="line">Done in 13.47s.</span><br><span class="line"><span class="meta">$</span><span class="bash"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yarn dist</span></span><br><span class="line">yarn run v1.21.1</span><br><span class="line">warning package.json: License should be a valid SPDX license expression</span><br><span class="line"><span class="meta">$</span><span class="bash"> electron-builder -c.extraMetadata.main=main.js</span></span><br><span class="line">  • electron-builder  version=21.0.15 os=10.0.18363</span><br><span class="line">  • loaded configuration  file=package.json ("build" field)</span><br><span class="line">  • description is missed in the package.json  appPackageFile=Z:\git\redcreation\alk-wxapi\alk-web\electron\package.json</span><br><span class="line">  • author is missed in the package.json  appPackageFile=Z:\git\redcreation\alk-wxapi\alk-web\electron\package.json</span><br><span class="line">  • packaging       platform=win32 arch=x64 electron=5.0.7 appOutDir=dist\win-unpacked</span><br><span class="line">  • default Electron icon is used  reason=application icon is not set</span><br><span class="line">  • building        target=nsis file=dist\eallergy Setup 1.0.0.exe archs=x64 oneClick=true perMachine=false</span><br><span class="line">  • building block map  blockMapFile=dist\eallergy Setup 1.0.0.exe.blockmap</span><br><span class="line">Done in 45.81s.</span><br><span class="line"><span class="meta">$</span><span class="bash"></span></span><br></pre></td></tr></table></figure></p><h4 id="3-打包文件"><a href="#3-打包文件" class="headerlink" title="3. 打包文件"></a>3. 打包文件</h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f108f96197e6f133.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="electron和electron-builder相关文件安装失败解决方案"><a href="#electron和electron-builder相关文件安装失败解决方案" class="headerlink" title="electron和electron-builder相关文件安装失败解决方案"></a>electron和electron-builder相关文件安装失败解决方案</h2><p>错误版本不尽相同，但是大概如下吧<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yarn dist</span></span><br><span class="line">yarn run v1.21.1</span><br><span class="line">warning package.json: License should be a valid SPDX license expression</span><br><span class="line"><span class="meta">$</span><span class="bash"> electron-builder -c.extraMetadata.main=main.js</span></span><br><span class="line">  • electron-builder  version=21.0.15 os=10.0.18363</span><br><span class="line">  • loaded configuration  file=package.json ("build" field)</span><br><span class="line">  • description is missed in the package.json  appPackageFile=Z:\git\redcreation\alk-wxapi\alk-web\electron\package.json</span><br><span class="line">  • author is missed in the package.json  appPackageFile=Z:\git\redcreation\alk-wxapi\alk-web\electron\package.json</span><br><span class="line">  • packaging       platform=win32 arch=x64 electron=5.0.7 appOutDir=dist\win-unpacked</span><br><span class="line">  • default Electron icon is used  reason=application icon is not set</span><br><span class="line">  • building        target=nsis file=dist\eallergy Setup 1.0.0.exe archs=x64 oneClick=true perMachine=false</span><br><span class="line">  • downloading     url=https://github.com/electron-userland/electron-builder-binaries/releases/download/nsis-3.0.3.2/nsis-3.0.3.2.7z size=1.4 MB parts=1</span><br><span class="line">  • retrying        attempt=1</span><br><span class="line">  • retrying        attempt=2</span><br><span class="line">  • retrying        attempt=3</span><br><span class="line">  ⨯ part download request failed with status code 403</span><br><span class="line">github.com/develar/app-builder/pkg/download.(*Part).doRequest</span><br><span class="line">        /Volumes/data/Documents/app-builder/pkg/download/Part.go:126</span><br><span class="line">github.com/develar/app-builder/pkg/download.(*Part).download</span><br><span class="line">        /Volumes/data/Documents/app-builder/pkg/download/Part.go:67</span><br><span class="line">github.com/develar/app-builder/pkg/download.(*Downloader).DownloadResolved.func1.1</span><br><span class="line">        /Volumes/data/Documents/app-builder/pkg/download/downloader.go:107</span><br><span class="line">github.com/develar/app-builder/pkg/util.MapAsyncConcurrency.func2</span><br><span class="line">        /Volumes/data/Documents/app-builder/pkg/util/async.go:68</span><br><span class="line">runtime.goexit</span><br><span class="line">        /usr/local/Cellar/go/1.12.7/libexec/src/runtime/asm_amd64.s:1337</span><br><span class="line">  ⨯ Z:\git\redcreation\alk-wxapi\alk-web\electron\node_modules\app-builder-lib\node_modules\app-builder-bin\win\x64\app-builder.exe exited with code ERR_ELECTRON_BUILDER_CANNOT_EXECUTE  stackTrace=</span><br><span class="line">          Error: Z:\git\redcreation\alk-wxapi\alk-web\electron\node_modules\app-builder-lib\node_modules\app-builder-bin\win\x64\app-builder.exe exited with code ERR_ELECTRON_BUILDER_CANNOT_EXECUTE</span><br><span class="line">at ChildProcess.childProcess.once.code (Z:\git\redcreation\alk-wxapi\alk-web\electron\node_modules\app-builder-lib\node_modules\builder-util\src\util.ts:239:14)</span><br><span class="line">                   at Object.onceWrapper (events.js:273:13)</span><br><span class="line">                                                                                                                                                                                                at ChildProcess.emit (events.js:182:13)</span><br><span class="line">                                                                                                                                                                                                at maybeClose (internal/child_process.js:962:16)</span><br><span class="line">                                                                                                                                                                                                at Process.ChildProcess._handle.onexit (internal/child_process.js:251:5)</span><br><span class="line">                                                                                                                                                                                            From previous event:</span><br><span class="line">                                                                                                                                                                                                at processImmediate (timers.js:632:19)</span><br><span class="line">                                                                                                                                                                                            From previous event:</span><br><span class="line">                                                                                                                                                                                                at NsisTarget.buildInstaller (Z:\git\redcreation\alk-wxapi\alk-web\electron\node_modules\app-builder-lib\src\targets\nsis\NsisTarget.ts:202:29)</span><br></pre></td></tr></table></figure></p><p>安装electron依赖时被墙基本上躲不过去的，运气不好的时候就是一定躲不过去，这时候有三种方案</p><ul><li><p>设置electron的镜像为淘宝镜像,然后继续执行（<strong>推荐此方案</strong>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">set ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/</span><br><span class="line"></span><br><span class="line">set SELENIUM_CDNURL=http://npm.taobao.org/mirrorss/selenium</span><br><span class="line"></span><br><span class="line">set CHROMEDRIVER_CDNURL=https://npm.taobao.org/mirrors/chromedriver</span><br><span class="line"></span><br><span class="line">set SASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/</span><br></pre></td></tr></table></figure></li><li><p>使用迅雷或者浏览器手动下载download失败的文件<br>下载完后拖到<code>C:\Users\mahaiqiang\AppData\Local\electron-builder\Cache\</code>这个目录，解压好，重新dist，会优先使用缓存中的文件。注意版本一致。<br>扔上去可能是这样：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-6618bdf3878fb1d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p>在出错的命令上手动指定镜像<br>执行类似下面的命令，在真正的命令前加参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/ yarn install</span><br></pre></td></tr></table></figure></li></ul><p>推荐方案一。</p><h2 id="第三步：配置更新—-这一步没有成功就换方案了，不值得看"><a href="#第三步：配置更新—-这一步没有成功就换方案了，不值得看" class="headerlink" title="第三步：配置更新—-这一步没有成功就换方案了，不值得看"></a>第三步：配置更新—-这一步没有成功就换方案了，不值得看</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ npm install electron-updater --save</span><br><span class="line">npm WARN rm not removing /Users/mahaiqiang/git/redcreation/alk-wxapi/alk-web/electron/node_modules/.bin/semver as it wasn&apos;t installed by /Users/mahaiqiang/git/redcreation/alk-wxapi/alk-web/electron/node_modules/semver</span><br><span class="line"></span><br><span class="line">&gt; ejs@2.7.4 postinstall /Users/mahaiqiang/git/redcreation/alk-wxapi/alk-web/electron/node_modules/ejs</span><br><span class="line">&gt; node ./postinstall.js</span><br><span class="line"></span><br><span class="line">Thank you for installing EJS: built with the Jake JavaScript build tool (https://jakejs.com/)</span><br><span class="line"></span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN eallergy@1.0.0 No repository field.</span><br><span class="line">npm WARN eallergy@1.0.0 No license field.</span><br><span class="line"></span><br><span class="line">+ electron-updater@4.2.0</span><br><span class="line">added 20 packages from 19 contributors, removed 10 packages, updated 289 packages and audited 909 packages in 304.234s</span><br><span class="line">found 0 vulnerabilities</span><br></pre></td></tr></table></figure><p>为了配合打包 package.json 需要给 build 新增配置项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&quot;build&quot;: &#123;</span><br><span class="line">    &quot;publish&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;provider&quot;: &quot;generic&quot;,</span><br><span class="line">          &quot;url&quot;: &quot;http://127.0.0.1:5500/&quot; #这里是我本地开的服务器的地址</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h2><p> <a href="https://www.cnblogs.com/buzhiqianduan/p/7620099.html" target="_blank" rel="noopener">electron入门心得</a><br><a href="https://lzw.me/a/build-electron-desktop-app-installer.html" target="_blank" rel="noopener">使用 electron-builder 与 electron-packager 的 JSAPI 构建 electron 桌面应用安装程序</a></p>]]></content>
      
      
      <categories>
          
          <category> electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojurescript </tag>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>emacs里用ag全局检索是排除某些目录</title>
      <link href="/2019/12/22/emacs%E9%87%8C%E7%94%A8ag%E5%85%A8%E5%B1%80%E6%A3%80%E7%B4%A2%E6%98%AF%E6%8E%92%E9%99%A4%E6%9F%90%E4%BA%9B%E7%9B%AE%E5%BD%95/"/>
      <url>/2019/12/22/emacs%E9%87%8C%E7%94%A8ag%E5%85%A8%E5%B1%80%E6%A3%80%E7%B4%A2%E6%98%AF%E6%8E%92%E9%99%A4%E6%9F%90%E4%BA%9B%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>项目根目录创建<code>.projectile</code>文件，维护ag搜索要排除的目录，如同<code>.gitignore</code>一样。</p><p><a href="https://www.jianshu.com/p/a2461ab7cdd0" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>如果不做下面的配置，在emacs里执行全局搜索<c-c p="" s="">时会搜索所有目录，比如node_mudules，target等目录。</c-c></p><p>因为我们是shadow-cljs和lein功能，是从luminus哭创建的，所以有这个问题</p><p>需要在项目根目录下创建个文件<code>.projectile</code> ,</p><p>内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-/log</span><br><span class="line">-/tmp</span><br><span class="line">-/node_modules</span><br><span class="line">-/target%</span><br></pre></td></tr></table></figure></p><p>写法与<code>.gitignore</code>如出一辙。</p><p>这样配置后，再使用ag搜索，便不会再去这些目录下搜索。</p>]]></content>
      
      
      <categories>
          
          <category> emacs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo之高级美化篇</title>
      <link href="/2019/11/15/hexo%E4%B9%8B%E9%AB%98%E7%BA%A7%E7%BE%8E%E5%8C%96%E7%AF%87/"/>
      <url>/2019/11/15/hexo%E4%B9%8B%E9%AB%98%E7%BA%A7%E7%BE%8E%E5%8C%96%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>增加一些其他功能</p><p><a href="https://www.jianshu.com/p/728a9594bb6c" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>参考原文地址：<a href="https://blog.dfface.com/2019/60aa2e39.html" target="_blank" rel="noopener">hexo建站记</a></p><h2 id="主动推送到百度"><a href="#主动推送到百度" class="headerlink" title="主动推送到百度"></a>主动推送到百度</h2><p>参考<a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/" target="_blank" rel="noopener">Hexo插件之百度主动提交链接</a><br>安装hexo-baidu-url-submit插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure></p><p>该插件在github上：<a href="https://github.com/huiwang/hexo-baidu-url-submit" target="_blank" rel="noopener">hexo-baidu-url-submit</a></p><p>在根目录的配置文件中增加baidu_url_submit字段，更改deploy字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">baidu_url_submit:</span><br><span class="line">  count: 1000 ## 提交最新的一个链接</span><br><span class="line">  host: alili.tech ## 在百度站长平台中注册的域名</span><br><span class="line">  token: xxxxx ## 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span><br><span class="line">  path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里</span><br><span class="line">  xz_appid: &apos;xxxxxx&apos; ## 你的熊掌号 appid</span><br><span class="line">  xz_token: &apos;xxxxxx&apos; ## 你的熊掌号 token</span><br><span class="line">  xz_count: 10 ## 从所有的提交的数据当中选取最新的10条,该数量跟你的熊掌号而定</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">    repo: https://github.com/dfface/dfface.github.io.git</span><br><span class="line">    branch: master</span><br><span class="line">- type: baidu_url_submitter # 百度</span><br><span class="line">- type: baidu_xz_url_submitter # 百度熊掌号</span><br></pre></td></tr></table></figure></p><p>熊掌号的id和token，请看图：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-c4db864e04c84584.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="hexo-baidu.png"></p><p>然后在主题中开启:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span><br><span class="line">baidu_push: true</span><br></pre></td></tr></table></figure></p><h2 id="自动换背景"><a href="#自动换背景" class="headerlink" title="自动换背景"></a>自动换背景</h2><p>参考：<a href="https://theme-next.org/docs/advanced-settings" target="_blank" rel="noopener">injects</a><br>首先写入：source/_data/auto-bg.styl:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">// 背景更换设置，原来：background:url(https://source.unsplash.com/random/1600x900);</span><br><span class="line">body &#123;</span><br><span class="line">    background:url(&quot;https://img.xjh.me/random_img.php?type=bg&amp;ctype=nature&amp;return=302&quot;);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    -webkit-background-size:100%;</span><br><span class="line">    background-size:cover;</span><br><span class="line">    -webkit-background-size: cover !important; </span><br><span class="line">    -moz-background-size: cover !important; </span><br><span class="line">    -o-background-size: cover; </span><br><span class="line">    background-attachment:fixed, scroll;</span><br><span class="line">    padding-top: 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.main-inner &#123; </span><br><span class="line">    margin-top: 2rem;</span><br><span class="line">    padding: 2rem;</span><br><span class="line">    background: #fff;</span><br><span class="line">opacity: 0.7;</span><br><span class="line">    min-height: 500px;</span><br><span class="line">    transition: opacity 1s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header,footer &#123;</span><br><span class="line">    opacity: 0.7;</span><br><span class="line">    transition: opacity 1s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.main-inner:hover &#123;</span><br><span class="line">    opacity:1.0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header:hover &#123;</span><br><span class="line">    opacity:1.0;</span><br><span class="line">&#125;</span><br><span class="line">footer:hover &#123;</span><br><span class="line">    opacity:1.0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">  -moz-user-select:none; /* Firefox私有属性 */</span><br><span class="line">  -webkit-user-select:none; /* WebKit内核私有属性 */</span><br><span class="line">  -ms-user-select:none; /* IE私有属性(IE10及以后) */</span><br><span class="line">  -khtml-user-select:none; /* KHTML内核私有属性 */</span><br><span class="line">  -o-user-select:none; /* Opera私有属性 */</span><br><span class="line">  user-select:none; /* CSS3属性 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在_config.yml中注释：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">  #head: source/_data/head.swig</span><br><span class="line">  #header: source/_data/header.swig</span><br><span class="line">  #sidebar: source/_data/sidebar.swig</span><br><span class="line">  #postMeta: source/_data/post-meta.swig</span><br><span class="line">  #postBodyEnd: source/_data/post-body-end.swig</span><br><span class="line">  #footer: source/_data/footer.swig</span><br><span class="line">  #bodyEnd: source/_data/body-end.swig</span><br><span class="line">  #variable: source/_data/variables.styl</span><br><span class="line">  #mixin: source/_data/mixins.styl</span><br><span class="line">  style: source/_data/auto-bg.styl</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转--Gource:让git开出花来</title>
      <link href="/2019/11/13/Gource/"/>
      <url>/2019/11/13/Gource/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/acaudwell/Gource" target="_blank" rel="noopener">gource</a> 是一个开源项目, 处理各种代码管理工具(git,svn,hg,bzr,cvs2cl)的历史, 用动画展示代码结构和作者的状态。</p><p><a href="https://www.jianshu.com/p/6d120dbd45e4" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="gource介绍"><a href="#gource介绍" class="headerlink" title="gource介绍"></a>gource介绍</h2><p>git的历史是一部电影, gource的能让它活起来, ffmpege可以把这段视频保存下来。</p><p><img src="/2019/11/13/Gource/gource.jpg" alt="gource"></p><p><a href="https://github.com/acaudwell/Gource" target="_blank" rel="noopener">gource</a> 是一个开源项目, 处理各种代码管理工具(git,svn,hg,bzr,cvs2cl)的历史, 用动画展示代码结构和作者的状态。</p><p>下面这段gif展示了过敏平台项目开始的时候从4月25到4月30之间Marvin同学忙碌于代码库各处的情形。中间的那个小红人是Marvin😂</p><p><img src="/2019/11/13/Gource/movie.gif" alt="gource"></p><p><strong>很帅吧！</strong></p><p><code>gource --title &quot;ALK-project&quot; --date-format &quot;%y-%m-%d:%R&quot;  alk-wxapi</code> 安装好工具以后，你可以执行下面这个命令来看到一样的结果。</p><h2 id="gource使用"><a href="#gource使用" class="headerlink" title="gource使用"></a>gource使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装gource</span></span><br><span class="line">brew install gource</span><br><span class="line"><span class="comment"># 安装ffmpeg</span></span><br><span class="line">brew install ffmpeg</span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">gource project.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成mp4电影</span></span><br><span class="line">gource --title <span class="string">"ALK project"</span> --date-format <span class="string">"%D"</span> -1280x720 alk-wxapi -o - | ffmpeg -y -r 60 -f image2pipe -vcodec ppm -i - -vcodec libx264 -preset ultrafast -pix_fmt yuv420p -crf 1 -threads 0 -bf 0 gource.mp4</span><br></pre></td></tr></table></figure><p>自己试试吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转--mac上shell终端编辑命令行快捷键</title>
      <link href="/2019/11/11/%E8%BD%AC--%E4%BB%8EEclipse%E8%BD%AC%E7%A7%BB%E5%88%B0IntelliJ%20IDEA%E4%B8%80%E7%82%B9%E5%BF%83%E5%BE%97%20copy/"/>
      <url>/2019/11/11/%E8%BD%AC--%E4%BB%8EEclipse%E8%BD%AC%E7%A7%BB%E5%88%B0IntelliJ%20IDEA%E4%B8%80%E7%82%B9%E5%BF%83%E5%BE%97%20copy/</url>
      
        <content type="html"><![CDATA[<p>macOS 上shell终端编辑命令行快捷键</p><p><a href="https://www.jianshu.com/p/9b288d8bf849" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p><a href="https://www.cnblogs.com/cina33blogs/p/8608473.html" target="_blank" rel="noopener">mac shell终端编辑命令行快捷键——行首，行尾</a></p><p>Ctrl + d        删除一个字符，相当于通常的Delete键（命令行若无所有字符，则相当于exit；处理多行标准输入时也表示eof）</p><p>Ctrl + h        退格删除一个字符，相当于通常的Backspace键</p><p>Ctrl + u        删除光标之前到行首的字符<br>Ctrl + k        删除光标之前到行尾的字符</p><p>Ctrl + c        取消当前行输入的命令，相当于Ctrl + Break</p><p>Ctrl + a        光标移动到行首（Ahead of line），相当于通常的Home键<br>Ctrl + e        光标移动到行尾（End of line）<br>Ctrl + f        光标向前(Forward)移动一个字符位置<br>Ctrl + b        光标往回(Backward)移动一个字符位置</p><p>Ctrl + l        清屏，相当于执行clear命令<br>Ctrl + p        调出命令历史中的前一条（Previous）命令，相当于通常的上箭头<br>Ctrl + n        调出命令历史中的下一条（Next）命令，相当于通常的上箭头<br>Ctrl + r        显示：号提示，根据用户输入查找相关历史命令（reverse-i-search）<br>Ctrl + w        删除从光标位置前到当前所处单词（Word）的开头<br>Ctrl + y        粘贴最后一次被删除的单词<br>其他Command-Line技巧提示<br>•输入命令open .可以用Finder打开当前的位置。</p><p>•在Terminal的偏好里面可以设定它的外观和风格。</p><p>•中止一个错误的或者发疯的命令，可以使用组合键control + C。</p><p>•你可以在执行前编辑命令，只需要使用箭头和键盘上的其他字母。</p><p>•没有输入任何命令时，你可以用▲和▼来浏览历史命令。同样可以编辑和再次执行。</p><p>•你也可以使用history命令查看历史记录。</p><p>Command + K    清屏</p><p>Command + T     新建标签</p><p>Command +W     关闭当前标签页</p><p>Command + S     保存终端输出</p><p>Command + D     垂直分隔当前标签页</p><p>Command + Shift + D       水平分隔当前标签页</p><p>Command + shift +  {或}   向左/向右切换标签</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojure&amp;clojurescript前后端实现websocket协议通信</title>
      <link href="/2019/11/03/clojure&amp;clojurescript%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0websocket%E5%8D%8F%E8%AE%AE%E9%80%9A%E4%BF%A1/"/>
      <url>/2019/11/03/clojure&amp;clojurescript%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%9E%E7%8E%B0websocket%E5%8D%8F%E8%AE%AE%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<p>后台的luminus模板的clojure项目和前端reagent clojurescript项目，各自搭建websocket通信</p><p><a href="https://www.jianshu.com/p/c229a6368625" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p>服务端配置websocket相对来说挺简单，因为我们项目当初new的时候没有加websocket，现在是参考<a href="http://www.luminusweb.net/docs/websockets.html" target="_blank" rel="noopener">luminusweb websocket</a>往里增加关键代码</p><ul><li><ol><li><strong>创建ws-route</strong><br>创建如下route，并跟普通http api route一样加入handler序列中。<figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> alk-wxapi.routes.websockets</span><br><span class="line">  (<span class="symbol">:require</span></span><br><span class="line">   [alk-wxapi.routes.service.ws-service <span class="symbol">:refer</span> [ws-handler countdown]]))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> websocket-routes []</span><br><span class="line">  [<span class="string">"/ws"</span></span><br><span class="line">   &#123;<span class="symbol">:swagger</span> &#123;<span class="symbol">:tags</span> [<span class="string">"websocket"</span>]&#125;&#125;</span><br><span class="line"></span><br><span class="line">   [<span class="string">""</span></span><br><span class="line">    &#123;<span class="symbol">:get</span> &#123;<span class="symbol">:summary</span>    <span class="string">"websocket 入口"</span></span><br><span class="line">           <span class="symbol">:parameters</span> &#123;&#125;</span><br><span class="line">           <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [request]</span><br><span class="line">                         (<span class="name">ws-handler</span> request))&#125;&#125;]</span><br><span class="line">   ])</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="2"><li><strong>创建ws-service</strong><br>即上面require的ws-service，内容如下：<figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> alk-wxapi.routes.service.ws-service</span><br><span class="line">  (<span class="symbol">:require</span></span><br><span class="line">   [clojure.tools.logging <span class="symbol">:as</span> log]</span><br><span class="line">   [immutant.web.async <span class="symbol">:as</span> async]</span><br><span class="line">   [immutant.web.sse <span class="symbol">:as</span> sse]))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defonce</span></span> channels (<span class="name"><span class="builtin-name">atom</span></span> #&#123;&#125;))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> broadcast-msg</span><br><span class="line">  <span class="string">"广播消息"</span></span><br><span class="line">  [data]</span><br><span class="line">  (<span class="name">log/info</span> <span class="string">"广播消息："</span> data)</span><br><span class="line">  (<span class="name"><span class="builtin-name">doseq</span></span> [channel @channels]</span><br><span class="line">    (<span class="name">async/send!</span> channel (<span class="name"><span class="builtin-name">str</span></span> data))))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> notify-clients! [channel data]</span><br><span class="line">  (<span class="name">log/info</span> (<span class="name">java.util.Date.</span>) <span class="string">"收到客户端发送的message："</span> data)</span><br><span class="line">  (<span class="name">async/send!</span> channel (<span class="name"><span class="builtin-name">str</span></span> &#123;<span class="symbol">:message</span> data</span><br><span class="line">                             <span class="symbol">:type</span> <span class="string">"reply"</span>&#125;)))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> connect! [channel]</span><br><span class="line">  (<span class="name">log/info</span> <span class="string">"channel open"</span>)</span><br><span class="line">  (<span class="name"><span class="builtin-name">swap!</span></span> channels conj channel))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> disconnect! [channel &#123;<span class="symbol">:keys</span> [code reason]&#125;]</span><br><span class="line">  (<span class="name">log/info</span> <span class="string">"close code:"</span> code <span class="string">"reason:"</span> reason)</span><br><span class="line">  (<span class="name"><span class="builtin-name">swap!</span></span> channels #(<span class="name"><span class="builtin-name">remove</span></span> #&#123;channel&#125; %)))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">def</span></span> websocket-callbacks</span><br><span class="line">  <span class="string">"WebSocket callback functions"</span></span><br><span class="line">  &#123;<span class="symbol">:on-open</span> connect!</span><br><span class="line">   <span class="symbol">:on-close</span> disconnect!</span><br><span class="line">   <span class="symbol">:on-message</span> notify-clients!&#125;)</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> ws-handler [request]</span><br><span class="line">  (<span class="name">async/as-channel</span> request websocket-callbacks))</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="3"><li><strong>测试连接</strong><br>这样再次启动repl，在启动http 接口的同时就在同一端口启动了ws协议的websocket服务，可以用<a href="https://github.com/websockets/wscat" target="_blank" rel="noopener">wscat命令行</a>测试工具或者在<a href="http://oktools.net/websocket" target="_blank" rel="noopener">在线测试</a>工具进行连接测试。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wscat -c ws://localhost:3000/api/ws</span><br><span class="line">Connected (press CTRL+C to quit)</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></li></ul><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>在任意一个页面找个契机开始创建连接，参考<a href="https://github.com/luminus-framework/examples/tree/master/multi-client-ws-immutant" target="_blank" rel="noopener">multi-client-ws-immutant</a>创建时指定消息处理回调函数。<br>代码如下：</p><ul><li><ol><li><strong>根目录或者任意目录创建ws连接工具类</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(defn- receive-transit-msg!</span><br><span class="line">  [update-fn]</span><br><span class="line">  (fn [msg]</span><br><span class="line">    (js/clearTimeout clear-time)</span><br><span class="line">    (update-fn (cljs.reader/read-string (.-data msg)))))</span><br><span class="line"></span><br><span class="line">(defn- send-transit-msg!</span><br><span class="line">  [msg]</span><br><span class="line">  (if @ws-chan</span><br><span class="line">    (.send @ws-chan msg)</span><br><span class="line">    (throw (js/Error. &quot;Websocket is not available!&quot;))))</span><br><span class="line">(defn make-websocket! [url receive-handler]</span><br><span class="line"> (println &quot;attempting to connect websocket&quot;)</span><br><span class="line"> (if-let [chan (js/WebSocket. url)]</span><br><span class="line">   (do</span><br><span class="line">     (set! (.-onmessage chan) (receive-transit-msg! receive-handler))</span><br><span class="line">     (reset! ws-chan chan)</span><br><span class="line">     (println &quot;Websocket connection established with: &quot; url))</span><br><span class="line">   (throw (js/Error. &quot;Websocket connection failed!&quot;))))</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="2"><li><strong>在某个页面触发websocket连接</strong><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">require</span> ' [alk-doc.ws <span class="symbol">:as</span> ws <span class="symbol">:refer</span> [webSocketUrl click-one]])</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> handler-ws-msg</span><br><span class="line"> “可以根据消息内容或者自定义的类型，进行相应的业务处理”</span><br><span class="line"> [msg]</span><br><span class="line"> (<span class="name">js/console.info</span> <span class="string">"收到广播消息:"</span> msg))</span><br><span class="line"></span><br><span class="line">(<span class="name">ws/make-websocket!</span> webSocketUrl handler-ws-msg)</span><br></pre></td></tr></table></figure></li></ol></li></ul><p>这样就建立了前后端ws通信。</p><h2 id="生产环境上的特殊处理"><a href="#生产环境上的特殊处理" class="headerlink" title="生产环境上的特殊处理"></a>生产环境上的特殊处理</h2><p>但是在生产环境(https+nginx)上要做点特殊处理，这里的处理，服务端和客户端都有。</p><ul><li><ol><li><strong>生产环境多是https的，这就要求页面里面的websocket必须要是<code>wss</code>的，而不能是<code>ws</code>的</strong></li></ol></li></ul><p>因此websocket的连接变成了<code>wss://www.abc.com/api/ws/</code></p><ul><li><ol start="2"><li><strong>服务端nginx配置支持websocket</strong></li></ol></li></ul><p>生产环境服务端的接口使用nginx做了反向代理，不出意外的话，上面的连接即使改成wss也连接不成功，需要nginx的配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    map $http_upgrade $connection_upgrade &#123;</span><br><span class="line">        default upgrade;</span><br><span class="line">        &apos;&apos;      close;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        location /chat/ &#123;</span><br><span class="line">            proxy_pass http://backend;</span><br><span class="line">            proxy_http_version 1.1;</span><br><span class="line">            proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">            proxy_set_header Connection $connection_upgrade;</span><br><span class="line">            proxy_read_timeout 600s; </span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><ul><li><ol start="3"><li><strong>最重要的，客户端加入心跳检测，端口后自动重连</strong></li></ol></li></ul><p>我们的程序是一个jar直接java启动的，这样在连接上后不会自己断开的，但是上面说了，生产环境使用nginx代理的，默认情况下，利用nginx代理websocket的时候，发现客户端和服务器握手成功后，如果在60s时间内没有数据交互，连接就会自动断开。因此上面配置了<code>proxy_read_timeout 600s</code>，也就是10分钟没有通信再断开。<br>这个时间可以长，但我没试过是不是可以无限长。<br>所以最好是在客户端加上心跳检测，断开后有能力自己重连，及时服务器不设置10分钟，60秒钟断开也可以自己重连。<br>终极方案是心跳检测+延长read-timeout时间，客户端的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">(require &apos;[reagent.core :as reagent :refer [atom]])</span><br><span class="line">(defonce ws-chan (atom nil))</span><br><span class="line">(def lockReconnect (atom false))</span><br><span class="line">(def clear-time (atom nil))</span><br><span class="line">(def click-one (atom true))</span><br><span class="line">(def webSocketUrl &quot;ws://182.61.51.177:3055/api/ws&quot;)</span><br><span class="line"></span><br><span class="line">(defn receive-transit-msg!</span><br><span class="line">  [update-fn]</span><br><span class="line">  (fn [msg]</span><br><span class="line">    (js/clearTimeout clear-time)</span><br><span class="line">    (update-fn (cljs.reader/read-string (.-data msg)))))</span><br><span class="line"></span><br><span class="line">(defn send-transit-msg!</span><br><span class="line">  [msg]</span><br><span class="line">  (if @ws-chan</span><br><span class="line">    (.send @ws-chan msg)</span><br><span class="line">    (throw (js/Error. &quot;Websocket is not available!&quot;))))</span><br><span class="line"></span><br><span class="line">(set! (.-onbeforeunload js/window) (fn []</span><br><span class="line">                                     (.close (js/WebSocket. webSocketUrl))))</span><br><span class="line"></span><br><span class="line">(defn initEventHandle [url chan receive-handler]</span><br><span class="line">  (do</span><br><span class="line">    (set! (.-onmessage chan) (receive-transit-msg! receive-handler))</span><br><span class="line">    (reset! ws-chan chan)</span><br><span class="line">    (js/console.log &quot;Websocket connection established with: &quot; url)</span><br><span class="line">    (set! (.-onopen chan) (fn []</span><br><span class="line">                            (js/console.log &quot;连接成功&quot;)</span><br><span class="line">                            (js/clearTimeout clear-time)))</span><br><span class="line">    (set! (.-onclose chan) (fn []</span><br><span class="line">                             (js/console.log &quot;连接断开&gt;&gt;&gt;&quot;)</span><br><span class="line">                             (reset! lockReconnect true)</span><br><span class="line">                             (if (true? @lockReconnect)</span><br><span class="line">                               (do                                 </span><br><span class="line">                                 ;;没连接上会一直重连，设置延迟避免请求过多</span><br><span class="line">                                 (reset! clear-time</span><br><span class="line">                                         (js/setTimeout (fn []</span><br><span class="line">                                                          (initEventHandle webSocketUrl</span><br><span class="line">                                                                           (js/WebSocket. url)</span><br><span class="line">                                                                           receive-handler)</span><br><span class="line">                                                          (reset! lockReconnect false)) 2000))</span><br><span class="line">                                 (reset! lockReconnect false))</span><br><span class="line">                               (do                                 </span><br><span class="line">                                 (js/clearTimeout clear-time)))))</span><br><span class="line">    (set! (.-onerror chan) (fn []</span><br><span class="line">                             (js/console.Error &quot;连接错误&quot;)</span><br><span class="line">                             (reset! lockReconnect true)</span><br><span class="line">                             (if (true? @lockReconnect)</span><br><span class="line">                               (do                                 </span><br><span class="line">                                 ;;没连接上会一直重连，设置延迟避免请求过多</span><br><span class="line">                                 (reset! clear-time</span><br><span class="line">                                         (js/setTimeout (fn []</span><br><span class="line">                                                          (initEventHandle webSocketUrl</span><br><span class="line">                                                                           (js/WebSocket. url)</span><br><span class="line">                                                                           receive-handler)</span><br><span class="line">                                                          (reset! lockReconnect false)) 2000))</span><br><span class="line">                                 (reset! lockReconnect false))</span><br><span class="line">                               (do                                 </span><br><span class="line">                                 (js/clearTimeout clear-time)))))))</span><br><span class="line"></span><br><span class="line">(defn make-websocket! [url receive-handler]</span><br><span class="line">  (js/console.log &quot;attempting to connect websocket&quot;)</span><br><span class="line">  (if-let [chan (js/WebSocket. url)]</span><br><span class="line">    (initEventHandle url chan receive-handler)</span><br><span class="line">    (throw (js/Error. &quot;Websocket connection failed!&quot;))))</span><br></pre></td></tr></table></figure></p><p>参考<a href="https://github.com/luminus-framework/examples/tree/master/multi-client-ws-immutant" target="_blank" rel="noopener">官方demo</a>的实现后，只是成功进行了连接，并不能保证真正的长连，因此上面代码里对当前channel的<code>onclose</code>和<code>onerror</code>事件的处理是我们前端的姑娘参考<a href="https://www.jianshu.com/p/1141dcf6de3e" target="_blank" rel="noopener">WebSocket加入心跳包防止自动断开连接</a>js版本用cljs做的实现，给她点个赞👍。</p><p>到这里，clojure和clojurescript里搭建websocket通信就算是可用了。</p><h2 id="client-testing"><a href="#client-testing" class="headerlink" title="client testing"></a>client testing</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">(require &apos;[reagent.core :as reagent :refer [atom]])</span><br><span class="line"></span><br><span class="line">(defonce messages (reagent/atom []))</span><br><span class="line"></span><br><span class="line">(defn message-list []</span><br><span class="line">  [:ul</span><br><span class="line">   (for [[i message] (map-indexed vector @messages)]</span><br><span class="line">     ^&#123;:key i&#125;</span><br><span class="line">     [:li message])])</span><br><span class="line"></span><br><span class="line">(defn message-input []</span><br><span class="line">  (reagent/with-let [value (reagent/atom nil)]</span><br><span class="line">    [:input</span><br><span class="line">     &#123;:type        :text</span><br><span class="line">      :placeholder &quot;输入&amp;回车发送&quot;</span><br><span class="line">      :value       @value</span><br><span class="line">      :on-change   #(reset! value (-&gt; % .-target .-value))</span><br><span class="line">      :on-key-down #(when (= (.-keyCode %) 13)</span><br><span class="line">                      (send-transit-msg!</span><br><span class="line">                       &#123;:message @value&#125;)</span><br><span class="line">                      (reset! value nil))&#125;]))</span><br><span class="line"></span><br><span class="line">(defn update-messages! [&#123;:keys [message]&#125;]</span><br><span class="line">  (js/console.info &quot;收到服务端返回的消息&quot;)</span><br><span class="line">  (swap! messages #(vec (take 10 (conj % message)))))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(make-websocket! webSocketUrl update-messages!)</span><br><span class="line">(defn home-page []</span><br><span class="line"> [:div.container</span><br><span class="line">  [:div.row</span><br><span class="line">   [:div.col-md-12</span><br><span class="line">    [:h2 &quot;Welcome to chat&quot;]</span><br><span class="line">    [:h4 &quot;服务端将你发送的内容加了个key做了回答&quot;]]]</span><br><span class="line">  [:div.row</span><br><span class="line">   [:div.col-sm-6</span><br><span class="line">    [message-list]]]</span><br><span class="line">  [:div.row</span><br><span class="line">   [:div.col-sm-6</span><br><span class="line">    [message-input]]]])</span><br><span class="line"></span><br><span class="line">[home-page]</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.luminusweb.net/docs/websockets.html#immutant" target="_blank" rel="noopener">immutant websockets sample</a></p><p><a href="http://nginx.org/en/docs/http/websocket.html" target="_blank" rel="noopener">WebSocket proxying</a></p><p><a href="https://www.jianshu.com/p/1141dcf6de3e" target="_blank" rel="noopener">WebSocket加入心跳包防止自动断开连接</a></p>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
            <tag> cljs </tag>
            
            <tag> websocket </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>程序猿的MacOS开发环境之一</title>
      <link href="/2019/11/02/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84MacOS%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E4%B9%8B%E4%B8%80/"/>
      <url>/2019/11/02/%E7%A8%8B%E5%BA%8F%E7%8C%BF%E7%9A%84MacOS%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E4%B9%8B%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p>程序猿的macOS上应该有的软件和小插件</p><p><a href="https://www.jianshu.com/p/2f8b0f0aca93" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p> 每个江湖上的高手都有自己趁手的兵器，你也应该有你自己的那把小李飞刀。<br>小李飞刀这个兵器还真不是突然想到的。</p><p>要是问我什么不是方天画戟、青龙偃月刀、丈八蛇矛云云，或者为啥不是独孤求败的利剑、紫薇软剑、玄铁重剑之类的。我就呵呵了，你见过哪个道法高深的神仙，随身手里扛着这么大的兵器，关二哥拉屎时应该不会扛着青龙偃月刀吧。</p><p>小李飞刀则不然，随身携带，杀伤力不弱于其他，最重要的其实是小李飞刀是在浪子李寻欢手里，李寻欢此人是一个倾倒天下多情红颜的潇洒浪子，一个重情重义的悲情英雄，一生都被身心的痛苦折磨，却又不轻易显示喜怒哀乐，复杂的内心情感全靠眼神表现。所以计算式小李飞刀只是在百晓生兵器谱上排第三，我还是更喜欢，也许我是不喜欢天机老人的懦弱，和上官金虹的恶霸行为。</p><p>有人说，自古没有最厉害的兵器，只有最厉害的人。也是，孤独前辈的第四把剑就是木剑，“四十岁后，草木竹石均可为剑”，何其雄壮，人家有傲视群雄的本事的啊，这境界太高了，没几个能达到的。</p><p>我不反对上面的观点，但是顺手的兵器总也是能为平庸的人增添战斗力，要不然那么多人去抢倚天剑、屠龙刀。</p><p>废话太多了哈。。。😁</p><p>作为一坨程序猿，我想表达的意思是打造自己最趁手，最适合自己工作的工具—-要不换个标题：MacOS系统上常用的软件和插件。</p><p>关键词：程序猿、MacOS</p><p>所以我要说微信，QQ之类的估计您的揍我了。</p><p>先推荐两个资源下载地址：</p><p><strong><a href="https://xclient.info/?t=b43ff20a95f7a8f8c2453e68b2650326403e6b99" target="_blank" rel="noopener">xclient.info</a></strong><br><strong><a href="https://www.waitsun.com/" target="_blank" rel="noopener">爱情守望者</a></strong></p><p><strong>必备应用：</strong></p><ul><li>git客户端：gitKarken，sourceTree</li><li>接口测试工具：postman</li><li>笔记工具：为知笔记，印象笔记</li><li>IDE：Intellij Idea，VS code，Emcas</li><li>markdown写作工具：Typora</li><li>翻墙客户端：Shadowsocks</li><li>手机投屏软件：Vysor，有谷歌浏览器插件</li><li>硬盘U盘读写软件：Tuxera Disk Manager</li></ul><p>####一些在线工具和网址:</p><blockquote><p>发起在线问卷调查：<a href="https://www.wenjuan.com/" target="_blank" rel="noopener">https://www.wenjuan.com/</a><br>在线定时任务执行写法工具：<a href="http://cron.qqe2.com/" target="_blank" rel="noopener">http://cron.qqe2.com/</a><br>国际推荐使用：<a href="https://cdnjs.com/" target="_blank" rel="noopener">https://cdnjs.com/</a><br>下载系统及工具：<a href="http://msdn.itellyou.cn" target="_blank" rel="noopener">http://msdn.itellyou.cn</a><br>优雅高效的免费在线APP原型工具  <a href="http://www.xiaopiu.com/" target="_blank" rel="noopener">http://www.xiaopiu.com/</a><br>showdoc文档工具：<a href="https://www.showdoc.cc/web/#/" target="_blank" rel="noopener">https://www.showdoc.cc/web/#/</a><br>各种java工具：<a href="http://www.hutool.cn/" target="_blank" rel="noopener">http://www.hutool.cn/</a><br>在线无损压缩图片：<a href="https://squoosh.app/" target="_blank" rel="noopener">https://squoosh.app/</a><br>生成短链接：<a href="http://www.surl.sinaapp.com/" target="_blank" rel="noopener">http://www.surl.sinaapp.com/</a><br>在线工具集合：<a href="http://oktools.net" target="_blank" rel="noopener">http://oktools.net</a><br>在线工具集合2 ：<a href="http://www.atoolbox.net/" target="_blank" rel="noopener">http://www.atoolbox.net</a><br>mockjs: <a href="http://mockjs.com/" target="_blank" rel="noopener">http://mockjs.com/</a><br>lisp里json转edn/map：<a href="http://pschwarz.bicycle.io/json-to-edn/" target="_blank" rel="noopener">http://pschwarz.bicycle.io/json-to-edn/</a></p></blockquote><h2 id="1-shell客户端"><a href="#1-shell客户端" class="headerlink" title="1. shell客户端"></a>1. shell客户端</h2><p>iterm2截止目前最喜欢的shell客户端，没有之一，之所以加个截止目前，是因为今年用emcas，都说这里面的shell也很赞。</p><p>做后端开发，经常要快速进入某一台远端服务器，然后看个log，改个配置啥的，这时候iterm+sshpass就能让你事半功倍了。<br>关于怎么配，此处不再细说。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http://sourceforge.net/projects/sshpass/files/sshpass/1.05/sshpass-1.05.tar.gz  </span><br><span class="line">tar xvzf sshpass-1.05.tar.gz  </span><br><span class="line">cd sshpass-1.05</span><br><span class="line">./configure  </span><br><span class="line">make  </span><br><span class="line">make install</span><br></pre></td></tr></table></figure></p><p>[站外图片上传中…(image-aefec1-1572691340926)]</p><p>推荐两个网友的杰作，一个安装，一个使用。<br><a href="https://www.iteye.com/blog/tinyhema-2093795" target="_blank" rel="noopener">mac下使用sshpass实现ssh记住密码</a><br><a href="https://www.jianshu.com/p/ae7bf4086b0d" target="_blank" rel="noopener">Mac下，使用sshpass让iTerm2支持ssh登录信息保存</a></p><p>安装sshpass有问题的用户，可以试试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb</span><br><span class="line">Updating Homebrew...</span><br><span class="line">Warning: Calling Non-checksummed download of sshpass formula file from an arbitrary URL is deprecated! Use &apos;brew extract&apos; or &apos;brew create&apos; and &apos;brew tap-new&apos; to create a formula file in a tap on GitHub instead.</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; Downloading http://sourceforge.net/projects/sshpass/files/sshpass/1.06/sshpass-1.06.tar.gz</span><br><span class="line">==&gt; Downloading from https://netcologne.dl.sourceforge.net/project/sshpass/sshpass/1.06/sshpass-1.06.tar.gz</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">==&gt; ./configure --prefix=/usr/local/Cellar/sshpass/1.06</span><br><span class="line">==&gt; make install</span><br><span class="line">🍺  /usr/local/Cellar/sshpass/1.06: 9 files, 45.8KB, built in 9 seconds</span><br></pre></td></tr></table></figure></p><p>安装成功。</p><p>iterm里另一个不得不用的是<code>Zsh</code>和<code>Oh My Zsh</code>家庭套餐，点到为止，网上一搜一大把，选个自己喜欢的theme用就行了。</p><p>iterm2的profiles里执行一个登录的命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin/sshpass -f /Users/mahaiqiang/Documents/sshpass/&lt;file_name&gt; ssh -p&lt;port&gt; marvin@ip</span><br></pre></td></tr></table></figure></p><p>file_name 只存储这个ip对应的用户登录密码，而且文件没有后缀。</p><p>如果没有安装成功sshpass，也可以用iterm的命令行模式，执行一个shell脚本，脚本的内容可能荣幸<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/expect -f</span></span><br><span class="line">set user &lt;user-name&gt;</span><br><span class="line">set host &lt;ip&gt;</span><br><span class="line">set password &lt;password&gt;</span><br><span class="line">set port &lt;port&gt;</span><br><span class="line">set timeout -1</span><br><span class="line"></span><br><span class="line">spawn ssh -p $port $user@$host</span><br><span class="line">expect "*assword:*"</span><br><span class="line">send "$password\r"</span><br><span class="line">interact</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure></p><p>High起来吧</p><h2 id="2-Navicat-Permium"><a href="#2-Navicat-Permium" class="headerlink" title="2. Navicat Permium"></a>2. Navicat Permium</h2><p><a href="https://navicat.com.cn/products/navicat-premium" target="_blank" rel="noopener">Navicat Premium </a>是一套数据库开发工具，让你从单一应用程序中同时连接 MySQL、MariaDB、MongoDB、SQL Server、Oracle、PostgreSQL 和 SQLite 数据库。它与 Amazon RDS、Amazon Aurora、Amazon Redshift、Microsoft Azure、Oracle Cloud、MongoDB Atlas、阿里云、腾讯云和华为云等云数据库兼容。你可以快速轻松地创建、管理和维护数据库。</p><p>数据库工具在Mac上我比较钟情这款，导入导出都很方便，其他不推荐。不要说不是免费版，我相信你一定有办法免费，而且你还能搞个汉化版。</p><p>在Windows我用的最多<a href="https://www.heidisql.com/" target="_blank" rel="noopener">HeidiSQL</a>，轻量级，非常稳定的数据库客户端。是可惜没有mac版。</p><h2 id="3-transmit"><a href="#3-transmit" class="headerlink" title="3. transmit"></a>3. transmit</h2><p>相同功能的我还用过的filezilla和WinScp，但是从体验和视觉上来说，我更喜欢transmit，简洁直观</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f914d812b03195cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="transmit"></p><h2 id="4-tinyCal"><a href="#4-tinyCal" class="headerlink" title="4. tinyCal"></a>4. tinyCal</h2><p>这个小日历可了不得，试图比mac自带的日历小，但是又比mac状态栏上那个还不如没有日历表好。截图如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-dc432a42db92884d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tinyCal"></p><p>还有农历，看着不错吧，在设置个开机自启，系统自带的可以关闭了。</p><h2 id="5-Alfred"><a href="#5-Alfred" class="headerlink" title="5. Alfred"></a>5. Alfred</h2><p>这个是在去年在海尔一起工作的小唐同学那里看来的，直接抄一下原创：<br>Alfred作为老牌效率神器，网上很多帖子都已经做过介绍，这里说一下Alfred的剪贴板。</p><p>[站外图片上传中…(image-2652a3-1572691340926)]<br>Alfred的剪贴板可以保存最近几天位于系统剪贴板的所有内容。因此如果当键入命令时，突然想起来这个命令我昨天好像复制过，那就可以直接调出来，贴进命令行即可。</p><p>这款神器可是<a href="https://github.com/hzlzh/Best-App" target="_blank" rel="noopener">Best-App</a>排行NO.1的，可见一斑。</p><p>使用教程：<a href="https://www.jianshu.com/p/e9f3352c785f" target="_blank" rel="noopener">5分钟上手Mac效率神器Alfred以及Alfred常用操作</a></p><h2 id="6-LICECap-捕捉屏幕生成GIF"><a href="#6-LICECap-捕捉屏幕生成GIF" class="headerlink" title="6. LICECap 捕捉屏幕生成GIF"></a>6. LICECap 捕捉屏幕生成GIF</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install LICECap</span><br></pre></td></tr></table></figure><p>相对应的截图软件推荐<a href="https://zh.xnipapp.com/" target="_blank" rel="noopener">xnipapp</a>一款免费的截图软件，还支持滚动截图，离线操作。</p><h2 id="7-Recorder-it"><a href="#7-Recorder-it" class="headerlink" title="7. Recorder it"></a>7. Recorder it</h2><p>屏幕录制软件，可以在xclient.info上下载到。</p><h2 id="8-keycastr-显示快捷键"><a href="#8-keycastr-显示快捷键" class="headerlink" title="8. keycastr 显示快捷键"></a>8. keycastr 显示快捷键</h2><p>在你想做一个教程时，不管是gif了，还是录屏了，你或许在冥思苦想到底怎么解释我在键盘上按了啥，这回不用解释了，你按了啥有软件帮你显示出来了，简单明了。<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install keycastr</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-eef71ac73357c5fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="keycastr"></p><p>配合上生成gif搞个小教程简直不要太爽。</p><h2 id="9-ssh-tunnel"><a href="#9-ssh-tunnel" class="headerlink" title="9. ssh tunnel"></a>9. ssh tunnel</h2><p>再复制小唐同学推荐的一个神器ssh tunnel。</p><h4 id="场景："><a href="#场景：" class="headerlink" title="场景："></a>场景：</h4><p>我们需要搭建开发环境，使得本地的web server/api server 能够访问位于云服务器上局域网环境中的数据库，例如百度云提供的数据库服务。这些数据库服务器可以在百度云的机器上直接访问，而不能在公网环境下通过公网ip访问。这个时候可以用百度云的普通server建一个tunnel，从而实现数据访问。在xshell中也有类似功能，中文翻译做：隧道。</p><h4 id="界面展示："><a href="#界面展示：" class="headerlink" title="界面展示："></a>界面展示：</h4><p><img src="//upload-images.jianshu.io/upload_images/7862575-bc40d062a8637a22.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="image"></p><p>如图便是建立了三个tunnel，分别连向了两个关系型数据库服务器和一个redis服务器。<br>举例来说第一条隧道连接，使用时的访问方法，就是直接localhost:13306即可。<br>当然，直接用ssh命令也可解决，但麻烦不是。程序员就应该能偷懒的时候尽可能偷懒，美其名曰：解放和发展生产力~<br>命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -CfNg -L 16306:postgresql94.rd*****lwr2zr.rds.bj.baidubce.com:3306 root@180.***.***.189</span><br></pre></td></tr></table></figure><p>原作者：<a href="https://www.jianshu.com/p/e0b96caa3e7c" target="_blank" rel="noopener">tangxqa</a></p><h2 id="10-PicGo"><a href="#10-PicGo" class="headerlink" title="10. PicGo"></a>10. PicGo</h2><p><a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">图床</a>，上传图片后直接将复制复制到了粘贴板，非常方便，尤其要写markdown<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4b471f30ea33d34e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PicGo"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install PicGo</span><br></pre></td></tr></table></figure></p><p>如果常写markdown的话，绝对是个不错的选择，谁还每个github账号，合理使用资源就行了，图片拖进上传区，直接就能返回来个markdown的地址放到粘贴板里了。至于怎么利用github做图床自行google下。</p><h2 id="11-Charles抓包工具"><a href="#11-Charles抓包工具" class="headerlink" title="11. Charles抓包工具"></a>11. Charles抓包工具</h2><p><a href="http://www.charlesproxy.com/" target="_blank" rel="noopener">Charles</a>是一款抓包代理调试工具、类 Fiddler。<br>ios系统手机上有一款抓包神器：stream<br>安卓手机上一般用：Packet Capture，或者抓包精灵</p><h2 id="12-内网穿透工具"><a href="#12-内网穿透工具" class="headerlink" title="12. 内网穿透工具"></a>12. 内网穿透工具</h2><p>这个东西不常用，但是如果不知道还有个这么个玩意儿那就有点low了。<br>我用过serveo和ngrok，ngrok相对稳定，但是使用便捷性赶不上什么都不用serveo一句命令的快。<br>我的两个总结：<br><a href="https://www.jianshu.com/p/57485240708c" target="_blank" rel="noopener">使用serveo一秒钟实现内网穿透</a><br><a href="https://www.jianshu.com/p/4f008e2b7622" target="_blank" rel="noopener">使用ngrok一分钟实现内网穿透</a></p><h2 id="13-为知笔记-印象笔记"><a href="#13-为知笔记-印象笔记" class="headerlink" title="13. 为知笔记|印象笔记"></a>13. 为知笔记|印象笔记</h2><p>有时候你会有两台电脑，或者需要用移动端看看曾经报错的一些有效资源，这时候如果没有个云笔记，有点说不过去了，而且这种笔记不管是保存自己的东西，还可以通过google浏览器插件快速收藏网页，将某<br>一篇博客剪切成自己的东西笔记。</p><p>[站外图片上传中…(image-7835d8-1572691340926)]</p><h2 id="14-Parallels虚拟机神器"><a href="#14-Parallels虚拟机神器" class="headerlink" title="14. Parallels虚拟机神器"></a>14. Parallels虚拟机神器</h2><p>带你飞~</p><h2 id="15-LogTail-日志监控查看工具"><a href="#15-LogTail-日志监控查看工具" class="headerlink" title="15. LogTail 日志监控查看工具"></a>15. LogTail 日志监控查看工具</h2><p>前面说到的iterm配合sshpass登录到服务器不是个啥问题了，但是最近用的不管是阿里云和百度云的ECS，在终端连接一会儿后就会自动断开，而且我也不知道咋搞，就算是tail 了，一会儿没有动就自己断开了，非常糟心。</p><p>今天终于找到了一款我众里寻他千百度的logtail，我简直爱死他了，查看云服务器日志居然还有这么个玩意儿，简直神器啊，来两张图看看：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-fd0b2997d586b446.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我收藏的标签"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-dcc72c2018c69385.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="滚动时自动开始/停止tail"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-562752335b3f544e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="标签功能"></p><p>有了它服务器上的日志就不需要搭建类似ELK或者EFK环境了。</p><h2 id="16-mpv：一个高可配的程序猿专用视频播放器"><a href="#16-mpv：一个高可配的程序猿专用视频播放器" class="headerlink" title="16. mpv：一个高可配的程序猿专用视频播放器"></a>16. <a href="https://mpv.io/" target="_blank" rel="noopener">mpv</a>：一个高可配的程序猿专用视频播放器</h2><p>安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install mpv</span><br></pre></td></tr></table></figure></p><p>这是一款一个跨平台、简洁、开源、免费、且性能和功能兼备万能视频播放器。MPV 是一个基于 MPlayer 和 mplayer2 的开源极简全能播放器。支持各种视频格式、音频解码、支持特效字幕（电影动漫的ass特效字幕都没啥问题），不仅支持本地播放，同样支持网络播放。重点是 MPV 具有多系统平台支持、命令行、自定义、GPU 解码、脚本支持等特点……</p><p><a href="https://www.iplaysoft.com/mpv.html" target="_blank" rel="noopener">看这篇介绍</a></p><h2 id="17-Moom"><a href="#17-Moom" class="headerlink" title="17 Moom"></a>17 Moom</h2><p>或许有许多人和小编一样，感觉Mac OS在使用时各种都很好用，但是就是对于窗口大小的调整需要用鼠标去拖动大小不满意。</p><p>  那么有没有一种更为快速的方法，可以让你迅速的最大化、最小化各种窗口，甚至和WIN10系统一样做到左右对半分配两个窗口呢？当然有！只需要在你的Mac上安装Moom这一款小软件即可实现。</p><p>Moom是苹果os平台上优秀的窗口管理工具，可以快速修改当前窗口的大小并放置在指定位置，默认情况下拥有五种尺寸可选，单击选项即可更改窗口大小，如最大化，移动到左边、右边等操作，还可以自定义窗口，让用户可以更好的查看mac上的内容。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5c6e5512751166b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="moom"></p><h2 id="18-PopClip"><a href="#18-PopClip" class="headerlink" title="18. PopClip"></a>18. PopClip</h2><p>一款在 Mac 上人尽皆知的小工具，它简单高效，具有强大的拓展功能，PopClip 最基本的功能即用鼠标选中一段文字就可以做复制粘贴的动作，省去了我们平时 Command+C or V 的麻烦。</p><p>除此之外，再无拓展支持的情况下，根据鼠标选中的内容，PopClip 还自身支持链接的跳转打开、自带词典的翻译、邮件地址跳转、搜索引擎搜索、单词纠正等功能，但这个工具真正强大之处在于它的拓展功能的使用哦。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-2ec485aea0213985.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h1 id="小插件"><a href="#小插件" class="headerlink" title="小插件"></a>小插件</h1><ol><li><p>Bartender<br>展开和收缩状态栏<br><img src="https://upload-images.jianshu.io/upload_images/4109786-aff686857922b5fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p>外接2K显示器无法开启hign dpi时的处理</p></li></ol><p>开启教程：<a href="https://bbs.feng.com/forum.php?mod=viewthread&amp;tid=11669269&amp;page=1" target="_blank" rel="noopener">https://bbs.feng.com/forum.php?mod=viewthread&amp;tid=11669269&amp;page=1</a><br>用到的三个软件：</p><p><img src="//upload-images.jianshu.io/upload_images/7862575-c8b02bf8e94054d1.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="image"></p><p>设置完成之后，在外接显示器也可以看到hign dpi的选项：</p><p><img src="//upload-images.jianshu.io/upload_images/7862575-31377a33004663b6.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt="image"></p><ol start="3"><li>Go2Shell<br>在访达里增加一个打开命令行的快捷入口，快速进入命令行<br><img src="https://upload-images.jianshu.io/upload_images/4109786-1bafd77955fbffb0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ol><p>还可以设置在哪打开<br><img src="https://upload-images.jianshu.io/upload_images/4109786-110f3ed1ef464801.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ol start="4"><li><p>FeHelper<br>一款谷歌浏览器插件，主要是免费的工具集合。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-9cd7f23018ebe5bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="FeHelper"></p></li><li><p>Octotree<br>这又是一款chrome插件，能将github项目在左侧边栏以目录树形结构展示。让你更直观地感受自己或别人的项目。感谢@朋友你的学生卡掉了 同学的推荐<br><img src="https://upload-images.jianshu.io/upload_images/4109786-1e143b5f51793d80.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p>WeChatPlugin mac<br>mac微信助手，<a href="https://www.jianshu.com/p/b6ecd2c3c1dd" target="_blank" rel="noopener">mac微信助手，功能全新升级</a>，有很多比如消息防撤回、远程控制(已支持语音)、微信多开、第二次登录免认证等等的功能。</p></li></ol><h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><p><a href="https://www.jianshu.com/p/65cec2a1055d" target="_blank" rel="noopener">工欲善其事，必先利其器-程序员工具推荐</a><br><a href="https://www.macdown.com/news/3644.html" target="_blank" rel="noopener">正是有了这些神器，让我再也离不开Mac！</a></p>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>emacs上使用px转换vw插件</title>
      <link href="/2019/10/30/emacs%E4%B8%8A%E4%BD%BF%E7%94%A8px%E8%BD%AC%E6%8D%A2vw%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/10/30/emacs%E4%B8%8A%E4%BD%BF%E7%94%A8px%E8%BD%AC%E6%8D%A2vw%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>学习使用elisp给emacs写一个px转换成vw的插件</p><p><a href="https://www.jianshu.com/p/f8153a735294" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>因为emacs缺少一个插件已经影响了前端同学对emacs的兴趣了，这有点尴尬，其实emacs很强大的。<br>对标vs code的<a href="https://marketplace.visualstudio.com/items?itemName=liurongqing.px2vw" target="_blank" rel="noopener">px2vw插件</a>，今天花半天实现了一个简易的相似功能的emacs插件。</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>参考<a href="https://github.com/qdhaiqiang/px2vw-emacs-plugin" target="_blank" rel="noopener">px2vw-px2vw-emacs-plugin</a>上中式英文说明也能看懂。</p><p>下载<a href="https://github.com/qdhaiqiang/px2vw-emacs-plugin/blob/master/px2vw.el" target="_blank" rel="noopener">px2vw.el</a>到本地<code>~/emacs.d/lisp/</code>目录下。</p><p>或在<code>~/emacs.d/lisp/</code>自件一个名为<code>px2vw.el</code>文件，将代码复制进去，保存。</p><p>在<code>~/.emacs.d/custom.el</code>文件里添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(require &apos;px-to-vw-vh)</span><br><span class="line">(global-set-key (kbd &quot;C-c w&quot;) &apos;px-&gt;vw)</span><br></pre></td></tr></table></figure></p><p>如果这个操作很常用的话，也可以定义一个更简洁的快捷键，比如<code>F9</code>，那就将上面的第二行换成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(global-set-key [f9] &apos;px-&gt;vw)</span><br></pre></td></tr></table></figure></p><p>重启emacs。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在px代码出，按下你设置的快捷键，将执行绑定的函数，这会把比如<code>200px;</code>换算成<code>13.8889vw</code>保留了4位小数点，替换掉原来的以px为单位的代码。</p><h3 id="局限说明"><a href="#局限说明" class="headerlink" title="局限说明"></a>局限说明</h3><ol><li>目前插件内置了宽度是<strong>1440</strong>，如果需要修改，可以在下载下来的<code>px2vw.el</code>里把第一行定义的常量<code>viewpoint-width</code>改成你需要的值。</li><li>鉴于vh很少用到，因此还没有做适应，需要的时候手动计算下。</li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://emacsist.github.io/2018/01/03/%E6%9D%8E%E6%9D%80%E7%9A%84elisp%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" target="_blank" rel="noopener">李杀的Elisp学习笔记</a><br><a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/" target="_blank" rel="noopener">Emacs Lisp</a></p><h2 id="px2vw-el附件"><a href="#px2vw-el附件" class="headerlink" title="px2vw.el附件"></a>px2vw.el附件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(defvar viewpoint-width 1440) </span><br><span class="line">(defvar viewpoint-height 900) </span><br><span class="line"></span><br><span class="line">(defun kill-thing-at-point (thing)</span><br><span class="line">  &quot;Kill the `thing-at-point&apos; for the specified kind of THING.&quot;</span><br><span class="line">  (let ((bounds (bounds-of-thing-at-point thing)))</span><br><span class="line">    (if bounds</span><br><span class="line">        (kill-region (car bounds) (cdr bounds))</span><br><span class="line">      (error &quot;No %s at point&quot; thing))))</span><br><span class="line"></span><br><span class="line">(defun kill-word-at-point ()</span><br><span class="line">  &quot;Kill the word at point.&quot;</span><br><span class="line">  (interactive)</span><br><span class="line">  (kill-thing-at-point &apos;word))</span><br><span class="line"></span><br><span class="line">(defun convert-to-vw (px-v)</span><br><span class="line">  (format &quot;%.2f&quot; (/ (float (* (string-to-number px-v) 100)) viewpoint-width)))</span><br><span class="line"></span><br><span class="line">(defun convert-to-vh (px-v)</span><br><span class="line">  (format &quot;%.2f&quot; (/ (float (* (string-to-number px-v) 100)) viewpoint-height )))</span><br><span class="line"></span><br><span class="line">(defun px-&gt;vw ()</span><br><span class="line">  &quot;Convert word at point (or selected region) from px to vw.&quot;</span><br><span class="line">  (interactive)</span><br><span class="line">  (let* ((char (if (use-region-p)</span><br><span class="line">                     (cons (region-beginning) (region-end))</span><br><span class="line">                   (thing-at-point &apos;symbol))))</span><br><span class="line">    (when (and char (not (string-blank-p char)) )</span><br><span class="line">      (if (string-match &quot;px&quot; char)</span><br><span class="line">      (progn</span><br><span class="line">        (setq word (current-word char))</span><br><span class="line">        (setq px-v (substring word 0 (- (length word) 2)))</span><br><span class="line">        (kill-word-at-point)</span><br><span class="line">        (insert (concat (convert-to-vw px-v) &quot;vw&quot;)))</span><br><span class="line">      (print &quot;there&apos;s no px value to converting&quot;)))))</span><br><span class="line"></span><br><span class="line">;;(global-set-key (kbd &quot;C-c w&quot;) &apos;px-&gt;vw)</span><br><span class="line">;;(global-set-key [f9] &apos;px-&gt;vw)</span><br><span class="line">(provide &apos;px2vw)</span><br></pre></td></tr></table></figure><h2 id="大神加强版"><a href="#大神加强版" class="headerlink" title="大神加强版"></a>大神加强版</h2><p>上面的plugin不支持整个文件或者选中区域一次性操作是个硬伤。大神版优化的同时，同时解决了这个问题。<br>写的代码有长又烂的原因只有一个，那就是学的太浅。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(defun k-test (string &amp;optional posBegin posEnd)</span><br><span class="line">  &quot;支持当前段落和选中区域（region）.&quot;</span><br><span class="line">  (interactive</span><br><span class="line">   (if (use-region-p)</span><br><span class="line">       (list nil (region-beginning) (region-end))</span><br><span class="line">     (let ((bds (bounds-of-thing-at-point &apos;paragraph)))</span><br><span class="line">       (progn</span><br><span class="line">         (goto-char (car bds))</span><br><span class="line">         (list nil (car bds) (cdr bds))))))</span><br><span class="line"></span><br><span class="line">  (while (re-search-forward &quot;\\([0-9.]+\\)\\(px\\)&quot; posEnd t)</span><br><span class="line">    (let* ((px-digit-str (match-string 1))</span><br><span class="line">           (px-digit (string-to-number px-digit-str))</span><br><span class="line">           (vw-digit (format</span><br><span class="line">                      &quot;%.2f&quot;</span><br><span class="line">                      (/</span><br><span class="line">                       (* 100.0 px-digit)</span><br><span class="line">                       1400.0))))</span><br><span class="line">      (replace-match (concat vw-digit  &quot;vw&quot;) t nil)</span><br><span class="line">      )))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> emacs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojurescript页面定时刷新</title>
      <link href="/2019/10/24/clojurescript-timer-refresh/"/>
      <url>/2019/10/24/clojurescript-timer-refresh/</url>
      
        <content type="html"><![CDATA[<p>clojurescript 页面定时器</p><p><a href="https://www.jianshu.com/p/df7fe14ae3e2" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>最近做蓝牙设备的连接，需要在app上实时显示蓝牙的读数，毕竟只有使用设备的时候才要求实时性，简易期间我们使用服务端通信，或者socket这种双向通信的，直接在页面时定时刷新</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(require &apos;[reagent.core :as r])</span><br><span class="line">(require &apos;[re-frame.core :as rf])</span><br><span class="line"></span><br><span class="line">(defn dispatch-timer-event</span><br><span class="line">  []</span><br><span class="line">  (let [now (js/Date.)]</span><br><span class="line">    (rf/dispatch [:timer now])))</span><br><span class="line"></span><br><span class="line">(defonce do-timer (js/setInterval dispatch-timer-event 1000))</span><br><span class="line"></span><br><span class="line">(rf/reg-event-db                 </span><br><span class="line"> :timer  </span><br><span class="line"> (fn [db [_ new-time]]</span><br><span class="line">   (prn &quot;&lt;&lt;&lt;&lt;&lt; this is a test log &gt;&gt;&gt;&gt;&gt;&quot; (str new-time))</span><br><span class="line">   (assoc db :time new-time)))</span><br></pre></td></tr></table></figure><h2 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h2><p>停止一个interval使用如下操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(r/render-component (r/create-element &quot;button&quot;</span><br><span class="line">                                      #js &#123;:onClick #(. js/window (clearInterval do-timer))&#125;</span><br><span class="line">                                      &quot;停止刷新&quot;</span><br><span class="line">                                      ) js/klipse-container)</span><br></pre></td></tr></table></figure></p><p><strong>划重点</strong>：定时任务启动后必须找到对应的才能停止掉，在实际开发的过程中，你也一定不希望单页面的应用，只要定时任务启动了，关闭了当前页定时任务还在执行着，一定是要找到某个合适的契机停止掉的。<br>我们是这样实现的，一个按钮控制跳页同时启动定时任务，setInterval的返回值用atom或者db保存起来。<br>页面退出，或者其他button有操作时，调用clearInterval将atom或者db里订阅的interval停止掉。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>实际使用中我们当然不是只打个log，是调用接口，效果如下：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-8638d1f8887ec746.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/Day8/re-frame/blob/master/examples/simple/src/simple/core.cljs" target="_blank" rel="noopener">https://github.com/Day8/re-frame/blob/master/examples/simple/src/simple/core.cljs</a></p>]]></content>
      
      
      <categories>
          
          <category> clojurescript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
            <tag> clojurescript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>emacs上安装类似explorer插件neotree</title>
      <link href="/2019/10/24/emacs%E4%B8%8A%E5%AE%89%E8%A3%85%E7%B1%BB%E4%BC%BCexplorer%E6%8F%92%E4%BB%B6neotree/"/>
      <url>/2019/10/24/emacs%E4%B8%8A%E5%AE%89%E8%A3%85%E7%B1%BB%E4%BC%BCexplorer%E6%8F%92%E4%BB%B6neotree/</url>
      
        <content type="html"><![CDATA[<p>emacs使用感受和两个插件</p><p><a href="https://www.jianshu.com/p/185840de08a8" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="emacs推荐原因"><a href="#emacs推荐原因" class="headerlink" title="emacs推荐原因"></a>emacs推荐原因</h2><p>我开始学clojure是用intellij idea的，感觉这款神器配上cursive plugin + Rainbow Brackets撸码效果也还不错，现在想想可能这种感觉来自当时太不习惯clojure的写作习惯，和不熟悉clojure的哪怕最基础的函数。</p><p>使用的一个多月期间，整体code fomatter与大神的emacs不一样，所以打开一个namespace总是会重新根据cursive认为的缩进给加减括号，几天里总会出现那么一两次，括号乱的匹配不上，费很大劲。</p><p>学习期间，看高手玩弄代码，尤其是repl交互里，才开始觉得intellij idea欠缺点什么。于是开始使用emacs，各种查，各种问，强迫自己习惯，也就一周的时间，常用的快捷键也就能记差不多了（毕竟菜鸟级的入门用户常用的也不多😏）。</p><p>两三周以后我就真的不想再在intellij上玩了，尤其是学会括号吃进、吐出这种后来非常非常常用的快捷键，熟悉了之后感觉在emasc里编辑clojure也是一种享受。</p><p>Visual Studio Code也有好几个clojure插件，配上彩虹括号，代码可读性也还不错，但是编辑起来就更不如intellij idea了，因为连函数都跳不进去，删除和剪切时防止括号匹配错误等等都没有，更没有repl环境，总之对编辑clojure来说太次~~~效率也不会高。</p><h2 id="缺陷补充"><a href="#缺陷补充" class="headerlink" title="缺陷补充"></a>缺陷补充</h2><p>但是事物都有两面性，毕竟萝卜白菜各有所爱，emacs也有它不足的地方，除了快捷键比较麻烦以外，有人说编写了代码必须按下<code>C+x C+s</code>保存，麻烦。<br>听的更多的是emacs没有想别的ide一样的explorer可以看整个工程的结构，因此我将自己的尝试写一下，正在使用或有意向使用emacs的想加的可以自己加，也可以找我免费上门安装😁😄😁</p><p>我也安装的是大神推荐的<a href="https://github.com/purcell/emacs.d" target="_blank" rel="noopener">purcell/emacs.d</a>的配置，但是做了两点改动。</p><h3 id="自动保存插件"><a href="#自动保存插件" class="headerlink" title="自动保存插件"></a>自动保存插件</h3><p>有了这个插件可以不用再按下<code>C+x C+s</code>保存了。默认1s钟你不动，程序就会自己保存，并且不会再有那些#文件，程序启动的话也会自己编译，我使用的时候静默时间改成3s。<br>参考文章<a href="https://www.jianshu.com/p/998ceaf522d1" target="_blank" rel="noopener">Emacs：我已经十年没有按过保存按键了（附带 auto-save.el 源码解析）</a>做的，相信有这想法的话，应该谁都会，我这推荐下相关链接。</p><p>插件代码：<a href="https://www.emacswiki.org/emacs/auto-save.el" target="_blank" rel="noopener">auto-save.el</a></p><p>需要修改静默时间的话修改<code>.el</code>文件里的<code>auto-save-idle</code>函数参数即可，单位是秒。</p><h3 id="neotree插件"><a href="#neotree插件" class="headerlink" title="neotree插件"></a>neotree插件</h3><p>从网上搜一下的话，这样的需求还真不是只有我们想要，比如:<a href="https://stackoverflow.com/questions/843645/a-good-project-tree-browser-for-emacs" target="_blank" rel="noopener">A good project tree browser for Emacs?</a>,<br>emacs真是千人千样，我从各位大神高度的自定制方案里找到了<a href="https://github.com/jaypei/emacs-neotree" target="_blank" rel="noopener">neotree</a>和<a href="https://github.com/sebastiencs/sidebar.el" target="_blank" rel="noopener">sidebar</a>两款，我使用的前者，安装简单，也能达到目的（我也担心乱七八糟安装多了，会不会影响eamcs启动运行速度，所以比重就轻）。</p><p>推荐F8作为控制显示和隐藏的快捷键，写多了，一图胜千言~<br><img src="https://upload-images.jianshu.io/upload_images/4109786-dde44c4ecf680096.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>神舟精盾T47T1安装黑苹果</title>
      <link href="/2019/10/19/%E7%A5%9E%E8%88%9F%E7%B2%BE%E7%9B%BET47T1%E5%AE%89%E8%A3%85%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
      <url>/2019/10/19/%E7%A5%9E%E8%88%9F%E7%B2%BE%E7%9B%BET47T1%E5%AE%89%E8%A3%85%E9%BB%91%E8%8B%B9%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p>新买的神舟精盾8G内存，1T固态，买来安装黑苹果的时候一点小问题记录</p><p><a href="https://www.jianshu.com/p/87da42c638ad" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>最近在同事的鼓动下下手了神舟精盾UT471这款本子，14寸超薄本。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-184d9dce06701957.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置"></p><p>同事半个多月前就是买的这款，已经折腾好了黑苹果，正是基于这个原因，我犹豫中带着不安还是买了这款，折腾黑苹果确实是个头疼的事，除非舍得花钱。。。</p><p>与之前不同的事这次这个笔记本只有一块儿硬盘，所以安装于以前不同了，趁着有印象，记录下咋干的。</p><p>1、首先，系统分区得要两个ESP区，一个引导clover，一个引导Windows，就是因为没有搞懂这个，老是想在一个ESP上把两个引导都加上，最后导致正版的windows10废了，装了个盗版的。</p><p>2、黑苹果的无线网卡和蓝牙是铁定驱动不了的，当时联想拯救者还花150大洋，买了个黑苹果无线网卡换上去，一切完美了，但是这次就惨了，据同事说，市面上没有插口与之能匹配的黑苹果无线网卡，他买了一次拿回来试过了，不能用。因此wifi和蓝牙只能用USB驱动了，这样一个电脑上就要至少插两个设备，而且就算插两个，airdrop这么赞的投屏功能也不属于你了。</p><p>3、要驱动USB蓝牙，就要先禁止掉mac自带的蓝牙，虽然自带的不能用，但是它还是站着矛盾不拉屎，不禁止掉USB的适配器是不起作用的，因此macOS只认一个。<br>于是可以参考下文设置禁止一下：<br> <a href="https://www.cnblogs.com/jifeng/p/9126362.html" target="_blank" rel="noopener">小米笔记本装MAC（黑苹果），外接USB蓝牙，禁止笔记本自带的蓝牙方法</a></p><p>4、禁止ABC输入法<br>参考：<a href="https://www.jianshu.com/p/af85cc5cd771" target="_blank" rel="noopener">删除MAC系统自带的ABC输入法</a></p><p>5、美中不足的地方，电脑启动时要先断开电源，否则会导致键盘无法驱动，开机后再充电，此时键盘恢复正常。</p>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> 黑苹果 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojure之制作lein模板（一）</title>
      <link href="/2019/10/09/clojure%E4%B9%8B%E5%88%B6%E4%BD%9Clein%E6%A8%A1%E6%9D%BF/"/>
      <url>/2019/10/09/clojure%E4%B9%8B%E5%88%B6%E4%BD%9Clein%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>使用开源luminus模板策略，制作属于自己的项目模板</p><p><a href="https://www.jianshu.com/p/39f00b399754" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a>传送门</h2><p><a href="https://github.com/technomancy/leiningen/blob/stable/doc/TEMPLATES.md" target="_blank" rel="noopener">Writing Templates</a><br><a href="https://medium.com/@bansaridesai/writing-lein-template-quick-tutorial-f89b463e66a3" target="_blank" rel="noopener">Writing Lein template — quick tutorial</a></p><h2 id="制作目标项目"><a href="#制作目标项目" class="headerlink" title="制作目标项目"></a>制作目标项目</h2><p>1、创建工程<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">➜  mygitrepo lein new template hc-template --to-dir hc-template</span><br><span class="line">Generating a Luminus project.</span><br><span class="line">➜  mygitrepo cd hc-template</span><br><span class="line">➜  hc-template tree</span><br><span class="line">.</span><br><span class="line">├── CHANGELOG.md</span><br><span class="line">├── LICENSE</span><br><span class="line">├── README.md</span><br><span class="line">├── project.clj</span><br><span class="line">├── resources</span><br><span class="line">│   └── leiningen</span><br><span class="line">│       └── new</span><br><span class="line">│           └── hc_template</span><br><span class="line">│               └── foo.clj</span><br><span class="line">└── src</span><br><span class="line">    └── leiningen</span><br><span class="line">        └── new</span><br><span class="line">            └── hc_template.clj</span><br><span class="line"></span><br><span class="line">7 directories, 6 files</span><br><span class="line">➜  hc-template</span><br></pre></td></tr></table></figure></p><p>2、 根目录手动增加shadow-cljs.edn文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">;; This file is generated by lein-shadow, do not manually edit. Instead, edit project.clj shadow-cljs key.</span><br><span class="line">&#123;:nrepl &#123;:port 7002&#125;,</span><br><span class="line"> :builds</span><br><span class="line"> &#123;:app</span><br><span class="line">  &#123;:target :browser,</span><br><span class="line">   :output-dir &quot;target/cljsbuild/public/js&quot;,</span><br><span class="line">   :asset-path &quot;/js&quot;,</span><br><span class="line">   :modules &#123;:app</span><br><span class="line">             &#123;:entries [hc-template.app]&#125;&#125;,</span><br><span class="line">   :devtools &#123;:watch-dir &quot;resources/public&quot;,</span><br><span class="line">              :preloads [re-frisk.preload]&#125;,</span><br><span class="line">   :dev &#123;:closure-defines &#123;&quot;re_frame.trace.trace_enabled_QMARK_&quot; true&#125;&#125;</span><br><span class="line">   :release &#123;:output-dir &quot;dist/&quot;</span><br><span class="line">             :module-hash-names true</span><br><span class="line">             :build-options &#123;:manifest-name &quot;cljs-manifest.json&quot;&#125;&#125;&#125;&#125; ,</span><br><span class="line"> </span><br><span class="line"> :test &#123;:target :node-test,</span><br><span class="line">        :output-to &quot;target/test/test.js&quot;,</span><br><span class="line">        :autorun true&#125;&#125;,</span><br><span class="line"> :dev-http &#123;8000 &#123;:roots [&quot;resources/public&quot; &quot;target/cljsbuild/public&quot;]&#125;&#125;</span><br><span class="line"> :lein true&#125;</span><br></pre></td></tr></table></figure></p><p>3、引入antd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install antd --save</span><br></pre></td></tr></table></figure></p><p>package.json配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;antd&quot;: &quot;^3.22.0&quot;,</span><br><span class="line">    &quot;create-react-class&quot;: &quot;15.6.3&quot;,</span><br><span class="line">    &quot;react&quot;: &quot;16.8.6&quot;,</span><br><span class="line">    &quot;react-dom&quot;: &quot;16.8.6&quot;,</span><br><span class="line">    &quot;shadow-cljs&quot;: &quot;2.8.39&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4、配置入口文件<br>在<code>resources/public</code>目录下新建index.html文件，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;cn&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;后台管理系统&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;/&gt;</span><br><span class="line">    &lt;meta content=&quot;width=device-width, initial-scale=1.0&quot; name=&quot;viewport&quot; /&gt;</span><br><span class="line">    &lt;link href=&quot;https://cdn.bootcss.com/antd/3.18.0/antd.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Our JavaScript will modify the DOM inside this element --&gt;</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;!-- All our ClojureScript gets compiled into this file --&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    document.write(&quot;&lt;script type=&apos;text/javascript&apos; src=&apos;/js/app.js?v=&quot;+Math.random()+&quot;&apos; type=&apos;text/javascript&apos;&gt;&lt;\/script&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>5、启动项目，验证是否正常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">➜  shadow-cljs server</span><br><span class="line">Preparing npm packages</span><br><span class="line">Installing npm packages</span><br><span class="line">npm packages successfully installed</span><br><span class="line">Running shadow-cljs...</span><br><span class="line">2019-08-25 20:13:00,880 [main] DEBUG org.jboss.logging - Logging Provider: org.jboss.logging.Slf4jLoggerProvider</span><br><span class="line">2019-08-25 20:13:02,199 [main] DEBUG io.undertow - starting undertow server io.undertow.Undertow@31ff0947</span><br><span class="line">2019-08-25 20:13:02,207 [main] INFO  org.xnio - XNIO version 3.7.0.Final</span><br><span class="line">2019-08-25 20:13:02,398 [main] INFO  org.jboss.threads - JBoss Threads version 2.3.2.Final</span><br><span class="line">2019-08-25 20:13:02,423 [main] DEBUG io.undertow - Configuring listener with protocol HTTP for interface 0.0.0.0 and port 9630</span><br><span class="line">shadow-cljs - server version: 2.8.39 running at http://localhost:9630</span><br><span class="line">shadow-cljs - nREPL server started on port 7002</span><br><span class="line">shadow-cljs - watching build :app</span><br><span class="line">[:app] Configuring build.</span><br><span class="line">[:app] Compiling ...</span><br><span class="line">[:app] Build completed. (345 files, 344 compiled, 0 warnings, 62.36s)</span><br></pre></td></tr></table></figure></p><ul><li>clojure编译器概览: <a href="http://localhost:9630/" target="_blank" rel="noopener">http://localhost:9630</a></li><li>实时开发的预览: <a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a></li></ul><h2 id="参考luminus-template实现机制编写source加载代码"><a href="#参考luminus-template实现机制编写source加载代码" class="headerlink" title="参考luminus-template实现机制编写source加载代码"></a>参考<a href="https://github.com/luminus-framework/luminus-template" target="_blank" rel="noopener">luminus-template</a>实现机制编写source加载代码</h2><p>参考leiningen的原因是<a href="https://medium.com/@bansaridesai/writing-lein-template-quick-tutorial-f89b463e66a3" target="_blank" rel="noopener">Writing Lein template — quick tutorial</a>这文中妹子没有考虑clojure本身两个大括号<code></code>这种语法是存在的，所以如果用她的方式，代码中本来就是<code></code>的语法将创建模板不成功，我想这也是leiningen使用连个尖括号<code>&lt;&lt;name&gt;&gt;</code>来给变量赋值的原因。</p><p>上核心代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">(ns leiningen.new.common</span><br><span class="line">  (:require</span><br><span class="line">   [selmer.parser :as selmer]</span><br><span class="line">   [leiningen.new.templates :refer [renderer raw-resourcer -&gt;files]]</span><br><span class="line">   [clojure.pprint :refer [code-dispatch pprint with-pprint-dispatch]]</span><br><span class="line">   [clojure.string :as string]</span><br><span class="line">   [clojure.java.io :as io]))</span><br><span class="line"></span><br><span class="line">(def template-name &quot;hc-template&quot;)</span><br><span class="line"></span><br><span class="line">(defn render-template [template options]</span><br><span class="line">  (selmer/render</span><br><span class="line">   (str &quot;&lt;% safe %&gt;&quot; template &quot;&lt;% endsafe %&gt;&quot;)</span><br><span class="line">   options</span><br><span class="line">   &#123;:tag-open \&lt; :tag-close \&gt; :filter-open \&lt; :filter-close \&gt;&#125;))</span><br><span class="line"></span><br><span class="line">(defn init-render []</span><br><span class="line">  (renderer template-name render-template))</span><br><span class="line"></span><br><span class="line">(defn slurp-resource [path]</span><br><span class="line">  (-&gt; (str &quot;leiningen/new/hc_template/&quot; path)</span><br><span class="line">      io/resource</span><br><span class="line">      slurp))</span><br><span class="line"></span><br><span class="line">(selmer/add-tag!</span><br><span class="line"> :include</span><br><span class="line"> (fn [args context-map]</span><br><span class="line">   (-&gt; (slurp-resource (first args))</span><br><span class="line">       (render-template context-map)</span><br><span class="line">       (string/replace #&quot;^\n+&quot; &quot;&quot;)</span><br><span class="line">       (string/replace #&quot;\n+$&quot; &quot;&quot;))))</span><br><span class="line"></span><br><span class="line">(defn render-asset [render options asset]</span><br><span class="line">  (if (string? asset)</span><br><span class="line">    asset</span><br><span class="line">    (let [[target source] asset]</span><br><span class="line">      [target (render source options)])))</span><br><span class="line"></span><br><span class="line">(defn render-assets [assets binary-assets options]</span><br><span class="line">  (let [render (init-render)</span><br><span class="line">        raw (raw-resourcer template-name)]</span><br><span class="line">    (apply -&gt;files options</span><br><span class="line">           (into</span><br><span class="line">            (map (partial render-asset render options) assets)</span><br><span class="line">            (map (fn [[target source]] [target (raw source)]) binary-assets)))))</span><br></pre></td></tr></table></figure></p><p>需要加载的资源文件目录是<code>sources/leiningen/new/hc_template</code>目录下，加载文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">(ns leiningen.new.hc-template</span><br><span class="line">  (:require [leiningen.new.templates :refer [multi-segment sanitize-ns renderer </span><br><span class="line">                                             name-to-path -&gt;files project-name year sanitize]]</span><br><span class="line">            [leiningen.core.main :as main]</span><br><span class="line">            [selmer.parser :as selmer]</span><br><span class="line">            [clojure.string :as string]</span><br><span class="line">            [leiningen.new.common :refer :all]</span><br><span class="line">            [clojure.java.io :as io]))</span><br><span class="line"></span><br><span class="line">(def timestamp (.format</span><br><span class="line">                (java.text.SimpleDateFormat. &quot;yyyyMMddHHmmss&quot;)</span><br><span class="line">                (java.util.Date.)))</span><br><span class="line"></span><br><span class="line">(def project-assets</span><br><span class="line">  [[&quot;dev-config.edn&quot;    &quot;dev-config.edn&quot;]</span><br><span class="line">   [&quot;.gitignore&quot;        &quot;gitignore&quot; ]</span><br><span class="line">   [&quot;Procfile&quot;          &quot;Procfile&quot; ]</span><br><span class="line">   [&quot;project.clj&quot;       &quot;project.clj&quot; ]</span><br><span class="line">   [&quot;Dockerfile&quot;        &quot;Dockerfile&quot; ]</span><br><span class="line">   [&quot;Capstanfile&quot;       &quot;Capstanfile&quot; ]</span><br><span class="line">   [&quot;README.md&quot;         &quot;README.md&quot;]</span><br><span class="line">   [&quot;shadow-cljs.edn&quot;   &quot;shadow-cljs.edn&quot; ]</span><br><span class="line">   [&quot;package.json&quot;      &quot;package.json&quot; ]])</span><br><span class="line"></span><br><span class="line">(def clj-core-assets</span><br><span class="line">  [[&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/core.clj&quot;             &quot;src/clj/core.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/nrepl.clj&quot;            &quot;src/clj/nrepl.clj&quot; ]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/config.clj&quot;           &quot;src/clj/config.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/handler.clj&quot;          &quot;src/clj/handler.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/middleware.clj&quot;       &quot;src/clj/middleware.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/middleware/formats.clj&quot;     &quot;src/clj/middleware/formats.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/middleware/exception.clj&quot;   &quot;src/clj/middleware/exception.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/db/core.clj&quot;             &quot;src/clj/db/core.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/routes/services.clj&quot;     &quot;src/clj/routes/services.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/routes/guestbook.clj&quot;     &quot;src/clj/routes/guestbook.clj&quot;]</span><br><span class="line">   ;;test</span><br><span class="line">   [&quot;&#123;&#123;backend-test-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/test/handler.clj&quot;   &quot;test/clj/handler.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-test-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/test/db/core.clj&quot;   &quot;test/clj/db/core.clj&quot;]</span><br><span class="line">   ;; hc clj</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/db/redis.clj&quot;            &quot;src/clj/db/redis.clj&quot;]</span><br><span class="line">   [&quot;&#123;&#123;backend-path&#125;&#125;/&#123;&#123;sanitized&#125;&#125;/common/result.clj&quot;            &quot;src/clj/common/result.clj&quot;]])</span><br><span class="line"></span><br><span class="line">;;这里还有其他很多代码。。。。。</span><br><span class="line">(def db-assets</span><br><span class="line">  [[(str &quot;&#123;&#123;resource-path&#125;&#125;/migrations/&quot; timestamp &quot;-add-users-table.down.sql&quot;)   &quot;resources/migrations/20190831145908-add-users-table.down.sql&quot;]</span><br><span class="line">   [(str &quot;&#123;&#123;resource-path&#125;&#125;/migrations/&quot; timestamp &quot;-add-users-table.up.sql&quot;)   &quot;resources/migrations/20190831145908-add-users-table.up.sql&quot;]</span><br><span class="line">   [&quot;&#123;&#123;resource-path&#125;&#125;/sql/queries.sql&quot;   &quot;resources/sql/queries.sql&quot;]])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(def binary-assets</span><br><span class="line">  [[&quot;&#123;&#123;resource-path&#125;&#125;/public/favicon.ico&quot;  &quot;resources/public/favicon.ico&quot;]</span><br><span class="line">   [&quot;&#123;&#123;resource-path&#125;&#125;/public/index.html&quot;   &quot;resources/public/index.html&quot;]</span><br><span class="line">   [&quot;&#123;&#123;resource-path&#125;&#125;/public/img/warning_clojure.png&quot;  &quot;resources/public/img/warning_clojure.png&quot;]])</span><br><span class="line"></span><br><span class="line">(def core-assets</span><br><span class="line">  (vec (concat project-assets</span><br><span class="line">               clj-core-aeests</span><br><span class="line">               environment-assets</span><br><span class="line">               db-assets</span><br><span class="line">               cljs-core-assets</span><br><span class="line">               system-assets)))</span><br><span class="line"></span><br><span class="line">(def project-relative-paths</span><br><span class="line">  &#123;:backend-path      &quot;src/clj&quot;</span><br><span class="line">   :backend-test-path &quot;test/clj&quot;</span><br><span class="line">   :client-path       &quot;src/cljs&quot;</span><br><span class="line">   :client-test-path  &quot;test/cljs&quot;</span><br><span class="line">   :resource-path     &quot;resources&quot;</span><br><span class="line">   :cljc-path         &quot;src/cljc&quot;</span><br><span class="line">   :db-path           &quot;src/clj&quot;</span><br><span class="line">   :source-paths      [&quot;src/clj&quot;]</span><br><span class="line">   :resource-paths    [&quot;resources&quot;]</span><br><span class="line">   :now               (java.util.Date.)&#125;)</span><br><span class="line"></span><br><span class="line">(def render (renderer &quot;hc-template&quot; render-template))</span><br><span class="line"></span><br><span class="line">(defn generate-project</span><br><span class="line">  &quot;Create a new Luminus project&quot;</span><br><span class="line">  [options]</span><br><span class="line">  (main/info &quot;Generating a hc-template project.&quot;)</span><br><span class="line">  (main/info &quot;Please read README.md firstly!!!&quot;)  </span><br><span class="line">  (render-assets core-assets binary-assets  options))</span><br><span class="line"></span><br><span class="line">(defn hc-template</span><br><span class="line">  &quot;init function&quot;</span><br><span class="line">  [name]</span><br><span class="line">  (let [options (merge</span><br><span class="line">                 project-relative-paths</span><br><span class="line">                 &#123;:name             (project-name name)</span><br><span class="line">                  :selmer-renderer  render-template</span><br><span class="line">                  :min-lein-version &quot;2.0.0&quot;</span><br><span class="line">                  :project-ns       (sanitize-ns name)</span><br><span class="line">                  :sanitized        (name-to-path name)</span><br><span class="line">                  :year             (year)</span><br><span class="line">                  &#125;)]</span><br><span class="line">    (generate-project options)))</span><br></pre></td></tr></table></figure></p><h2 id="模板开发和测试"><a href="#模板开发和测试" class="headerlink" title="模板开发和测试"></a>模板开发和测试</h2><blockquote><p>源代码目录： resources/leiningen/new/hc_template/<br>加载模板文件：src/leiningen/new/hc_template.clj</p></blockquote><p><strong>开发步骤：</strong></p><ol><li>将自己的代码文件保存在resources/leiningen/new/hc_template/对应的目录下。</li><li>修改文件的namespace名称为待赋值的<code>&lt;&lt;project-ns&gt;&gt;</code>,需要引入的其他变量也一样用尖括号括起来，比如项目名称&lt;<name>&gt;。</name></li><li>将自己的源代码在<code>src/leiningen/new/hc_template.clj</code> 加入到render队列里。</li><li><p>cd到模板项目rcclojuretemplate，执行如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lein new hc-template test</span><br></pre></td></tr></table></figure></li><li><p>testing 目录则为用模板创建的目标工程</p></li><li>运行前端，分别执行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure><p>启动后在浏览器本地9630端口查看项目编译情况，8000端口查看前端页面是否加载正常</p><ol start="7"><li>运行后端：通过ide启动后台项目，查看能否正常启动，查看3000端口swagger显示否能正常显示</li><li>前后台都测试通过后，删除testing目录，提交源代码。</li><li><p>部署更新：修改根目录下<code>project.clj</code>里的版本号，最后一位+1即可，<br>通过命令<code>lein deploy</code>部署最新版，账号密码：marvin/Mw99267@,首次部署，会有release版本授权错误提示，需要安装gpg，关于gpg的使用，请参考</p><ul><li><a href="https://www.leadroyal.cn/?p=502" target="_blank" rel="noopener">GPG公私钥的使用和Q&amp;A</a></li><li><a href="https://www.cnblogs.com/wxisme/p/8728008.html" target="_blank" rel="noopener">记一次向maven中央仓库提交依赖包</a></li></ul></li><li><p>如果本地更新测试不充分或者不想配置gpg，可以先push代码，找马海强发布新版本。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql 自动备份</title>
      <link href="/2019/09/30/mysql%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/"/>
      <url>/2019/09/30/mysql%E8%87%AA%E5%8A%A8%E5%A4%87%E4%BB%BD/</url>
      
        <content type="html"><![CDATA[<p>在linux上安装mysql 定时任务运行备份脚本<br><a href="https://www.jianshu.com/p/9b889fab0991" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>脚本文件位置：/opt/chuangke/db/script/mysql_backup.sh<br>db备份文件：/opt/chuangke/db/backup<br>备份脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#==============================================================================</span><br><span class="line">#TITLE:            mysql_backup.sh</span><br><span class="line">#DESCRIPTION:      script for automating the daily mysql backups on development computer</span><br><span class="line">#USAGE:            ./mysql_backup.sh</span><br><span class="line">#CRON:</span><br><span class="line">  # example cron for daily db backup @ 9:15 am</span><br><span class="line">  # min  hr mday month wday command</span><br><span class="line">  # 15   9  *    *     *    /Users/[your user name]/scripts/mysql_backup.sh</span><br><span class="line"></span><br><span class="line">#RESTORE FROM BACKUP</span><br><span class="line">  #$ gunzip &lt; [backupfile.sql.gz] | mysql -u [uname] -p[pass] [dbname]</span><br><span class="line"></span><br><span class="line">#==============================================================================</span><br><span class="line"># CUSTOM SETTINGS</span><br><span class="line">#==============================================================================</span><br><span class="line"></span><br><span class="line"># directory to put the backup files</span><br><span class="line">BACKUP_DIR=/opt/chuangke/db/backup</span><br><span class="line"></span><br><span class="line"># MYSQL Parameters</span><br><span class="line">MYSQL_UNAME=user2018</span><br><span class="line">MYSQL_PWORD=9bJk!mDp@58.</span><br><span class="line"></span><br><span class="line"># Don&apos;t backup databases with these names </span><br><span class="line"># Example: starts with mysql (^mysql) or ends with _schema (_schema$)</span><br><span class="line">IGNORE_DB=&quot;(^mysql|_schema$)&quot;</span><br><span class="line"></span><br><span class="line"># include mysql and mysqldump binaries for cron bash user</span><br><span class="line">PATH=$PATH:/usr/local/mysql/bin</span><br><span class="line"></span><br><span class="line"># Number of days to keep backups</span><br><span class="line">KEEP_BACKUPS_FOR=30 #days</span><br><span class="line"></span><br><span class="line">#==============================================================================</span><br><span class="line"># METHODS</span><br><span class="line">#==============================================================================</span><br><span class="line"></span><br><span class="line"># YYYY-MM-DD</span><br><span class="line">TIMESTAMP=$(date +%F)</span><br><span class="line"></span><br><span class="line">function delete_old_backups()</span><br><span class="line">&#123;</span><br><span class="line">  echo &quot;Deleting $BACKUP_DIR/*.sql.gz older than $KEEP_BACKUPS_FOR days&quot;</span><br><span class="line">  find $BACKUP_DIR -type f -name &quot;*.sql.gz&quot; -mtime +$KEEP_BACKUPS_FOR -exec rm &#123;&#125; \;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function mysql_login() &#123;</span><br><span class="line">  local mysql_login=&quot;-u $MYSQL_UNAME&quot; </span><br><span class="line">  if [ -n &quot;$MYSQL_PWORD&quot; ]; then</span><br><span class="line">    local mysql_login+=&quot; -p$MYSQL_PWORD&quot; </span><br><span class="line">  fi</span><br><span class="line">  echo $mysql_login</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function database_list() &#123;</span><br><span class="line">  local show_databases_sql=&quot;SHOW DATABASES WHERE \`Database\` NOT REGEXP &apos;$IGNORE_DB&apos;&quot;</span><br><span class="line">  echo $(mysql $(mysql_login) -e &quot;$show_databases_sql&quot;|awk -F &quot; &quot; &apos;&#123;if (NR!=1) print $1&#125;&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function echo_status()&#123;</span><br><span class="line">  printf &apos;\r&apos;; </span><br><span class="line">  printf &apos; %0.s&apos; &#123;0..100&#125; </span><br><span class="line">  printf &apos;\r&apos;; </span><br><span class="line">  printf &quot;$1&quot;&apos;\r&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function backup_database()&#123;</span><br><span class="line">    backup_file=&quot;$BACKUP_DIR/$TIMESTAMP.$database.sql.gz&quot; </span><br><span class="line">    output+=&quot;$database =&gt; $backup_file\n&quot;</span><br><span class="line">    echo_status &quot;...backing up $count of $total databases: $database&quot;</span><br><span class="line">    $(mysqldump $(mysql_login) $database | gzip -9 &gt; $backup_file)</span><br><span class="line">    printf &quot;path = $&#123;backup_file&#125;&quot;</span><br><span class="line">    #scp copy to other server</span><br><span class="line">    scp $backup_file haieradmin@10.135.26.78:/opt/chuangke/db/backup/</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function backup_databases()&#123;</span><br><span class="line">  local databases=$(database_list)</span><br><span class="line">  local total=$(echo $databases | wc -w | xargs)</span><br><span class="line">  local output=&quot;&quot;</span><br><span class="line">  local count=1</span><br><span class="line">  for database in $databases; do</span><br><span class="line">    backup_database</span><br><span class="line">    local count=$((count+1))</span><br><span class="line">  done</span><br><span class="line">  echo -ne $output | column -t</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function hr()&#123;</span><br><span class="line">  printf &apos;=%.0s&apos; &#123;1..100&#125;</span><br><span class="line">  printf &quot;\n&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#==============================================================================</span><br><span class="line"># RUN SCRIPT</span><br><span class="line">#==============================================================================</span><br><span class="line">delete_old_backups</span><br><span class="line">hr</span><br><span class="line">backup_databases</span><br><span class="line">hr</span><br><span class="line">printf &quot;All backed up!\n\n&quot;</span><br></pre></td></tr></table></figure></p><p>添加定时任务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# crontab [选项]</span><br><span class="line">选项:</span><br><span class="line">    -e:    编辑crontab定时任务</span><br><span class="line">    -l:    查询crontab任务</span><br><span class="line">    -r:    删除当前用户所有的crontab任务</span><br><span class="line">[root@localhost ~]# crontab -e  # 编辑定时任务</span><br><span class="line"># 添加如下定时任务，使用脚本的方法，每晚2点执行</span><br><span class="line">* 2 * * * /opt/chuangke/db/script/mysql_backup.sh</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ant Design Pro部署在nginx上带二级目录</title>
      <link href="/2019/09/29/Ant%20Design%20Pro%E9%83%A8%E7%BD%B2%E5%9C%A8nginx%E4%B8%8A%E5%B8%A6%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/"/>
      <url>/2019/09/29/Ant%20Design%20Pro%E9%83%A8%E7%BD%B2%E5%9C%A8nginx%E4%B8%8A%E5%B8%A6%E4%BA%8C%E7%BA%A7%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>以部署antd pro管理系统为例，将webpack项目部署在nginx的二级目录下。</p><p><a href="https://www.jianshu.com/p/742d79bb2a64" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>一般我们npm build后的所有静态文件在dist里，部署在nginx的端口根目录是什么也不需要做修改的，但是偏偏有时候因为资源问题，需要在同一个端口下用二级目录来区分工程。</p><p>我们现在流行的js project编译后都是在一个dist名称的目录下，入口文件一般是index.html，Ant design pro也没有例外。<br>分两种情况看现状。</p><h3 id="1、-部署在nginx端口的跟目录"><a href="#1、-部署在nginx端口的跟目录" class="headerlink" title="1、 部署在nginx端口的跟目录"></a>1、 部署在nginx端口的跟目录</h3><p><code>yarn build</code>命令后将dist文件夹下的目录copy到nginx能访问到的指定目录，比如本文的<code>/opt/site/test/antd-pro</code><br>如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@instance-ffkcm2y2:/opt/site/test/antd-pro# pwd</span><br><span class="line">/opt/site/test/antd-pro</span><br><span class="line">root@instance-ffkcm2y2:/opt/site/test/antd-pro# ls</span><br><span class="line">28.614fa0c1.async.js                     p__404.2636ef73.async.js                                   p__profile__advanced__model.ts.53b2cc97.async.js</span><br><span class="line">29.e6e2e94a.async.js                     p__account__center__model.ts.e7d2b570.async.js             p__profile__basic__model.ts.666ea347.async.js</span><br><span class="line">30.ed953c68.async.js                     p__account__settings__model.ts.18871ae5.async.js           p__user__login.42c71fa9.async.js</span><br><span class="line">31.26eb59f0.async.js                     p__dashboard__analysis__model.tsx.d7334d5e.async.js        p__user__login.69c29ea4.chunk.css</span><br><span class="line">32.858d1d30.async.js                     p__dashboard__monitor__model.ts.2295eb87.async.js          p__user__login__model.ts.d7f50bee.async.js</span><br><span class="line">asset-manifest.json                      p__dashboard__workplace__model.ts.25c12073.async.js        p__user__register.440437ac.chunk.css</span><br><span class="line">favicon.png                              p__form__advanced-form__model.ts.83317f1b.async.js         p__user__register.a695f9b3.async.js</span><br><span class="line">icons                                    p__form__basic-form__model.ts.4ec9fad5.async.js            p__user__register__model.ts.474a7318.async.js</span><br><span class="line">index.html                               p__form__step-form__model.ts.2182323a.async.js             p__user__register-result.3718897d.async.js</span><br><span class="line">layouts__BasicLayout.6bb2089d.chunk.css  p__list__basic-list__model.ts.ee583322.async.js            p__user__register-result.b1bdabda.chunk.css</span><br><span class="line">layouts__BasicLayout.d3a07379.async.js   p__list__card-list__model.ts.a5f25999.async.js             umi.0385b6b1.css</span><br><span class="line">layouts__BlankLayout.17fcb893.async.js   p__list__search__applications__model.ts.05817605.async.js  umi.1ffff763.js</span><br><span class="line">layouts__BlankLayout.6a502b55.chunk.css  p__list__search__articles__model.ts.9b3e67e3.async.js      vendors.1acb639b.chunk.css</span><br><span class="line">layouts__UserLayout.265c2404.async.js    p__list__search__projects__model.ts.b50103cf.async.js      vendors.bda2d737.async.js</span><br><span class="line">layouts__UserLayout.50d9ab78.chunk.css   p__list__table-list__model.ts.7288e948.async.js            viz.40029ece.async.js</span><br><span class="line">root@instance-ffkcm2y2:/opt/site/test/antd-pro#</span><br></pre></td></tr></table></figure></p><p>nginx的配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@instance-ffkcm2y2:/usr/local/nginx/conf/vhost# cat antd.test.5055.conf</span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen       5055;</span><br><span class="line">server_name  182.61.51.177;</span><br><span class="line">        index index.html;</span><br><span class="line">        root /opt/site/test/antd-pro/;</span><br><span class="line">location / &#123;</span><br><span class="line">    try_files $uri $uri/ /doc.html;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line">access_log  /opt/nginxlog/antd-pro-access.log;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">root@instance-ffkcm2y2:/usr/local/nginx/conf/vhost#</span><br></pre></td></tr></table></figure></p><p>访问看看<br><img src="https://upload-images.jianshu.io/upload_images/4109786-b38cf3a60480bc15.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"><br>所有js和css直接在端口以下首层。</p><h3 id="2、部署时携带二级目录"><a href="#2、部署时携带二级目录" class="headerlink" title="2、部署时携带二级目录"></a>2、部署时携带二级目录</h3><ul><li>1、修改工程根目录下的config/config.js文件<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4bc89a74b19f1d13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="diff"><br>两处修改，<blockquote><p>export default下增加<code>base</code>和<code>publicPath</code>两个参数，分别配置一样的参数<code>/children-path</code><br>mainfest 下修改<code>basePath</code>从原来的’/‘改为’/children-path/‘，注意结尾有斜线。</p></blockquote></li></ul><p>修改玩后重新npm install，然后本地启动，本地启动没问题，再进行下一步。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-f345a254fce968fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="local"></p><ul><li>2、打包dist</li><li>3、将dist上传到目标服务器</li><li>4、配置nginx<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen       5055;</span><br><span class="line">server_name  182.61.51.177;</span><br><span class="line">        index index.html;</span><br><span class="line">        root /opt/site/test/antd-pro/;</span><br><span class="line">location / &#123;</span><br><span class="line">    try_files $uri $uri/ /doc.html;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">location /children-path &#123;</span><br><span class="line">            alias /opt/site/test/antd-pro2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">access_log  /opt/nginxlog/antd-pro-access.log;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>访问看看效果</p><p>累赘到最后发现，自己是个大傻逼，不看文档的后果很严重。</p><p>多看文档！<br>多看文档！！<br>多看文档！！！<br>重要的事情说三遍！！！！！！！！</p><p>文档在哪里？不是瞎子应该就能找到：<a href="https://pro.ant.design/docs/deploy-cn" target="_blank" rel="noopener">https://pro.ant.design/docs/deploy-cn</a></p>]]></content>
      
      
      <categories>
          
          <category> 后台管理系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antd Pro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>工作中常用的SQL</title>
      <link href="/2019/08/27/mysql-%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84SQL/"/>
      <url>/2019/08/27/mysql-%E5%B7%A5%E4%BD%9C%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84SQL/</url>
      
        <content type="html"><![CDATA[<p>工作中偶尔用但是又很容易忘记的sql</p><p><a href="https://www.jianshu.com/p/1d3afffe1284" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>现在项目中用的最多的是免费的mysql，因此下面的sql只保证在mysql上奏效。</p><h2 id="1、时间戳格式化-amp-case-when"><a href="#1、时间戳格式化-amp-case-when" class="headerlink" title="1、时间戳格式化 &amp; case-when"></a>1、时间戳格式化 &amp; case-when</h2><p>查询系统发放的红包的有效时间和状态：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">a.amount 红包面额,</span><br><span class="line">a.member_phone 领取人,</span><br><span class="line">a.amount_range 使用门槛,</span><br><span class="line">FROM_UNIXTIME(</span><br><span class="line"><span class="keyword">LEFT</span> ( a.rule_start, <span class="number">10</span> ),</span><br><span class="line"><span class="string">'%Y-%m-%d %T'</span> </span><br><span class="line">) 生效时间,</span><br><span class="line">FROM_UNIXTIME(</span><br><span class="line"><span class="keyword">LEFT</span> ( a.rule_end, <span class="number">10</span> ),</span><br><span class="line"><span class="string">'%Y-%m-%d %T'</span> </span><br><span class="line">) 过期时间,</span><br><span class="line">a.send_time 发送时间,</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line">a.<span class="string">`status`</span> </span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'10'</span> <span class="keyword">THEN</span></span><br><span class="line"><span class="string">'未使用'</span> </span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'20'</span> <span class="keyword">THEN</span></span><br><span class="line"><span class="string">'已使用'</span> </span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'30'</span> <span class="keyword">THEN</span></span><br><span class="line"><span class="string">'将过期'</span> </span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'40'</span> <span class="keyword">THEN</span></span><br><span class="line"><span class="string">'已过期'</span> </span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">'50'</span> <span class="keyword">THEN</span></span><br><span class="line"><span class="string">'已占用'</span> <span class="keyword">ELSE</span> <span class="string">'其他'</span> </span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> <span class="string">'当前状态'</span>,</span><br><span class="line">a.useage_range_name 使用范围,</span><br><span class="line">b.remarks 活动名称,</span><br><span class="line">b.rule_start 规则开始时间,</span><br><span class="line">b.rule_end 规则截止时间,</span><br><span class="line">a.<span class="string">`use_date`</span> <span class="keyword">AS</span> 使用或过期时间 </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"><span class="string">`hl_benefit_redpackage_user`</span> a</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> <span class="string">`hl_benefit_redpackage`</span> b <span class="keyword">ON</span> a.redpackage_id = b.redpackage_id </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">a.redpackage_id != <span class="string">''</span> </span><br><span class="line"><span class="keyword">AND</span> ! <span class="keyword">ISNULL</span>( a.redpackage_id );</span><br></pre></td></tr></table></figure></p><h2 id="2、group-by的合理使用"><a href="#2、group-by的合理使用" class="headerlink" title="2、group by的合理使用"></a>2、group by的合理使用</h2><p>一般地，select后面只能是group by 的字段或者跟些聚合函数，比如查询某天以后没天注册用户数量：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"><span class="keyword">DATE_FORMAT</span>( member_regist_time, <span class="string">'%Y-%m-%d'</span> ) <span class="keyword">AS</span> <span class="string">'日期'</span>,</span><br><span class="line"><span class="keyword">COUNT</span>( <span class="number">1</span> ) <span class="keyword">AS</span> <span class="string">'用户数'</span> </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">hl_member </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">DATE_FORMAT</span>( member_regist_time, <span class="string">'%Y-%m-%d'</span> ) &gt;= <span class="string">'2015-08-20'</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"><span class="keyword">DATE_FORMAT</span>( member_regist_time, <span class="string">'%Y-%m-%d'</span> )</span><br></pre></td></tr></table></figure></p><p>这种查询能出的字段有限，那么如果要查出更多，同时group呢？<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span>(</span><br><span class="line">   <span class="keyword">select</span> <span class="keyword">min</span>(<span class="keyword">id</span>) <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'Java3y'</span> <span class="keyword">and</span> pv = <span class="number">20</span> <span class="keyword">and</span> <span class="built_in">time</span>=<span class="string">'7-25'</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">name</span>,pv,<span class="built_in">time</span>;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p>将查询后的结果作为子查询，放在外部查询的where 子句后，这样外部查询是可以select 出其他字段的。<br>还有一个常见场景那就是查询一个表某些字段重复的数据<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">* </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">hl_custom_item a </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">( a.custom_item_name, a.parent_id ) <span class="keyword">IN</span> (</span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">custom_item_name,</span><br><span class="line">parent_id </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">hl_custom_item </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">custom_item_name,</span><br><span class="line">parent_id </span><br><span class="line"><span class="keyword">HAVING</span></span><br><span class="line"><span class="keyword">COUNT</span>( * ) &gt; <span class="number">1</span> </span><br><span class="line">) </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">custom_item_name;</span><br></pre></td></tr></table></figure></p><h2 id="3、select-update"><a href="#3、select-update" class="headerlink" title="3、select update"></a>3、select update</h2><p>更新会员领取红包表的手机号为会员表的手机号<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="string">`hl_benefit_redpackage_user`</span> a</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> a.member_phone = (<span class="keyword">SELECT</span> b.member_phone_no <span class="keyword">FROM</span> <span class="string">`hl_member`</span> b <span class="keyword">where</span> a.member_id=b.member_Id)</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span> a.member_id != <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure></p><h2 id="4、-update-select"><a href="#4、-update-select" class="headerlink" title="4、 update select"></a>4、 update select</h2><p>部门表示个树结构的表，里面有几万条数据，更新时会有效率问题，原SQL如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> t_department d <span class="keyword">set</span> d.parent_id=dept_id ,d.update_time=<span class="keyword">NOW</span>()</span><br><span class="line"><span class="keyword">WHERE</span> d.dept_code <span class="keyword">in</span> (<span class="keyword">SELECT</span> t.dept_code <span class="keyword">FROM</span>  t_idm_department t</span><br><span class="line"><span class="keyword">where</span> t.parent_code=NEW.dept_code);</span><br></pre></td></tr></table></figure></p><p>优化SQL如下<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> t_department d </span><br><span class="line"><span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> t.dept_code <span class="keyword">FROM</span>  t_idm_department t</span><br><span class="line"><span class="keyword">where</span> t.parent_code=NEW.dept_code) e <span class="keyword">on</span> d.dept_code = e.dept_code </span><br><span class="line"><span class="keyword">set</span> d.parent_id=dept_id ,d.update_time=<span class="keyword">NOW</span>()</span><br></pre></td></tr></table></figure></p><h2 id="5、insert-select"><a href="#5、insert-select" class="headerlink" title="5、insert select"></a>5、insert select</h2><p>将从患者表查出的数据某些字段插入到一个新的表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> t_wx_user (<span class="keyword">id</span>, openid, gender, nick_name, headimgurl, create_time)</span><br><span class="line"><span class="keyword">SELECT</span> patient_id, openid, gender, nick_name, headimgurl, <span class="keyword">NOW</span>()</span><br><span class="line"><span class="keyword">FROM</span> t_patient;</span><br></pre></td></tr></table></figure></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/963428f2abf7" target="_blank" rel="noopener">在工作中常用到的SQL</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojureScript 零零碎碎</title>
      <link href="/2019/08/27/clojureScript%E9%9B%B6%E9%9B%B6%E7%A2%8E%E7%A2%8E/"/>
      <url>/2019/08/27/clojureScript%E9%9B%B6%E9%9B%B6%E7%A2%8E%E7%A2%8E/</url>
      
        <content type="html"><![CDATA[<p>clojure script 做前端点点滴滴零碎知识总结</p><p><a href="https://www.jianshu.com/p/976d373a2f95" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="控制台查看db信息"><a href="#控制台查看db信息" class="headerlink" title="控制台查看db信息"></a>控制台查看db信息</h2><p>在浏览器中开启自定义日志后可以在console中查看re-frame管理的db里的内容，加格式化。<br>开启方式：<a href="https://github.com/binaryage/cljs-devtools/blob/master/docs/faq.md#why-some-custom-formatters-were-not-rendered" target="_blank" rel="noopener">https://github.com/binaryage/cljs-devtools/blob/master/docs/faq.md#why-some-custom-formatters-were-not-rendered</a><br><img src="/2019/08/27/clojureScript零零碎碎/cljs/setting.png" alt="setting"><br><img src="/2019/08/27/clojureScript零零碎碎/cljs/console.png" alt="image.png"></p><p>在console里使用如下命令查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re_frame.db.app_db.state</span><br></pre></td></tr></table></figure></p><p>效果：<br><img src="/2019/08/27/clojureScript零零碎碎/cljs/db-state.png" alt="re_frame.db.app_db.state"></p><h2 id="用kee-frame和re-frame修改db的值"><a href="#用kee-frame和re-frame修改db的值" class="headerlink" title="用kee-frame和re-frame修改db的值"></a>用kee-frame和re-frame修改db的值</h2><p>目标给db的【demo】下增加一个key，值是一个ajax的返回结果<br>引入两个包<code>re-frame</code>和<code>kee-frame</code></p><ul><li>使用<code>re-frame/reg-event-db</code>修改db</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(require &apos;[kee-frame.core :as kf])</span><br><span class="line">(require &apos;[re-frame.core :as rf])</span><br><span class="line">(defn- concat-key [keys]</span><br><span class="line">  (concat [:demo] keys))</span><br><span class="line"></span><br><span class="line">(defn- data-&gt;db [db keys value]</span><br><span class="line">  (assoc-in db (concat-key keys) value))</span><br><span class="line"></span><br><span class="line">(kf/reg-event-fx</span><br><span class="line"> ::demo-detail-ajax</span><br><span class="line"> (fn [&#123;:keys [db]&#125; [id]]</span><br><span class="line">   &#123;:http-xhrio &#123;:uri (&quot;http://localhost:3000/api/demo?id=&quot; id)</span><br><span class="line">                 :method :get</span><br><span class="line">                 :timeout 10000</span><br><span class="line">                 :on-failure [:common/ajax-get-failuer]</span><br><span class="line">                 :response-format (ajax/json-response-format &#123;:keywords? true&#125;)</span><br><span class="line">                 :on-success [::set-db-demo-detail]&#125;&#125;))</span><br><span class="line"></span><br><span class="line">(rf/reg-event-db</span><br><span class="line">  ::set-db-demo-detail</span><br><span class="line">  (fn [db [_ res]]</span><br><span class="line">    (data-&gt;db db [:selected :detail] (:data res))))</span><br></pre></td></tr></table></figure><ul><li>上面的操作用kee-frame实现</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(kf/reg-chain-named</span><br><span class="line"> ::demo-detail-ajax</span><br><span class="line"> (fn [ctx [params]]</span><br><span class="line">   &#123;:http-xhrio &#123;:uri (&quot;http://localhost:3000/api/demo?id=&quot; (:id params)</span><br><span class="line">                 :method :get</span><br><span class="line">                 :timeout 10000</span><br><span class="line">                 :on-failure [:common/ajax-get-failuer]</span><br><span class="line">                 :response-format (ajax/json-response-format &#123;:keywords? true&#125;)&#125;&#125;)</span><br><span class="line"></span><br><span class="line"> :将返回结果数据存入db</span><br><span class="line"> (fn [&#123;:keys [db]&#125; [_ res]]</span><br><span class="line">   &#123;:db (data-&gt;db db [:demo-detail] (:data res))&#125;))</span><br></pre></td></tr></table></figure><p>区别：</p><ul><li>re-frame里发起请求和存储db需要两个事件来实现，而kee-frame需要一个，第二个还可以起中文的名字，便于在控制台查看。</li><li>re-frame/reg-event-db返回的是(assoc db :key value)，而kee-frame/reg-chain返回的是{:db (assoc db :key value}</li><li>kee-frame的这种返回类似于re-frame/reg-event-fx的另一种形式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(defn h                               ;; maybe choose a better name like `delete-item`</span><br><span class="line"> [coeffects event]                    ;; `coeffects` holds the current state of the world.  </span><br><span class="line"> (let [item-id (second event)         ;; extract id from event vector</span><br><span class="line">       db      (:db coeffects)]       ;; extract the current application state</span><br><span class="line">   &#123;:db  (dissoc-in db [:items item-id])&#125;)) ;; effect is &quot;change app state to ...&quot;</span><br><span class="line"></span><br><span class="line">(rf/reg-event-fx   ;; a part of the re-frame API</span><br><span class="line">  :delete-item                ;; the kind of event</span><br><span class="line">  h)</span><br></pre></td></tr></table></figure><blockquote><p>这个处理<a href="https://github.com/Day8/re-frame" target="_blank" rel="noopener">github</a>上是有的，这个h函数换可以简化一下</p></blockquote><figure class="highlight clj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> h </span><br><span class="line">  [&#123;<span class="symbol">:keys</span> [db]&#125; [_ item-id]]    <span class="comment">;; &lt;--- new: obtain db and id directly</span></span><br><span class="line">  &#123;<span class="symbol">:db</span>  (<span class="name">dissoc-in</span> db [<span class="symbol">:items</span> item-id])&#125;) <span class="comment">;; same as before</span></span><br></pre></td></tr></table></figure><h2 id="kee-frame-reg-chain处理多次有依赖请求和参数传递"><a href="#kee-frame-reg-chain处理多次有依赖请求和参数传递" class="headerlink" title="kee-frame/reg-chain处理多次有依赖请求和参数传递"></a>kee-frame/reg-chain处理多次有依赖请求和参数传递</h2><p>有个这样的需求，controller里start需要触发不止一个ajax请求数据供页面渲染，通常的做法是dispatch多个event，这在start里很好写的，因为start本来接受函数或者event的集合。<br>但是如果我们的多个ajax请求间有依赖，比如第二个ajax需要使用第一个ajax的请求结果作为参数，并且也要使用发起第一个ajax时使用的参数，怎么搞呢？看看实现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">(defn data-&gt;db [db keys values]</span><br><span class="line">  (prn &quot;将多个结果存入db&quot;)</span><br><span class="line">)</span><br><span class="line">(kf/reg-chain-named</span><br><span class="line"> ::demo-detail-ajax1</span><br><span class="line"> (fn [ctx [params]]</span><br><span class="line">   &#123;:http-xhrio &#123;:uri (&quot;http://ajax-demo1?id=&quot;</span><br><span class="line">                 :params params</span><br><span class="line">                 :method :get</span><br><span class="line">                 :timeout 10000</span><br><span class="line">                 :on-failure [:common/ajax-get-failuer]</span><br><span class="line">                 :response-format (ajax/json-response-format &#123;:keywords? true&#125;)&#125;&#125;)</span><br><span class="line"></span><br><span class="line">  ::发起第二个请求</span><br><span class="line">  (fn [ctx [params res1]]</span><br><span class="line">   &#123;:http-xhrio &#123;:uri (&quot;http://ajax-demo2&quot;</span><br><span class="line">                 :params params</span><br><span class="line">                 :method :post</span><br><span class="line">                 :timeout 10000</span><br><span class="line">                 :on-failure [:common/ajax-get-failuer]</span><br><span class="line">                 :response-format (ajax/json-response-format &#123;:keywords? true&#125;)&#125;&#125;)</span><br><span class="line"></span><br><span class="line"> :将上两个请求返回结果数据存入db</span><br><span class="line"> (fn [&#123;:keys [db]&#125; [_ res1 res2]]</span><br><span class="line">   &#123;:db (data-&gt;db db [key1 key2] [res1 res2]&#125;))</span><br></pre></td></tr></table></figure></p><p>说明：chain在reframe上扩展的这个event参数和结果是一直往下累计的，第一个参数是dispatch时的参数，往后每个函数的第二组参数依次是每一次请求的结果。</p><h2 id="antd的组件中使用组件"><a href="#antd的组件中使用组件" class="headerlink" title="antd的组件中使用组件"></a>antd的组件中使用组件</h2><p>一些组件需要的属性的参数类型是ReactNode， 比如Input的prefix属性<br>这需要 <strong>使用Reagent的<a href="http://reagent-project.github.io/docs/master/reagent.core.html#var-as-element" target="_blank" rel="noopener"><code>as-element</code></a>函数</strong></p><blockquote><p>(as-element form) Turns a vector of Hiccup syntax into a React element. Returns form unchanged if it is not a vector.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(defn page1 []</span><br><span class="line">  [:&gt; ant/Input</span><br><span class="line">   &#123;:prefix (r/as-element [:&gt; ant/Icon &#123;:type &quot;user&quot;&#125;])&#125;]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="修改页面atom元素赋值和修改"><a href="#修改页面atom元素赋值和修改" class="headerlink" title="修改页面atom元素赋值和修改"></a>修改页面atom元素赋值和修改</h2><p>初学者包括小菜鸡我是不是会碰到个问题，从db里订阅的数据渲染页面时第一次没有，第二次以后就都正常了，或者你想修改一下这个值重新提交到接口上，发现值改不了。</p><p>可能你的代码是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(defn page2 []</span><br><span class="line">  (let [ data @(re-frame/subscribe [:db-key])]</span><br><span class="line">    (fn []</span><br><span class="line">      [:div </span><br><span class="line">          [ant/input &#123;:default-value (:name @data)</span><br><span class="line">                          :type &quot;text&quot;</span><br><span class="line">                          :on-change #(swap! item assoc item-str (-&gt; % .-target .-value))&#125;]])))</span><br></pre></td></tr></table></figure></p><p>亦或是这样的:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(defn page3 []</span><br><span class="line">  (fn []</span><br><span class="line">    (let data @(re-frame/subscribe [:db-key])</span><br><span class="line">         [:div [ant/input &#123;:default-value (:name @data)</span><br><span class="line">                          :type &quot;text&quot;</span><br><span class="line">                          :on-change #(swap! item assoc item-str (-&gt; % .-target .-value))&#125;]])))</span><br></pre></td></tr></table></figure></p><p>恭喜，这两种方式完美踩雷，我们大神说因为我没有看<a href="https://github.com/reagent-project/reagent" target="_blank" rel="noopener">reagent</a><br>的Guide一二三，好吧，确实没看。</p><ul><li>现状和原因</li><li>第一种写法的现状：页面的input里第一次无法赋值</li><li>第一种写法的原因：页面加载一次，但是第一次订阅不到db里的数据，因为db里还没有数据</li><li>第二种写法的现状：页面input上有值了，但是不能修改，提示react的value不能被修改</li><li>第二种写法的原因：从db里订阅的值data订阅之后就与订阅没有关系了，说白了，也就不是atom了，所以不能修改。</li></ul><ul><li>方案：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(require &apos;[reagent.ratom :as ratom :refer [reaction]])</span><br><span class="line">(def db-value (reaction @(re-frame/subscribe [:db-key])))</span><br><span class="line">(def change-value (atom nil))</span><br><span class="line"></span><br><span class="line">(defn page4 []</span><br><span class="line">  (fn []</span><br><span class="line">    (reset! change-value @(if (nil? @db-value)</span><br><span class="line">                            (atom (deref (rf/subscribe [:db-key])))</span><br><span class="line">                            db-value))</span><br><span class="line">    [:div</span><br><span class="line">     [ant/input &#123;:default-value (:name @db-value)</span><br><span class="line">                 :type &quot;text&quot;</span><br><span class="line">                 :on-change #(swap! item assoc item-str (-&gt; % .-target .-value))&#125;]]))</span><br></pre></td></tr></table></figure></li></ul><p>当然，如你所知，写法有很多种，比如这个change-value你可以在fn里用let定义，并且比较推荐。</p><h2 id="kee-frame-reg-controller-有没有好好看文档？"><a href="#kee-frame-reg-controller-有没有好好看文档？" class="headerlink" title="kee-frame/reg-controller 有没有好好看文档？"></a>kee-frame/reg-controller 有没有好好看文档？</h2><figure class="highlight clj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> reg-controller</span><br><span class="line">  <span class="string">"Put a controller config map into the global controller registry.</span></span><br><span class="line"><span class="string">  Parameters:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  `id`: Must be unique in controllere registry. Will appear in logs.</span></span><br><span class="line"><span class="string">  `controller`: A map with the following keys:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   `:params`: A function that receives the route data and returns the part that should be sent to the `start` function. A nil</span></span><br><span class="line"><span class="string">  return means that the controller should not run for this route.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   `:start`: A function or an event vector. Called when `params` returns a non-nil value different from the previous</span></span><br><span class="line"><span class="string">  invocation. The function receives whatever non-nil value that was returned from `params`,</span></span><br><span class="line"><span class="string">  and returns a re-frame event vector. If the function does nothing but returning the vector, the surrounding function</span></span><br><span class="line"><span class="string">  can be omitted.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   `:stop`: Optional. A function or an event vector. Called when previous invocation of `params` returned non-nil and the</span></span><br><span class="line"><span class="string">  current invocation returned nil. If the function does nothing but returning the vector, the surrounding function</span></span><br><span class="line"><span class="string">  can be omitted."</span></span><br><span class="line"></span><br><span class="line">  [id controller]</span><br><span class="line">  (<span class="name"><span class="builtin-name">when-not</span></span> (<span class="name">s/valid?</span> <span class="symbol">::spec/controller</span> controller)</span><br><span class="line">    (<span class="name">e/expound</span> <span class="symbol">::spec/controller</span> controller)</span><br><span class="line">    (<span class="name"><span class="builtin-name">throw</span></span> (<span class="name">ex-info</span> <span class="string">"Invalid controller"</span> (<span class="name">s/explain-data</span> <span class="symbol">::spec/controller</span> controller))))</span><br><span class="line">  (<span class="name"><span class="builtin-name">when</span></span> (<span class="name"><span class="builtin-name">get</span></span> @state/controllers id)</span><br><span class="line">    (<span class="name">console</span> <span class="symbol">:warn</span> <span class="string">"Overwriting controller with id "</span> id))</span><br><span class="line">  (<span class="name"><span class="builtin-name">swap!</span></span> state/controllers update id merge controller))</span><br></pre></td></tr></table></figure><ul><li>kee-frame引入controller来优化路由路由管理，监听路由变化，所以在路由发生<strong>变化</strong>时程序里的所有controler都会竖起耳朵，当然最好是只有这个变化和自己有关，才去响应。这就要在params里加handler的判断。</li><li>:params 参数是一个函数包含路由信息，尤其是获取handler里的路由地址，当然包含参数。如果返回nil的话，后面start就不会执行，其他情况就会触发<code>:start</code>。</li><li>:start 一个函数或者一组事件的集合，函数里可以处理参数等，如果是一堆event的话，可以在函数里发起dispatch或者直接返回<code>[:event1 ::event2]</code>等等。<br>来个基础的例子：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(kf/reg-controller :bind-user-page</span><br><span class="line">                  &#123;:params (fn [params]</span><br><span class="line">                             (when (= :bind-user-page (get-in params [:data :name])) true))</span><br><span class="line">                   :start (fn []</span><br><span class="line">                            (prn &quot;?????????===&quot;)</span><br><span class="line">                            (re-frame/dispatch [:choose-hospital]))&#125;)</span><br></pre></td></tr></table></figure><p>携带query参数的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">;;路由带参跳转不同页面</span><br><span class="line">(kf/reg-controller</span><br><span class="line"> :路由带参跳转不同页面</span><br><span class="line"> &#123;:params (fn [route-data]</span><br><span class="line">            (when (-&gt; route-data :data :name (= :weixin-redirect))</span><br><span class="line">              (:query-string route-data)))</span><br><span class="line">  :start (fn [_ params]</span><br><span class="line">           (re-frame/dispatch [:weixin-redirect</span><br><span class="line">                               (reduce-kv (fn [m k v]</span><br><span class="line">                                            (assoc m (keyword k) v))</span><br><span class="line">                                          &#123;&#125;</span><br><span class="line">                                          (into &#123;&#125; (map #(clojure.string/split % #&quot;=&quot;) (clojure.string/split params #&quot;&amp;&quot;))))]))&#125;)</span><br></pre></td></tr></table></figure></p><p>如果想要每次路由变化，都触发某个controller的start，只需要在params里返回<code>identity</code>即可。</p><h2 id="clojurescript-和-javascript交互"><a href="#clojurescript-和-javascript交互" class="headerlink" title="clojurescript 和 javascript交互"></a>clojurescript 和 javascript交互</h2><p>有时候我们的clojurescript需要和javascript交互。<br>比如用js打个log，比如用js获取window的location数据等，举个列子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(.log js/console &quot;打个log&quot;)</span><br><span class="line">(.-location js/window)</span><br><span class="line">(.-search (.-location js/window))</span><br></pre></td></tr></table></figure></p><p>cljs还提供了cljs和js互转的函数<code>clj-&gt;js</code>和<code>js-&gt;clj</code><br>看看例子：</p><figure class="highlight clj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">def</span></span> js-object (<span class="name">clj-&gt;js</span>  <span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>] <span class="symbol">:c</span> #&#123;<span class="string">"d"</span> <span class="literal">true</span> <span class="symbol">:e</span> <span class="literal">nil</span>&#125;))</span><br></pre></td></tr></table></figure><p>输出结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;a&quot;: 1,</span><br><span class="line">  &quot;b&quot;: [1, 2, 3],</span><br><span class="line">  &quot;c&quot;: [null, &quot;d&quot;, &quot;e&quot;, true]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>也可以简化用<code>#js</code><br><figure class="highlight clj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">def</span></span> js-object #js &#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> #js [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>] <span class="symbol">:c</span> #js [<span class="string">"d"</span> <span class="literal">true</span> <span class="symbol">:e</span> <span class="literal">nil</span>]&#125;)</span><br><span class="line"># 输出</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"c"</span>: &#123;</span><br><span class="line">    <span class="string">"e"</span>: null,</span><br><span class="line">    <span class="string">"d"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"b"</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> ],</span><br><span class="line">  <span class="string">"a"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>js有时候需要转成cljs，用<code>js-&gt;clj</code>实现,比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(require &apos;[reagent.core :as r])</span><br><span class="line">(defn get-form</span><br><span class="line">  &quot;返回又From.create创建的 `form` 这个函数只能在form内部调用, 因为使用了reaget/current-component.&quot;</span><br><span class="line">  []</span><br><span class="line">  (-&gt; (r/current-component)</span><br><span class="line">      (r/props)</span><br><span class="line">      (js-&gt;clj :keywordize-keys true)</span><br><span class="line">      (:form)))</span><br></pre></td></tr></table></figure></p><p>大神在<a href="https://blog.3vyd.com/blog/posts-output/2019-07-20-4clojure/" target="_blank" rel="noopener">4clojure</a>博客上也有js操作DOM和引入highcharts的使用的例子。<br>更多交互的操作参考<a href="https://www.spacjer.com/blog/2014/09/12/clojurescript-javascript-interop/" target="_blank" rel="noopener">ClojureScript: JavaScript Interop</a> 和<br><a href="https://lwhorton.github.io/2018/10/20/clojurescript-interop-with-javascript.html" target="_blank" rel="noopener">Clojurescript interop with javascript</a></p><h2 id="用figwheel编译工程，启动服务"><a href="#用figwheel编译工程，启动服务" class="headerlink" title="用figwheel编译工程，启动服务"></a>用figwheel编译工程，启动服务</h2><p>三步启动 figwheel：<a href="https://github.com/bhauman/lein-figwheel/wiki/Using-the-Figwheel-REPL-within-NRepl" target="_blank" rel="noopener">Using the Figwheel REPL within nREPL</a><br>在emacs里启动cider-jack-in-cljs<br>选择figwheel<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(use &apos;figwheel-sidecar.repl-api)</span><br><span class="line">(start-figwheel!)</span><br><span class="line">(cljs-repl)</span><br></pre></td></tr></table></figure></p><p>在alk项目里的示例：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">user&gt;</span><span class="bash"> (use <span class="string">'figwheel-sidecar.repl-api)</span></span></span><br><span class="line">nil</span><br><span class="line"><span class="meta">user&gt;</span><span class="bash"> (start-figwheel!)</span></span><br><span class="line">Figwheel: Starting server at http://0.0.0.0:3449</span><br><span class="line">Figwheel: Watching build - patient-app</span><br><span class="line">Compiling build :patient-app to "target/cljsbuild/public/patientjs/app.js" from ["src/cljs/patient" "src/cljc" "env/dev/cljs/patient"]...</span><br><span class="line">Successfully compiled build :patient-app to "target/cljsbuild/public/patientjs/app.js" in 5.142 seconds.</span><br><span class="line">Figwheel: Starting CSS Watcher for paths  ["resources/public/css"]</span><br><span class="line">Figwheel: Starting nREPL server on port: 7002</span><br><span class="line">nil</span><br><span class="line"><span class="meta">user&gt;</span><span class="bash"> (cljs-repl)</span></span><br><span class="line">Launching ClojureScript REPL for build: patient-app</span><br><span class="line">Figwheel Controls:</span><br><span class="line">          (stop-autobuild)                ;; stops Figwheel autobuilder</span><br><span class="line">          (start-autobuild id ...)        ;; starts autobuilder focused on optional ids</span><br><span class="line">          (switch-to-build id ...)        ;; switches autobuilder to different build</span><br><span class="line">          (reset-autobuild)               ;; stops, cleans, and starts autobuilder</span><br><span class="line">          (reload-config)                 ;; reloads build config and resets autobuild</span><br><span class="line">          (build-once id ...)             ;; builds source one time</span><br><span class="line">          (clean-builds id ..)            ;; deletes compiled cljs target files</span><br><span class="line">          (print-config id ...)           ;; prints out build configurations</span><br><span class="line">          (fig-status)                    ;; displays current state of system</span><br><span class="line">          (figwheel.client/set-autoload false)    ;; will turn autoloading off</span><br><span class="line">          (figwheel.client/set-repl-pprint false) ;; will turn pretty printing off</span><br><span class="line">  Switch REPL build focus:</span><br><span class="line">          :cljs/quit                      ;; allows you to switch REPL to another build</span><br><span class="line">    Docs: (doc function-name-here)</span><br><span class="line">    Exit: :cljs/quit</span><br><span class="line"> Results: Stored in vars *1, *2, *3, *e holds last exception object</span><br><span class="line">Prompt will show when Figwheel connects to your application</span><br><span class="line">To quit, type: :cljs/quit</span><br><span class="line">nil</span><br><span class="line"> cljs.user&gt; (fig-status) </span><br><span class="line">cljs.user&gt; (fig-status) </span><br><span class="line">Figwheel System Status</span><br><span class="line">----------------------------------------------------</span><br><span class="line">Watching builds: [patient-app]</span><br><span class="line">Client Connections</span><br><span class="line"> patient-app: 1 connection</span><br><span class="line">----------------------------------------------------</span><br><span class="line">nil</span><br><span class="line">cljs.user&gt; (build-once doctor-app)</span><br><span class="line">Figwheel: Building once - doctor-app</span><br><span class="line">Compiling build :doctor-app to "target/cljsbuild/public/doctorjs/app.js" from ["src/cljs/doctor" "src/cljc" "env/dev/cljs/doctor"]...</span><br><span class="line">Successfully compiled build :doctor-app to "target/cljsbuild/public/doctorjs/app.js" in 14.038 seconds.</span><br><span class="line">nil</span><br><span class="line">cljs.user&gt; (fig-status) </span><br><span class="line">Figwheel System Status</span><br><span class="line">----------------------------------------------------</span><br><span class="line">Watching builds: [patient-app]</span><br><span class="line">Client Connections</span><br><span class="line"> patient-app: 0 connections</span><br><span class="line"> doctor-app: 1 connection</span><br><span class="line">----------------------------------------------------</span><br><span class="line">nil</span><br><span class="line">cljs.user&gt;</span><br></pre></td></tr></table></figure></p><p>用浏览器链接后可以在repl里查看状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(fig-status)</span><br></pre></td></tr></table></figure></p><p>还有其他操作，控制台有提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">user&gt; (cljs-repl)</span><br><span class="line">Launching ClojureScript REPL for build: dev</span><br><span class="line">Figwheel Controls:</span><br><span class="line">          (stop-autobuild)                ;; stops Figwheel autobuilder</span><br><span class="line">          (start-autobuild [id ...])      ;; starts autobuilder focused on optional ids</span><br><span class="line">          (switch-to-build id ...)        ;; switches autobuilder to different build</span><br><span class="line">          (reset-autobuild)               ;; stops, cleans, and starts autobuilder</span><br><span class="line">          (reload-config)                 ;; reloads build config and resets autobuild</span><br><span class="line">          (build-once [id ...])           ;; builds source one time</span><br><span class="line">          (clean-builds [id ..])          ;; deletes compiled cljs target files</span><br><span class="line">          (print-config [id ...])         ;; prints out build configurations</span><br><span class="line">          (fig-status)                    ;; displays current state of system</span><br><span class="line">  Switch REPL build focus:</span><br><span class="line">          :cljs/quit                      ;; allows you to switch REPL to another build</span><br><span class="line">    Docs: (doc function-name-here)</span><br><span class="line">    Exit: Control+C or :cljs/quit</span><br><span class="line"> Results: Stored in vars *1, *2, *3, *e holds last exception object</span><br><span class="line">Prompt will show when Figwheel connects to your application</span><br><span class="line">To quit, type: :cljs/quit</span><br><span class="line">cljs.user&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
            <tag> cljs </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jenkins + statistics 实现代码统计</title>
      <link href="/2019/08/26/jenkins%20+%20statistics%20%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1/"/>
      <url>/2019/08/26/jenkins%20+%20statistics%20%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>git 的statistics统计分页，待页面</p><p><a href="https://www.jianshu.com/p/69cb7d0c273e" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a><br>一个不错的代码统计插件<a href="http://gitstats.sourceforge.net/" target="_blank" rel="noopener">statistics</a></p><h3 id="安装statistics"><a href="#安装statistics" class="headerlink" title="安装statistics"></a>安装statistics</h3><p>需要先在收集代码的服务器上搭建statistics，具体步骤上面链接有。<br>我是centos系统，因此只需一句命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gitstats</span><br></pre></td></tr></table></figure></p><h3 id="jenkins配置"><a href="#jenkins配置" class="headerlink" title="jenkins配置"></a>jenkins配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#执行脚本</span><br><span class="line">echo &quot;git stats start&quot;</span><br><span class="line">/opt/auto-deploy-scripts/code_statistics.sh questionnaire master</span><br><span class="line">echo &quot;git stats end&quot;</span><br><span class="line">echo &quot;review address:http://10.138.46.76:8888/questionnaire/&quot;</span><br></pre></td></tr></table></figure><h3 id="收集脚本code-statistics-sh"><a href="#收集脚本code-statistics-sh" class="headerlink" title="收集脚本code_statistics.sh"></a>收集脚本code_statistics.sh</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@1169CKT questionnaire]# vi /opt/auto-deploy-scripts/code_statistics.sh</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">name=$1</span><br><span class="line">branch=$2</span><br><span class="line"></span><br><span class="line">if [ name == &quot;&quot;  ] ;then</span><br><span class="line"></span><br><span class="line">    echo &quot;project name is null&quot;</span><br><span class="line">    exit 5</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line"></span><br><span class="line">    if [ branch == &quot;&quot;  ] ;then</span><br><span class="line"></span><br><span class="line">    branch = master</span><br><span class="line"></span><br><span class="line">    fi</span><br><span class="line">    echo &quot;Deploy $&#123;branch&#125; of $&#123;name&#125; project !&quot;</span><br><span class="line"></span><br><span class="line">    cd /opt/chuangke/gitstats/projects/$&#123;name&#125;/</span><br><span class="line"></span><br><span class="line">    git pull</span><br><span class="line">    git checkout $&#123;branch&#125;</span><br><span class="line"></span><br><span class="line">    cd /opt/chuangke/gitstats/gitstats/</span><br><span class="line"></span><br><span class="line">    rm -rf /opt/chuangke/gitstats/result/$&#123;name&#125;/*</span><br><span class="line"></span><br><span class="line">    ./gitstats /opt/chuangke/gitstats/projects/$&#123;name&#125; /opt/chuangke/gitstats/result/$&#123;name&#125;/</span><br><span class="line"></span><br><span class="line">   echo &quot;Deploy success!&quot;</span><br><span class="line"></span><br><span class="line">fi</span><br></pre></td></tr></table></figure><blockquote><p>关于脚本的一点解释</p><ul><li>两个参数，第一个是项目名，第二个是分支名</li><li><code>/opt/chuangke/gitstats/projects/${name}/</code>目录是$name项目从git库pull下来的目录，也就是要统计的目标项目。</li><li><code>/opt/chuangke/gitstats/result/${name}/</code>目录是$name项目统计完以后生成的静态文件目录，也是nginx要访问的目录。</li><li>gitstats项目的目录下执行<code>gitstats</code>脚本的第一个参数是要统计的项目，第二个参数是统计文件存放的目录</li></ul></blockquote><h3 id="nginx-配置"><a href="#nginx-配置" class="headerlink" title="nginx 配置"></a>nginx 配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       8888;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        #location / &#123;</span><br><span class="line">        #    root   html;</span><br><span class="line">        #    index  index.html index.htm;</span><br><span class="line">        #&#125;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line"></span><br><span class="line">        client_max_body_size    100m;</span><br><span class="line">    </span><br><span class="line">        location /questionnaire &#123;</span><br><span class="line">            alias  /opt/chuangke/gitstats/result/questionnaire;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /portal &#123;</span><br><span class="line">            alias  /opt/chuangke/gitstats/result/Portal;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /portalmanage &#123;</span><br><span class="line">            alias  /opt/chuangke/gitstats/result/portalmanage;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>来个截图<br><img src="https://upload-images.jianshu.io/upload_images/4109786-14819a9f2bc8b9eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-3e48c0172dc2e7d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-14d0df1a8c273c03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>配置的nginx要能在浏览器访问，需要保证centos的防火墙配置哟。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">开启端口</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]# firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line"></span><br><span class="line">查询端口号80 是否开启：</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]# firewall-cmd --query-port=80/tcp</span><br><span class="line"></span><br><span class="line">重启防火墙：</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]# firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">查询有哪些端口是开启的:</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]# firewall-cmd --list-port</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Springboot 之 利用logback发送异常警告邮件</title>
      <link href="/2019/08/24/Springboot%20%E4%B9%8B%20%E5%88%A9%E7%94%A8logback%E5%8F%91%E9%80%81%E5%BC%82%E5%B8%B8%E8%AD%A6%E5%91%8A%E9%82%AE%E4%BB%B6/"/>
      <url>/2019/08/24/Springboot%20%E4%B9%8B%20%E5%88%A9%E7%94%A8logback%E5%8F%91%E9%80%81%E5%BC%82%E5%B8%B8%E8%AD%A6%E5%91%8A%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>利用logback自动将异常邮件发送到运维邮箱里。</p><p><a href="https://www.jianshu.com/p/c3858b788378" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>logback作为默认的日志实现在springboot项目里很多，尤其是有了lombok。</p><p>log打到配置文件里，并且分sql、info、error这些都太easy，随后我会附上我的配置。</p><p>那么怎么用这东西将异常邮件发送给运维人员呢？</p><h4 id="properties配置"><a href="#properties配置" class="headerlink" title="properties配置"></a>properties配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">logback.logdir=/opt/chuangke/log/pre/api</span><br><span class="line">logback.appname=mobileoffice</span><br><span class="line"></span><br><span class="line">spring.mail.host=smtp.exmail.qq.com</span><br><span class="line">spring.mail.username=mailtest@3vyd.com</span><br><span class="line">spring.mail.password=xxx</span><br><span class="line">spring.mail.default-encoding=UTF-8</span><br><span class="line">spring.mail.error.subject=[ERROR] in project name</span><br><span class="line">spring.mail.error.to=marvin.ma@3vyd.com,303764416@qq.com</span><br></pre></td></tr></table></figure><p>多人时，邮箱之间用英文逗号分隔</p><h4 id="logback文件"><a href="#logback文件" class="headerlink" title="logback文件"></a>logback文件</h4><p>跟发送邮件相关的时这几句<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!-- 邮件配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"smtpHost"</span> <span class="attr">source</span>=<span class="string">"spring.mail.host"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">source</span>=<span class="string">"spring.mail.username"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">source</span>=<span class="string">"spring.mail.password"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"mailSubject"</span> <span class="attr">source</span>=<span class="string">"spring.mail.error.subject"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"mailTo"</span> <span class="attr">source</span>=<span class="string">"spring.mail.error.to"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"MAIL"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.net.SMTPAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">smtpHost</span>&gt;</span>$&#123;smtpHost&#125;<span class="tag">&lt;/<span class="name">smtpHost</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">smtpPort</span>&gt;</span>25<span class="tag">&lt;/<span class="name">smtpPort</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>$&#123;username&#125;<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>$&#123;password&#125;<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SSL</span>&gt;</span>false<span class="tag">&lt;/<span class="name">SSL</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">asynchronousSending</span>&gt;</span>true<span class="tag">&lt;/<span class="name">asynchronousSending</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">to</span>&gt;</span>$&#123;mailTo&#125;<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">from</span>&gt;</span>$&#123;username&#125;<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">subject</span>&gt;</span>$&#123;mailSubject&#125;: %logger&#123;0&#125; <span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">charsetEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charsetEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cyclicBufferTracker</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.spi.CyclicBufferTracker"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 每个电子邮件只发送一个日志条目 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bufferSize</span>&gt;</span>1<span class="tag">&lt;/<span class="name">bufferSize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">cyclicBufferTracker</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.html.HTMLLayout"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.hczt"</span> <span class="attr">level</span>=<span class="string">"INFO"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileInfoLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileErrorLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"MAIL"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在哪个级别或者包上需要将异常发送邮件，就appender上MAIL就可以了。</p><h4 id="完整的logback-spring-xml文件"><a href="#完整的logback-spring-xml文件" class="headerlink" title="完整的logback-spring.xml文件"></a>完整的logback-spring.xml文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- application.properties 传递参数，不能使用logback自带的&lt;property&gt;标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"appname"</span> <span class="attr">source</span>=<span class="string">"logback.appname"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"logdir"</span> <span class="attr">source</span>=<span class="string">"logback.logdir"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>$&#123;appname&#125;<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 邮件配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"smtpHost"</span> <span class="attr">source</span>=<span class="string">"spring.mail.host"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">source</span>=<span class="string">"spring.mail.username"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">source</span>=<span class="string">"spring.mail.password"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"mailSubject"</span> <span class="attr">source</span>=<span class="string">"spring.mail.error.subject"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">springProperty</span> <span class="attr">scope</span>=<span class="string">"context"</span> <span class="attr">name</span>=<span class="string">"mailTo"</span> <span class="attr">source</span>=<span class="string">"spring.mail.error.to"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"MAIL"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.net.SMTPAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">smtpHost</span>&gt;</span>$&#123;smtpHost&#125;<span class="tag">&lt;/<span class="name">smtpHost</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">smtpPort</span>&gt;</span>25<span class="tag">&lt;/<span class="name">smtpPort</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">username</span>&gt;</span>$&#123;username&#125;<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">password</span>&gt;</span>$&#123;password&#125;<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SSL</span>&gt;</span>false<span class="tag">&lt;/<span class="name">SSL</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">asynchronousSending</span>&gt;</span>true<span class="tag">&lt;/<span class="name">asynchronousSending</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">to</span>&gt;</span>$&#123;mailTo&#125;<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">from</span>&gt;</span>$&#123;username&#125;<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">subject</span>&gt;</span>$&#123;mailSubject&#125;: %logger&#123;0&#125; <span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">charsetEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charsetEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cyclicBufferTracker</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.spi.CyclicBufferTracker"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 每个电子邮件只发送一个日志条目 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bufferSize</span>&gt;</span>1<span class="tag">&lt;/<span class="name">bufferSize</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">cyclicBufferTracker</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.html.HTMLLayout"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境 全部输出到控制台--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"dev"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 输出到控制台 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"STDOUT"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.PatternLayout"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定最基础的日志输出级别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"INFO"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"STDOUT"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 测试环境+准生产环境+生产环境 输出到文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">"test,pre,prod"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 输出到文件-info级别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"fileInfoLog"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 如果只是想要Info级别的日志，只是过滤info还是会输出Error日志，因为Error的级别高，使用filter，可以避免输出Error日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.LevelFilter"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--过滤 Error--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span>&gt;</span>ERROR<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--匹配到就禁止--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">onMatch</span>&gt;</span>DENY<span class="tag">&lt;/<span class="name">onMatch</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--没有匹配到就允许--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">onMismatch</span>&gt;</span>ACCEPT<span class="tag">&lt;/<span class="name">onMismatch</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 日志名称，如果没有File属性，那么只会使用FileNamePattern的文件路径规则</span></span><br><span class="line"><span class="comment"> 如果同时有&lt;File&gt;和&lt;FileNamePattern&gt;，那么当天日志是&lt;File&gt;，明天会自动把今天的日志改名为今天的日期</span></span><br><span class="line"><span class="comment"> 即，&lt;File&gt;的日志都是当天的</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logdir&#125;/info.$&#123;appname&#125;.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 滚动策略，按照时间滚动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 文件路径，定义了日志的切分方式</span></span><br><span class="line"><span class="comment"> 把每一天的日志归档到一个文件中，以防止日志填满整个磁盘空间</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FileNamePattern</span>&gt;</span>$&#123;logdir&#125;/info.$&#123;appname&#125;.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">FileNamePattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 日志输出编码格式化 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %-5level %logger Line:%-3L [%X&#123;requestId&#125;] - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 输出到文件-error --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"fileErrorLog"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.filter.ThresholdFilter"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">level</span>&gt;</span>Error<span class="tag">&lt;/<span class="name">level</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志名称，如果没有File 属性，那么只会使用FileNamePattern的文件路径规则</span></span><br><span class="line"><span class="comment">        如果同时有&lt;File&gt;和&lt;FileNamePattern&gt;，那么当天日志是&lt;File&gt;，明天会自动把今天的日志改名为今天的日期。</span></span><br><span class="line"><span class="comment">        即，&lt;File&gt; 的日志都是当天的。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logdir&#125;/error.$&#123;appname&#125;.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--滚动策略，按照时间滚动 TimeBasedRollingPolicy--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">FileNamePattern</span>&gt;</span>$&#123;logdir&#125;/error.$&#123;appname&#125;.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">FileNamePattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志输出编码格式化--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %-5level %logger Line:%-3L [%X&#123;requestId&#125;] - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"sqlLog"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">File</span>&gt;</span>$&#123;logdir&#125;/sql.$&#123;appname&#125;.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FileNamePattern</span>&gt;</span>$&#123;logdir&#125;/sql.$&#123;appname&#125;.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">FileNamePattern</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--只保留最近7天的日志--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>7<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--日志输出编码格式化--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; %-5level %logger Line:%-3L [%X&#123;requestId&#125;] - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.hczt"</span> <span class="attr">level</span>=<span class="string">"INFO"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileInfoLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileErrorLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"MAIL"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.haier"</span> <span class="attr">level</span>=<span class="string">"INFO"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileInfoLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileErrorLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"MAIL"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org"</span> <span class="attr">level</span>=<span class="string">"ERROR"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileErrorLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"MAIL"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"p6spy"</span> <span class="attr">level</span>=<span class="string">"INFO"</span> <span class="attr">additivity</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"sqlLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"ERROR"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"fileErrorLog"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"MAIL"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>附上截图<br><img src="https://upload-images.jianshu.io/upload_images/4109786-bb10c11512892320.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="error"></p><p>完美！！</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Springboot 之 配置文件属性加密</title>
      <link href="/2019/08/22/Springboot%20%E4%B9%8B%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E5%8A%A0%E5%AF%86/"/>
      <url>/2019/08/22/Springboot%20%E4%B9%8B%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>使用Jasypt对springboot项目的配置属性加密。<br><a href="https://www.jianshu.com/p/a3fb025d114f" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>写这篇的目的不是为了创新，而是备忘，最近学习clojure，java基本上已经放下了，但是曾今用过的东西如果不记录一下，以后用起来估计连查什么关键字都不知道了，因此在主页上做个笔记。</p><p>原来我们写的springboot的配置文件大概是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql://localhost:3306/test?useUnicode=true&amp;useSSL=false</span><br><span class="line">    username: root</span><br><span class="line">    password: 123456</span><br></pre></td></tr></table></figure></p><p>怎么看也是赤裸裸的，大概你也想过要是能加密就好了，如果只是想想的话，肯定不会自己加密，这里就介绍个非常方便易用的加密工具jasypt。</p><h3 id="常规使用"><a href="#常规使用" class="headerlink" title="常规使用"></a>常规使用</h3><p>在springboot中引入依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;com.github.ulisesbocchio&lt;/groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;jasypt-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">        &lt;version&gt;2.1.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>修改后的配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql://localhost:3306/test?useUnicode=true&amp;zeroDateTimeBehavior=convertToNull&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8&amp;tinyInt1isBit=false</span><br><span class="line">    # 对应用户名 root ，密码 123456</span><br><span class="line">    username: ENC[KHRM9dKY8KykzzYbt8rRZQ==]</span><br><span class="line">    password: ENC[RWmQMxlcukotJAb36PrKSA==]</span><br><span class="line"></span><br><span class="line">jasypt:</span><br><span class="line">  encryptor:</span><br><span class="line">    # 任意的随机字符串均可</span><br><span class="line">    password: SBPstLlrFzXW01Okb62R95qvpj4J83Dn</span><br><span class="line">    property:</span><br><span class="line">      # 自定义属性规则，默认前缀是“ENC(”，后缀为“)”</span><br><span class="line">      prefix: &quot;ENC[&quot;</span><br><span class="line">      suffix: &quot;]&quot;</span><br></pre></td></tr></table></figure></p><p>这里只加密了用户名和密码，其实所有属性，报过jdbc的url也是可以用同样的方式加密的。<br>留意到上面这段配置的用户名和密码是 ENC[xxx] 这种格式的，其中 ENC[] 是自定义配置的，这也是 Jasypt 能正常识别待解密数据的规则，那其中的加密串又是从哪来的呢？<br>当然是运算出来的。最简单的配置，开发者只需要再补充完 jasypt.encryptor.password=xxx 属性即可（同上，还支持使用 DER、PEM 这种证书的 private/public keys 加解密方式），具体的生成代码在下方：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEncryptableProperties</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JasyptSpringBootApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ConfigurableApplicationContext context =</span><br><span class="line">                SpringApplication.run(JasyptSpringBootApplication.class, args);</span><br><span class="line">        JasyptSpringBootApplication application = context.getBean(JasyptSpringBootApplication.class);</span><br><span class="line">        <span class="comment">// 这里可以将明文(用户名、密码)转换成相应密文</span></span><br><span class="line">        application.jasypt(<span class="string">"root"</span>);</span><br><span class="line">        application.jasypt(<span class="string">"123456"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 不过程序最后还是通过明文信息进行数据库连接</span></span><br><span class="line">        HikariDataSource hikariDataSource = (HikariDataSource) context.getBean(DataSource.class);</span><br><span class="line">        log.info(<span class="string">"DB username: &#123;&#125; , password: &#123;&#125;"</span>, hikariDataSource.getUsername(), hikariDataSource.getUsername());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> StringEncryptor stringEncryptor;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jasypt</span><span class="params">(String text)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 即使是相同明文，但这里每次生成的都是不同的密文</span></span><br><span class="line">        String encryptedText = stringEncryptor.encrypt(text.trim());</span><br><span class="line">        String decryptedText = stringEncryptor.decrypt(encryptedText);</span><br><span class="line">        log.info(<span class="string">"ORIGINAL: &#123;&#125; ; ENCRYPTED: &#123;&#125; ; DECRYPTED: &#123;&#125;"</span>, text, encryptedText, decryptedText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在开发环境要切换jdbc，或者看看密码到底是啥，为啥报jdbc链接错误时，可以用这个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.jasypt.encryption.StringEncryptor;</span><br><span class="line">import org.junit.Test;</span><br><span class="line">import org.junit.runner.RunWith;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line">import org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line">import javax.annotation.Resource;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@RunWith(SpringRunner.class)</span><br><span class="line">@SpringBootTest(classes = MobileOfficeApplication.class)</span><br><span class="line">@Slf4j</span><br><span class="line">public class MobileOfficeApplicationTests &#123;</span><br><span class="line">//@Test</span><br><span class="line">public void te()&#123;</span><br><span class="line">System.out.println(userService.encodePwd());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Autowired</span><br><span class="line">private StringEncryptor stringEncryptor;</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line">public void contextLoads() &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line">public void testEncrypt() &#123;</span><br><span class="line">System.out.println(&quot;=====================================&quot;);</span><br><span class="line">System.out.println(&quot;key1:&quot; + stringEncryptor.encrypt(&quot;jdbc:p6spy:mysql://127.0.0.1:3306/chuangke?characterEncoding=utf-8&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Hongkong&amp;autoReconnect=true\n&quot;));</span><br><span class="line">System.out.println(&quot;key2:&quot; + stringEncryptor.encrypt(&quot;root&quot;));</span><br><span class="line">System.out.println(&quot;key3:&quot; + stringEncryptor.encrypt(&quot;root&quot;));</span><br><span class="line">System.out.println(&quot;=====================================&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><p>上面的例子是将password设置在与密文一起的配置文件中，这样方便是方便，但是有密码，有密文，知道加密算法，谁也可以解密呀（安全是相对的，其实这个已经很不错了），那有么有更安全的方式呢？<br>当然有！！！！<br>有两种办法:</p><ul><li><p>部署时设置password<br>为了防止salt(盐)泄露,反解出密码.可以在项目部署的时候使用命令传入salt(盐)值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -Djasypt.encryptor.password=G0CvDz7oJn6 xxx.jar</span><br></pre></td></tr></table></figure></li><li><p>将password配置到服务器的环境变量里</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 打开/etc/profile文件</span><br><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">#文件末尾插入</span><br><span class="line">export JASYPT_PASSWORD = G0CvDz7oJn6</span><br><span class="line"></span><br><span class="line">#编译 </span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">#运行 </span><br><span class="line">java -jar -Djasypt.encryptor.password=$&#123;JASYPT_PASSWORD&#125; xxx.jar</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.jianshu.com/p/cc97187e9a8f" target="_blank" rel="noopener">还将密码明文写在配置文件？试试 Jasypt Spring Boot</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>修改gitlab，gitosis-admin的默认端口22后</title>
      <link href="/2019/08/19/%E4%BF%AE%E6%94%B9gitlab%EF%BC%8Cgitosis-admin%E7%9A%84%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A322%E5%90%8E/"/>
      <url>/2019/08/19/%E4%BF%AE%E6%94%B9gitlab%EF%BC%8Cgitosis-admin%E7%9A%84%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A322%E5%90%8E/</url>
      
        <content type="html"><![CDATA[<p>本地配置远端server的端口供ssh使用</p><p><a href="https://www.jianshu.com/p/e8b4e57cfb51" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>以<a href="https://old.calculate-linux.org/main/en/gitosis" target="_blank" rel="noopener">gitosis-admin</a>作为git代码库管理工具后，修改了默认的22端口，此时ssh的连接自然拿不到代码，怎么办呢？</p><p>在本地.ssh的目录下创建一个<code>config</code>文件，没有扩展名哦。</p><p>内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">host 106.14.1.1</span><br><span class="line">hostname 106.14.1.1</span><br><span class="line">port 2093</span><br><span class="line"></span><br><span class="line">host git.server.com</span><br><span class="line">hostname git.server.com</span><br><span class="line">port 2093</span><br></pre></td></tr></table></figure></p><p>这就是连接到hostname的2093端口的意思。</p><p>添加了本配置就可以访问git服务器了。</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用serveo一秒钟实现内网穿透</title>
      <link href="/2019/08/09/%E4%BD%BF%E7%94%A8serveo%E4%B8%80%E7%A7%92%E9%92%9F%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/2019/08/09/%E4%BD%BF%E7%94%A8serveo%E4%B8%80%E7%A7%92%E9%92%9F%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<p>一点不夸张，1秒钟！！！！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -R 80:localhost:3000 serveo.net</span><br></pre></td></tr></table></figure></p><p><a href="https://www.jianshu.com/p/57485240708c" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a><br>在此之前，我一直用ngrok，自己也总结过<a href="https://www.jianshu.com/p/4f008e2b7622" target="_blank" rel="noopener">使用ngrok一分钟实现内网穿透</a>,简单的将本地服务映射成公网访问的地址，反正我是用不了1分钟。</p><p>今天偶然看到一篇文章<a href="https://www.jianshu.com/p/33d0a8f77961" target="_blank" rel="noopener">完败ngrok?一键开启内网穿透神器serveo</a>，这次又颠覆了我的认知，于是决定花1秒钟体验下。</p><p>真的是1秒钟哦，看看命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Last login: Fri Aug  9 08:28:43 on console</span><br><span class="line">➜  ~ ssh -R 80:localhost:3000 serveo.net</span><br><span class="line">The authenticity of host &apos;serveo.net (159.89.214.31)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:07jcXlJ4SkBnyTmaVnmTpXuBiRx2+Q2adxbttO9gt0M.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &apos;serveo.net,159.89.214.31&apos; (RSA) to the list of known hosts.</span><br><span class="line">Forwarding HTTP traffic from https://vilicus.serveo.net</span><br><span class="line">Press g to start a GUI session and ctrl-c to quit.</span><br></pre></td></tr></table></figure></p><p>访问试试：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-87c525255aa1ea59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="serveo"></p><p>果真六六六~~~~</p><p>以后就用这个了。</p><p>其他高阶使用用的时候上<a href="https://serveo.net/" target="_blank" rel="noopener">官网</a>查询，如果我用到了我再完善这篇。</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> server </tag>
            
            <tag> 网络 </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojure web(luminus)接口开发</title>
      <link href="/2019/07/31/clojure%20web(luminus)%E6%8E%A5%E5%8F%A3%E5%BC%80%E5%8F%91/"/>
      <url>/2019/07/31/clojure%20web(luminus)%E6%8E%A5%E5%8F%A3%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>clojure中调用java,解决jar包依赖冲突</p><p><a href="https://www.jianshu.com/p/996e20539aac" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="项目框架"><a href="#项目框架" class="headerlink" title="项目框架"></a>项目框架</h2><p>本项目使用<a href="http://www.luminusweb.net/" target="_blank" rel="noopener">luminus</a>做模板，参考<a href="https://github.com/luminus-framework/luminus-template" target="_blank" rel="noopener">luminus-template</a>,执行下面的命令init工程:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lein new luminus alk-wxapi +mysql +service</span><br></pre></td></tr></table></figure></p><h3 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h3><ul><li><a href="http://www.luminusweb.net/docs" target="_blank" rel="noopener">后台基础框架luminus</a></li><li><a href="https://www.hugsql.org/" target="_blank" rel="noopener">后台sql支持HugSQL</a></li><li><a href="https://github.com/ring-clojure/ring" target="_blank" rel="noopener">后台web框架</a></li><li><a href="https://github.com/metosin/reitit" target="_blank" rel="noopener">前后端路由框架</a></li><li><a href="https://github.com/Day8/re-frame" target="_blank" rel="noopener">前端状态管理框架</a></li><li><a href="https://github.com/priornix/antizer" target="_blank" rel="noopener">前端PC版UI框架-antizer</a></li><li><a href="https://clojuredocs.org/" target="_blank" rel="noopener">clojure 函数定义及demo查询</a></li><li><a href="https://github.com/geekerzp/clojure-style-guide/blob/master/README-zhCN.md" target="_blank" rel="noopener">clojure编程风格指南</a></li><li><a href="https://clojure.org/guides/spec" target="_blank" rel="noopener">spec guide</a></li><li><a href="https://cursive-ide.com/userguide/testing.html" target="_blank" rel="noopener">单元测试</a></li></ul><h3 id="项目运行"><a href="#项目运行" class="headerlink" title="项目运行"></a>项目运行</h3><p>在命令行工具中启动用lein启动一个repl，lein没有安装的需要自行百度。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ cd git/redcreation/alk-wxapi</span><br><span class="line">➜  alk-wxapi git:(master) lein repl</span><br><span class="line">nREPL server started on port 50529 on host 127.0.0.1 - nrepl://127.0.0.1:50529</span><br><span class="line">REPL-y 0.4.3, nREPL 0.6.0</span><br><span class="line">Clojure 1.10.0</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM 1.8.0_192-b12</span><br><span class="line">    Docs: (doc function-name-here)</span><br><span class="line">          (find-doc &quot;part-of-name-here&quot;)</span><br><span class="line">  Source: (source function-name-here)</span><br><span class="line"> Javadoc: (javadoc java-object-or-class-here)</span><br><span class="line">    Exit: Control+D or (exit) or (quit)</span><br><span class="line"> Results: Stored in vars *1, *2, *3, an exception in *e</span><br><span class="line"></span><br><span class="line">user=&gt;</span><br></pre></td></tr></table></figure></p><p>然后在Intellij Idea中远程连接</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-fa8e1fed50bcbd4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="ideaconfig"></p><p>run这个配置，然后在下面的repl环境中执行<code>(start)</code>即启动server。</p><h3 id="常见问题及解决方案"><a href="#常见问题及解决方案" class="headerlink" title="常见问题及解决方案"></a>常见问题及解决方案</h3><h4 id="1、处理request"><a href="#1、处理request" class="headerlink" title="1、处理request"></a>1、处理request</h4><p>实际项目开发中经常需要打印request内容，这部分在springMVC中一般用aop来解决。<br>clojure中没有对象，更别提aop了，但是没有框架的束缚，处理起request和response反而更加灵活，是用clojure的<a href="http://clojure-doc.org/articles/cookbooks/middleware.html" target="_blank" rel="noopener">middleware</a><br>处理的，比如一个打印出入参的middleware如下：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">require</span> '[clojure.tools.logging <span class="symbol">:as</span> log])</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> log-wrap [handler]</span><br><span class="line">  (<span class="name"><span class="builtin-name">fn</span></span> [request]</span><br><span class="line">    (<span class="name"><span class="builtin-name">if-not</span></span> (<span class="symbol">:dev</span> env)</span><br><span class="line">      (<span class="name"><span class="builtin-name">let</span></span> [request-id (<span class="name">java.util.UUID/randomUUID</span>)]</span><br><span class="line">        (<span class="name">log/info</span> (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"\n================================ REQUEST START ================================"</span></span><br><span class="line">                       <span class="string">"\n request-id:"</span> request-id</span><br><span class="line">                       <span class="string">"\n request-uri: "</span> (<span class="symbol">:uri</span> request)</span><br><span class="line">                       <span class="string">"\n request-method: "</span> (<span class="symbol">:request-method</span> request)</span><br><span class="line">                       <span class="string">"\n request-query: "</span> (<span class="symbol">:query</span> (<span class="symbol">:parameters</span> request))</span><br><span class="line">                       <span class="string">"\n request-body: "</span> (<span class="symbol">:body</span> (<span class="symbol">:parameters</span> request))))</span><br><span class="line">        (<span class="name"><span class="builtin-name">let</span></span> [res (<span class="name">handler</span> request)]</span><br><span class="line">          (<span class="name">log/info</span> (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"response: "</span> (<span class="symbol">:body</span> res)</span><br><span class="line">                         <span class="string">"\n request-id:"</span> request-id))</span><br><span class="line">          (<span class="name">log/info</span> (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"\n================================ response END ================================"</span>))</span><br><span class="line">          res))</span><br><span class="line">      (<span class="name">handler</span> request))))</span><br></pre></td></tr></table></figure></p><p>将此swap配置在全局路由中即可,一般是有个统一配置format的middleware的，放在一起即可。</p><h4 id="2、在handler中使用request里自定义的对象"><a href="#2、在handler中使用request里自定义的对象" class="headerlink" title="2、在handler中使用request里自定义的对象"></a>2、在handler中使用request里自定义的对象</h4><p>有了上面说的middleware能处理request，那么往request里放个对象，自然不在话下，比如讲header里的token转换成user对象置于request中，在后面handler中直接是用。<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> token-wrap [handler]</span><br><span class="line">  (<span class="name"><span class="builtin-name">fn</span></span> [request]</span><br><span class="line">    (<span class="name"><span class="builtin-name">let</span></span> [token (<span class="name"><span class="builtin-name">get-in</span></span> request [<span class="symbol">:headers</span> <span class="string">"token"</span>])</span><br><span class="line">          user (<span class="name"><span class="builtin-name">-&gt;</span></span> token</span><br><span class="line">                   str-&gt;jwt</span><br><span class="line">                   <span class="symbol">:claims</span>)]</span><br><span class="line">      (<span class="name">log/info</span> (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"解析后的user："</span> (<span class="name"><span class="builtin-name">-&gt;</span></span> token</span><br><span class="line">                                      str-&gt;jwt</span><br><span class="line">                                      <span class="symbol">:claims</span>)))</span><br><span class="line">      (<span class="name">log/info</span> (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"******* the current user is "</span> (<span class="symbol">:iss</span> user)))</span><br><span class="line">      (<span class="name">handler</span> (<span class="name"><span class="builtin-name">assoc</span></span> request <span class="symbol">:current-user</span> (<span class="symbol">:iss</span> user))))))</span><br></pre></td></tr></table></figure></p><h4 id="3、hendler获取body，path，query的参数"><a href="#3、hendler获取body，path，query的参数" class="headerlink" title="3、hendler获取body，path，query的参数"></a>3、hendler获取body，path，query的参数</h4><p>在handle前后，可以用<code>(keys request)</code>查看request里自己传入的参数，那么在handler里怎么获取这些参数呢,在Luminus中定义了三种与springMVC类似的参数关键词，对应关系如下：</p><table><thead><tr><th style="text-align:center">mvc</th><th style="text-align:center">request</th><th style="text-align:center">luminus</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">@RequestParam</td><td style="text-align:center">query-params</td><td style="text-align:center">parameters -&gt; query</td><td style="text-align:center">query参数，URL后面问号的参数，或form的参数</td></tr><tr><td style="text-align:center">@PathVariable</td><td style="text-align:center">path-params</td><td style="text-align:center">parameters -&gt; path</td><td style="text-align:center">path参数，URL中<code>/</code>的参数</td></tr><tr><td style="text-align:center">@RequestBody</td><td style="text-align:center">body-params</td><td style="text-align:center">parameters -&gt;body</td><td style="text-align:center">post/put方法里的body参数</td></tr></tbody></table><p>这三个keyword是ring自身的处理，是原始request里的参数，但是query-params参数被处理成map的key不是keywords，是普通的string，得用(query-params “id”)这样来取值。因此推荐如下示例使用：<br>推荐从request的parameters中获取，关键字分别是query，path， body。<br>获取的例子：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;;非推荐方式</span></span><br><span class="line"><span class="comment">;;api返回结果: &#123;"data": "path params: &#123;:id \"1\"&#125;\n query params: &#123;\"name\" \"2\"&#125;\n body params: &#123;:message \"22\"&#125;"&#125;</span></span><br><span class="line">[<span class="string">"/path/bad/:id"</span></span><br><span class="line"> &#123;<span class="symbol">:post</span> &#123;<span class="symbol">:summary</span>    <span class="string">"路径上传参--不推荐此方法获取--query参数key变成了str"</span></span><br><span class="line">         <span class="symbol">:parameters</span> &#123;<span class="symbol">:path</span>  &#123;<span class="symbol">:id</span> int?&#125;</span><br><span class="line">                      <span class="symbol">:query</span> &#123;<span class="symbol">:name</span> string?&#125;</span><br><span class="line">                      <span class="symbol">:body</span>  &#123;<span class="symbol">:message</span> string?&#125;&#125;</span><br><span class="line">         <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;<span class="symbol">:keys</span> [path-params query-params body-params]&#125;]</span><br><span class="line">                      &#123;<span class="symbol">:status</span> <span class="number">200</span></span><br><span class="line">                       <span class="symbol">:body</span>   &#123;<span class="symbol">:data</span> (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"path params: "</span> path-params</span><br><span class="line">                                           <span class="string">"\n query params: "</span> query-params</span><br><span class="line">                                           <span class="string">"\n body params: "</span> body-params)&#125;&#125;)&#125;&#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment">;;good handler api返回结果:</span></span><br><span class="line"><span class="comment">;&#123;</span></span><br><span class="line"><span class="comment">;  "code": 1,</span></span><br><span class="line"><span class="comment">;  "message": "操作成功",</span></span><br><span class="line"><span class="comment">;  "data": "path params: &#123;:id 1&#125;,  query params: &#123;:name \"2\"&#125;,  body params: &#123;:message \"22\"&#125; "</span></span><br><span class="line"><span class="comment">;&#125;</span></span><br><span class="line">[<span class="string">"/path/good/:id"</span></span><br><span class="line"> &#123;<span class="symbol">:post</span> &#123;<span class="symbol">:summary</span>    <span class="string">"路径上传参--GOOD--获取到3种map"</span></span><br><span class="line">         <span class="symbol">:parameters</span> &#123;<span class="symbol">:path</span>  &#123;<span class="symbol">:id</span> int?&#125;</span><br><span class="line">                      <span class="symbol">:query</span> &#123;<span class="symbol">:name</span> string?&#125;</span><br><span class="line">                      <span class="symbol">:body</span>  &#123;<span class="symbol">:message</span> string?&#125;&#125;</span><br><span class="line">         <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;<span class="symbol">:keys</span> [body query path]&#125; <span class="symbol">:parameters</span>&#125;]</span><br><span class="line">                      (<span class="name">ok</span> (<span class="name"><span class="builtin-name">format</span></span> <span class="string">"path params: %s,  query params: %s,  body params: %s "</span> path query body)))&#125;&#125;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;;good handler, 接口里三种参数都有，并且想直接获取map中key的vals</span></span><br><span class="line"><span class="comment">;; api返回结果:</span></span><br><span class="line"><span class="comment">;&#123;</span></span><br><span class="line"><span class="comment">;"code": 1,</span></span><br><span class="line"><span class="comment">;"message": "操作成功",</span></span><br><span class="line"><span class="comment">;"data": "path params 'id': 1, query params 'name': 2 , body params: &#123;:message \"22\"&#125; "</span></span><br><span class="line"><span class="comment">;&#125;</span></span><br><span class="line">[<span class="string">"/path/good-all-params/:id"</span></span><br><span class="line"> &#123;<span class="symbol">:post</span> &#123;<span class="symbol">:summary</span>    <span class="string">"路径上传参--GOOD--直接得到key的val"</span></span><br><span class="line">         <span class="symbol">:parameters</span> &#123;<span class="symbol">:path</span>  &#123;<span class="symbol">:id</span> int?&#125;</span><br><span class="line">                      <span class="symbol">:query</span> &#123;<span class="symbol">:name</span> string?&#125;</span><br><span class="line">                      <span class="symbol">:body</span>  &#123;<span class="symbol">:message</span> string?&#125;&#125;</span><br><span class="line">         <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;<span class="symbol">:keys</span> [body]&#125;          <span class="symbol">:parameters</span></span><br><span class="line">                           &#123;&#123;<span class="symbol">:keys</span> [id]&#125; <span class="symbol">:path</span>&#125;    <span class="symbol">:parameters</span></span><br><span class="line">                           &#123;&#123;<span class="symbol">:keys</span> [name]&#125; <span class="symbol">:query</span>&#125; <span class="symbol">:parameters</span>&#125;]</span><br><span class="line">                      (<span class="name">ok</span> (<span class="name"><span class="builtin-name">format</span></span> <span class="string">"path params 'id': %s, query params 'name': %s , body params: %s "</span> id name body)))&#125;&#125;]</span><br></pre></td></tr></table></figure></p><p><strong>原因分析</strong>：我们在handler.clj的<code>ring/router</code>后面使用<code>[reitit.ring.middleware.dev :as dev]</code>的<code>{:reitit.middleware/transform dev/print-request-diffs}</code>方法打印出中间件的处理逻辑，</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-67df002fe9e8944b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="handler"></p><p>结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br></pre></td><td class="code"><pre><span class="line">--- Middleware ---</span><br><span class="line"></span><br><span class="line">  &#123;:body #&lt;io.undertow.io.UndertowInputStream@39931c66&gt;,</span><br><span class="line">   :character-encoding &quot;ISO-8859-1&quot;,</span><br><span class="line">   :content-length 21,</span><br><span class="line">   :content-type &quot;application/json&quot;,</span><br><span class="line">   :context &quot;&quot;,</span><br><span class="line">   :cookies &#123;&quot;JSESSIONID&quot; &#123;:value &quot;GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU&quot;&#125;,</span><br><span class="line">             &quot;_ga&quot; &#123;:value &quot;GA1.1.521496834.1555489511&quot;&#125;,</span><br><span class="line">             &quot;_gid&quot; &#123;:value &quot;GA1.1.947080805.1561170619&quot;&#125;&#125;,</span><br><span class="line">   :flash nil,</span><br><span class="line">   :form-params &#123;&#125;,</span><br><span class="line">   :handler-type :undertow,</span><br><span class="line">   :headers &#123;&quot;accept&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;accept-encoding&quot; &quot;gzip, deflate, br&quot;,</span><br><span class="line">             &quot;accept-language&quot; &quot;zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7&quot;,</span><br><span class="line">             &quot;connection&quot; &quot;keep-alive&quot;,</span><br><span class="line">             &quot;content-length&quot; &quot;21&quot;,</span><br><span class="line">             &quot;content-type&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;cookie&quot; &quot;_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619&quot;,</span><br><span class="line">             &quot;host&quot; &quot;localhost:3000&quot;,</span><br><span class="line">             &quot;origin&quot; &quot;http://localhost:3000&quot;,</span><br><span class="line">             &quot;referer&quot; &quot;http://localhost:3000/api/api-docs/index.html&quot;,</span><br><span class="line">             &quot;user-agent&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;,</span><br><span class="line">   :multipart-params &#123;&#125;,</span><br><span class="line">   :params &#123;:name &quot;2&quot;&#125;,</span><br><span class="line">   :path-info &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :path-params &#123;:id &quot;1&quot;&#125;,</span><br><span class="line">   :query-params &#123;&quot;name&quot; &quot;2&quot;&#125;,</span><br><span class="line">   :query-string &quot;name=2&quot;,</span><br><span class="line">   :remote-addr &quot;0:0:0:0:0:0:0:1&quot;,</span><br><span class="line">   :request-method :post,</span><br><span class="line">   :scheme :http,</span><br><span class="line">   :server-exchange #&lt;io.undertow.server.HttpServerExchange@78f2e776 HttpServerExchange&#123; POST /api/guestbooks/path/good-all-params/1 request &#123;Accept=[application/json], Accept-Language=[zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7], Accept-Encoding=[gzip, deflate, br], Origin=[http://localhost:3000], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36], Connection=[keep-alive], Content-Length=[21], Content-Type=[application/json], Cookie=[_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619], Referer=[http://localhost:3000/api/api-docs/index.html], Host=[localhost:3000]&#125; response &#123;Server=[undertow]&#125;&#125;&gt;,</span><br><span class="line">   :server-name &quot;localhost&quot;,</span><br><span class="line">   :server-port 3000,</span><br><span class="line">   :session nil,</span><br><span class="line">   :ssl-client-cert nil,</span><br><span class="line">   :uri &quot;/api/guestbooks/path/good-all-params/1&quot;&#125;</span><br><span class="line"></span><br><span class="line">--- Middleware :reitit.ring.middleware.parameters/parameters ---</span><br><span class="line"></span><br><span class="line">  &#123;:body #&lt;io.undertow.io.UndertowInputStream@39931c66&gt;,</span><br><span class="line">   :character-encoding &quot;ISO-8859-1&quot;,</span><br><span class="line">   :content-length 21,</span><br><span class="line">   :content-type &quot;application/json&quot;,</span><br><span class="line">   :context &quot;&quot;,</span><br><span class="line">   :cookies &#123;&quot;JSESSIONID&quot; &#123;:value &quot;GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU&quot;&#125;,</span><br><span class="line">             &quot;_ga&quot; &#123;:value &quot;GA1.1.521496834.1555489511&quot;&#125;,</span><br><span class="line">             &quot;_gid&quot; &#123;:value &quot;GA1.1.947080805.1561170619&quot;&#125;&#125;,</span><br><span class="line">   :flash nil,</span><br><span class="line">   :form-params &#123;&#125;,</span><br><span class="line">   :handler-type :undertow,</span><br><span class="line">   :headers &#123;&quot;accept&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;accept-encoding&quot; &quot;gzip, deflate, br&quot;,</span><br><span class="line">             &quot;accept-language&quot; &quot;zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7&quot;,</span><br><span class="line">             &quot;connection&quot; &quot;keep-alive&quot;,</span><br><span class="line">             &quot;content-length&quot; &quot;21&quot;,</span><br><span class="line">             &quot;content-type&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;cookie&quot; &quot;_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619&quot;,</span><br><span class="line">             &quot;host&quot; &quot;localhost:3000&quot;,</span><br><span class="line">             &quot;origin&quot; &quot;http://localhost:3000&quot;,</span><br><span class="line">             &quot;referer&quot; &quot;http://localhost:3000/api/api-docs/index.html&quot;,</span><br><span class="line">             &quot;user-agent&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;,</span><br><span class="line">   :multipart-params &#123;&#125;,</span><br><span class="line">   :params &#123;:name &quot;2&quot;&#125;,</span><br><span class="line">   :path-info &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :path-params &#123;:id &quot;1&quot;&#125;,</span><br><span class="line">   :query-params &#123;&quot;name&quot; &quot;2&quot;&#125;,</span><br><span class="line">   :query-string &quot;name=2&quot;,</span><br><span class="line">   :remote-addr &quot;0:0:0:0:0:0:0:1&quot;,</span><br><span class="line">   :request-method :post,</span><br><span class="line">   :scheme :http,</span><br><span class="line">   :server-exchange #&lt;io.undertow.server.HttpServerExchange@78f2e776 HttpServerExchange&#123; POST /api/guestbooks/path/good-all-params/1 request &#123;Accept=[application/json], Accept-Language=[zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7], Accept-Encoding=[gzip, deflate, br], Origin=[http://localhost:3000], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36], Connection=[keep-alive], Content-Length=[21], Content-Type=[application/json], Cookie=[_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619], Referer=[http://localhost:3000/api/api-docs/index.html], Host=[localhost:3000]&#125; response &#123;Server=[undertow]&#125;&#125;&gt;,</span><br><span class="line">   :server-name &quot;localhost&quot;,</span><br><span class="line">   :server-port 3000,</span><br><span class="line">   :session nil,</span><br><span class="line">   :ssl-client-cert nil,</span><br><span class="line">   :uri &quot;/api/guestbooks/path/good-all-params/1&quot;&#125;</span><br><span class="line"></span><br><span class="line">--- Middleware :reitit.ring.middleware.muuntaja/format-negotiate ---</span><br><span class="line"></span><br><span class="line">  &#123;:body #&lt;io.undertow.io.UndertowInputStream@39931c66&gt;,</span><br><span class="line">   :character-encoding &quot;ISO-8859-1&quot;,</span><br><span class="line">   :content-length 21,</span><br><span class="line">   :content-type &quot;application/json&quot;,</span><br><span class="line">   :context &quot;&quot;,</span><br><span class="line">   :cookies &#123;&quot;JSESSIONID&quot; &#123;:value &quot;GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU&quot;&#125;,</span><br><span class="line">             &quot;_ga&quot; &#123;:value &quot;GA1.1.521496834.1555489511&quot;&#125;,</span><br><span class="line">             &quot;_gid&quot; &#123;:value &quot;GA1.1.947080805.1561170619&quot;&#125;&#125;,</span><br><span class="line">   :flash nil,</span><br><span class="line">   :form-params &#123;&#125;,</span><br><span class="line">   :handler-type :undertow,</span><br><span class="line">   :headers &#123;&quot;accept&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;accept-encoding&quot; &quot;gzip, deflate, br&quot;,</span><br><span class="line">             &quot;accept-language&quot; &quot;zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7&quot;,</span><br><span class="line">             &quot;connection&quot; &quot;keep-alive&quot;,</span><br><span class="line">             &quot;content-length&quot; &quot;21&quot;,</span><br><span class="line">             &quot;content-type&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;cookie&quot; &quot;_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619&quot;,</span><br><span class="line">             &quot;host&quot; &quot;localhost:3000&quot;,</span><br><span class="line">             &quot;origin&quot; &quot;http://localhost:3000&quot;,</span><br><span class="line">             &quot;referer&quot; &quot;http://localhost:3000/api/api-docs/index.html&quot;,</span><br><span class="line">             &quot;user-agent&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;,</span><br><span class="line">   :multipart-params &#123;&#125;,</span><br><span class="line">   :params &#123;:name &quot;2&quot;&#125;,</span><br><span class="line">   :path-info &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :path-params &#123;:id &quot;1&quot;&#125;,</span><br><span class="line">   :query-params &#123;&quot;name&quot; &quot;2&quot;&#125;,</span><br><span class="line">   :query-string &quot;name=2&quot;,</span><br><span class="line">   :remote-addr &quot;0:0:0:0:0:0:0:1&quot;,</span><br><span class="line">   :request-method :post,</span><br><span class="line">   :scheme :http,</span><br><span class="line">   :server-exchange #&lt;io.undertow.server.HttpServerExchange@78f2e776 HttpServerExchange&#123; POST /api/guestbooks/path/good-all-params/1 request &#123;Accept=[application/json], Accept-Language=[zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7], Accept-Encoding=[gzip, deflate, br], Origin=[http://localhost:3000], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36], Connection=[keep-alive], Content-Length=[21], Content-Type=[application/json], Cookie=[_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619], Referer=[http://localhost:3000/api/api-docs/index.html], Host=[localhost:3000]&#125; response &#123;Server=[undertow]&#125;&#125;&gt;,</span><br><span class="line">   :server-name &quot;localhost&quot;,</span><br><span class="line">   :server-port 3000,</span><br><span class="line">   :session nil,</span><br><span class="line">   :ssl-client-cert nil,</span><br><span class="line">   :uri &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   +:muuntaja/request #muuntaja.core.FormatAndCharset</span><br><span class="line">   &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">    :format &quot;application/json&quot;,</span><br><span class="line">    :raw-format &quot;application/json&quot;&#125;,</span><br><span class="line">   +:muuntaja/response #muuntaja.core.FormatAndCharset</span><br><span class="line">   &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">    :format &quot;application/json&quot;,</span><br><span class="line">    :raw-format &quot;application/json&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">--- Middleware :reitit.ring.middleware.muuntaja/format-response ---</span><br><span class="line"></span><br><span class="line">  &#123;:body #&lt;io.undertow.io.UndertowInputStream@39931c66&gt;,</span><br><span class="line">   :character-encoding &quot;ISO-8859-1&quot;,</span><br><span class="line">   :content-length 21,</span><br><span class="line">   :content-type &quot;application/json&quot;,</span><br><span class="line">   :context &quot;&quot;,</span><br><span class="line">   :cookies &#123;&quot;JSESSIONID&quot; &#123;:value &quot;GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU&quot;&#125;,</span><br><span class="line">             &quot;_ga&quot; &#123;:value &quot;GA1.1.521496834.1555489511&quot;&#125;,</span><br><span class="line">             &quot;_gid&quot; &#123;:value &quot;GA1.1.947080805.1561170619&quot;&#125;&#125;,</span><br><span class="line">   :flash nil,</span><br><span class="line">   :form-params &#123;&#125;,</span><br><span class="line">   :handler-type :undertow,</span><br><span class="line">   :headers &#123;&quot;accept&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;accept-encoding&quot; &quot;gzip, deflate, br&quot;,</span><br><span class="line">             &quot;accept-language&quot; &quot;zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7&quot;,</span><br><span class="line">             &quot;connection&quot; &quot;keep-alive&quot;,</span><br><span class="line">             &quot;content-length&quot; &quot;21&quot;,</span><br><span class="line">             &quot;content-type&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;cookie&quot; &quot;_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619&quot;,</span><br><span class="line">             &quot;host&quot; &quot;localhost:3000&quot;,</span><br><span class="line">             &quot;origin&quot; &quot;http://localhost:3000&quot;,</span><br><span class="line">             &quot;referer&quot; &quot;http://localhost:3000/api/api-docs/index.html&quot;,</span><br><span class="line">             &quot;user-agent&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;,</span><br><span class="line">   :multipart-params &#123;&#125;,</span><br><span class="line">   :params &#123;:name &quot;2&quot;&#125;,</span><br><span class="line">   :path-info &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :path-params &#123;:id &quot;1&quot;&#125;,</span><br><span class="line">   :query-params &#123;&quot;name&quot; &quot;2&quot;&#125;,</span><br><span class="line">   :query-string &quot;name=2&quot;,</span><br><span class="line">   :remote-addr &quot;0:0:0:0:0:0:0:1&quot;,</span><br><span class="line">   :request-method :post,</span><br><span class="line">   :scheme :http,</span><br><span class="line">   :server-exchange #&lt;io.undertow.server.HttpServerExchange@78f2e776 HttpServerExchange&#123; POST /api/guestbooks/path/good-all-params/1 request &#123;Accept=[application/json], Accept-Language=[zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7], Accept-Encoding=[gzip, deflate, br], Origin=[http://localhost:3000], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36], Connection=[keep-alive], Content-Length=[21], Content-Type=[application/json], Cookie=[_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619], Referer=[http://localhost:3000/api/api-docs/index.html], Host=[localhost:3000]&#125; response &#123;Server=[undertow]&#125;&#125;&gt;,</span><br><span class="line">   :server-name &quot;localhost&quot;,</span><br><span class="line">   :server-port 3000,</span><br><span class="line">   :session nil,</span><br><span class="line">   :ssl-client-cert nil,</span><br><span class="line">   :uri &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :muuntaja/request &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                      :format &quot;application/json&quot;,</span><br><span class="line">                      :raw-format &quot;application/json&quot;&#125;,</span><br><span class="line">   :muuntaja/response &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                       :format &quot;application/json&quot;,</span><br><span class="line">                       :raw-format &quot;application/json&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">--- Middleware :reitit.ring.middleware.exception/exception ---</span><br><span class="line"></span><br><span class="line">  &#123;:body #&lt;io.undertow.io.UndertowInputStream@39931c66&gt;,</span><br><span class="line">   :character-encoding &quot;ISO-8859-1&quot;,</span><br><span class="line">   :content-length 21,</span><br><span class="line">   :content-type &quot;application/json&quot;,</span><br><span class="line">   :context &quot;&quot;,</span><br><span class="line">   :cookies &#123;&quot;JSESSIONID&quot; &#123;:value &quot;GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU&quot;&#125;,</span><br><span class="line">             &quot;_ga&quot; &#123;:value &quot;GA1.1.521496834.1555489511&quot;&#125;,</span><br><span class="line">             &quot;_gid&quot; &#123;:value &quot;GA1.1.947080805.1561170619&quot;&#125;&#125;,</span><br><span class="line">   :flash nil,</span><br><span class="line">   :form-params &#123;&#125;,</span><br><span class="line">   :handler-type :undertow,</span><br><span class="line">   :headers &#123;&quot;accept&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;accept-encoding&quot; &quot;gzip, deflate, br&quot;,</span><br><span class="line">             &quot;accept-language&quot; &quot;zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7&quot;,</span><br><span class="line">             &quot;connection&quot; &quot;keep-alive&quot;,</span><br><span class="line">             &quot;content-length&quot; &quot;21&quot;,</span><br><span class="line">             &quot;content-type&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;cookie&quot; &quot;_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619&quot;,</span><br><span class="line">             &quot;host&quot; &quot;localhost:3000&quot;,</span><br><span class="line">             &quot;origin&quot; &quot;http://localhost:3000&quot;,</span><br><span class="line">             &quot;referer&quot; &quot;http://localhost:3000/api/api-docs/index.html&quot;,</span><br><span class="line">             &quot;user-agent&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;,</span><br><span class="line">   :multipart-params &#123;&#125;,</span><br><span class="line">   :params &#123;:name &quot;2&quot;&#125;,</span><br><span class="line">   :path-info &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :path-params &#123;:id &quot;1&quot;&#125;,</span><br><span class="line">   :query-params &#123;&quot;name&quot; &quot;2&quot;&#125;,</span><br><span class="line">   :query-string &quot;name=2&quot;,</span><br><span class="line">   :remote-addr &quot;0:0:0:0:0:0:0:1&quot;,</span><br><span class="line">   :request-method :post,</span><br><span class="line">   :scheme :http,</span><br><span class="line">   :server-exchange #&lt;io.undertow.server.HttpServerExchange@78f2e776 HttpServerExchange&#123; POST /api/guestbooks/path/good-all-params/1 request &#123;Accept=[application/json], Accept-Language=[zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7], Accept-Encoding=[gzip, deflate, br], Origin=[http://localhost:3000], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36], Connection=[keep-alive], Content-Length=[21], Content-Type=[application/json], Cookie=[_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619], Referer=[http://localhost:3000/api/api-docs/index.html], Host=[localhost:3000]&#125; response &#123;Server=[undertow]&#125;&#125;&gt;,</span><br><span class="line">   :server-name &quot;localhost&quot;,</span><br><span class="line">   :server-port 3000,</span><br><span class="line">   :session nil,</span><br><span class="line">   :ssl-client-cert nil,</span><br><span class="line">   :uri &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :muuntaja/request &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                      :format &quot;application/json&quot;,</span><br><span class="line">                      :raw-format &quot;application/json&quot;&#125;,</span><br><span class="line">   :muuntaja/response &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                       :format &quot;application/json&quot;,</span><br><span class="line">                       :raw-format &quot;application/json&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">--- Middleware :reitit.ring.middleware.muuntaja/format-request ---</span><br><span class="line"></span><br><span class="line">  &#123;:body #&lt;io.undertow.io.UndertowInputStream@39931c66&gt;,</span><br><span class="line">   :character-encoding &quot;ISO-8859-1&quot;,</span><br><span class="line">   :content-length 21,</span><br><span class="line">   :content-type &quot;application/json&quot;,</span><br><span class="line">   :context &quot;&quot;,</span><br><span class="line">   :cookies &#123;&quot;JSESSIONID&quot; &#123;:value &quot;GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU&quot;&#125;,</span><br><span class="line">             &quot;_ga&quot; &#123;:value &quot;GA1.1.521496834.1555489511&quot;&#125;,</span><br><span class="line">             &quot;_gid&quot; &#123;:value &quot;GA1.1.947080805.1561170619&quot;&#125;&#125;,</span><br><span class="line">   :flash nil,</span><br><span class="line">   :form-params &#123;&#125;,</span><br><span class="line">   :handler-type :undertow,</span><br><span class="line">   :headers &#123;&quot;accept&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;accept-encoding&quot; &quot;gzip, deflate, br&quot;,</span><br><span class="line">             &quot;accept-language&quot; &quot;zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7&quot;,</span><br><span class="line">             &quot;connection&quot; &quot;keep-alive&quot;,</span><br><span class="line">             &quot;content-length&quot; &quot;21&quot;,</span><br><span class="line">             &quot;content-type&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;cookie&quot; &quot;_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619&quot;,</span><br><span class="line">             &quot;host&quot; &quot;localhost:3000&quot;,</span><br><span class="line">             &quot;origin&quot; &quot;http://localhost:3000&quot;,</span><br><span class="line">             &quot;referer&quot; &quot;http://localhost:3000/api/api-docs/index.html&quot;,</span><br><span class="line">             &quot;user-agent&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;,</span><br><span class="line">   :multipart-params &#123;&#125;,</span><br><span class="line">   :params &#123;:name &quot;2&quot;&#125;,</span><br><span class="line">   :path-info &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :path-params &#123;:id &quot;1&quot;&#125;,</span><br><span class="line">   :query-params &#123;&quot;name&quot; &quot;2&quot;&#125;,</span><br><span class="line">   :query-string &quot;name=2&quot;,</span><br><span class="line">   :remote-addr &quot;0:0:0:0:0:0:0:1&quot;,</span><br><span class="line">   :request-method :post,</span><br><span class="line">   :scheme :http,</span><br><span class="line">   :server-exchange #&lt;io.undertow.server.HttpServerExchange@78f2e776 HttpServerExchange&#123; POST /api/guestbooks/path/good-all-params/1 request &#123;Accept=[application/json], Accept-Language=[zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7], Accept-Encoding=[gzip, deflate, br], Origin=[http://localhost:3000], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36], Connection=[keep-alive], Content-Length=[21], Content-Type=[application/json], Cookie=[_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619], Referer=[http://localhost:3000/api/api-docs/index.html], Host=[localhost:3000]&#125; response &#123;Server=[undertow]&#125;&#125;&gt;,</span><br><span class="line">   :server-name &quot;localhost&quot;,</span><br><span class="line">   :server-port 3000,</span><br><span class="line">   :session nil,</span><br><span class="line">   :ssl-client-cert nil,</span><br><span class="line">   :uri &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :muuntaja/request &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                      :format &quot;application/json&quot;,</span><br><span class="line">                      :raw-format &quot;application/json&quot;&#125;,</span><br><span class="line">   :muuntaja/response &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                       :format &quot;application/json&quot;,</span><br><span class="line">                       :raw-format &quot;application/json&quot;&#125;,</span><br><span class="line">   +:body-params &#123;:message &quot;22&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">--- Middleware :reitit.ring.coercion/coerce-request ---</span><br><span class="line"></span><br><span class="line">  &#123;:body #&lt;io.undertow.io.UndertowInputStream@39931c66&gt;,</span><br><span class="line">   :body-params &#123;:message &quot;22&quot;&#125;,</span><br><span class="line">   :character-encoding &quot;ISO-8859-1&quot;,</span><br><span class="line">   :content-length 21,</span><br><span class="line">   :content-type &quot;application/json&quot;,</span><br><span class="line">   :context &quot;&quot;,</span><br><span class="line">   :cookies &#123;&quot;JSESSIONID&quot; &#123;:value &quot;GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU&quot;&#125;,</span><br><span class="line">             &quot;_ga&quot; &#123;:value &quot;GA1.1.521496834.1555489511&quot;&#125;,</span><br><span class="line">             &quot;_gid&quot; &#123;:value &quot;GA1.1.947080805.1561170619&quot;&#125;&#125;,</span><br><span class="line">   :flash nil,</span><br><span class="line">   :form-params &#123;&#125;,</span><br><span class="line">   :handler-type :undertow,</span><br><span class="line">   :headers &#123;&quot;accept&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;accept-encoding&quot; &quot;gzip, deflate, br&quot;,</span><br><span class="line">             &quot;accept-language&quot; &quot;zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7&quot;,</span><br><span class="line">             &quot;connection&quot; &quot;keep-alive&quot;,</span><br><span class="line">             &quot;content-length&quot; &quot;21&quot;,</span><br><span class="line">             &quot;content-type&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;cookie&quot; &quot;_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619&quot;,</span><br><span class="line">             &quot;host&quot; &quot;localhost:3000&quot;,</span><br><span class="line">             &quot;origin&quot; &quot;http://localhost:3000&quot;,</span><br><span class="line">             &quot;referer&quot; &quot;http://localhost:3000/api/api-docs/index.html&quot;,</span><br><span class="line">             &quot;user-agent&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;,</span><br><span class="line">   :multipart-params &#123;&#125;,</span><br><span class="line">   :params &#123;:name &quot;2&quot;&#125;,</span><br><span class="line">   :path-info &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :path-params &#123;:id &quot;1&quot;&#125;,</span><br><span class="line">   :query-params &#123;&quot;name&quot; &quot;2&quot;&#125;,</span><br><span class="line">   :query-string &quot;name=2&quot;,</span><br><span class="line">   :remote-addr &quot;0:0:0:0:0:0:0:1&quot;,</span><br><span class="line">   :request-method :post,</span><br><span class="line">   :scheme :http,</span><br><span class="line">   :server-exchange #&lt;io.undertow.server.HttpServerExchange@78f2e776 HttpServerExchange&#123; POST /api/guestbooks/path/good-all-params/1 request &#123;Accept=[application/json], Accept-Language=[zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7], Accept-Encoding=[gzip, deflate, br], Origin=[http://localhost:3000], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36], Connection=[keep-alive], Content-Length=[21], Content-Type=[application/json], Cookie=[_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619], Referer=[http://localhost:3000/api/api-docs/index.html], Host=[localhost:3000]&#125; response &#123;Server=[undertow]&#125;&#125;&gt;,</span><br><span class="line">   :server-name &quot;localhost&quot;,</span><br><span class="line">   :server-port 3000,</span><br><span class="line">   :session nil,</span><br><span class="line">   :ssl-client-cert nil,</span><br><span class="line">   :uri &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :muuntaja/request &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                      :format &quot;application/json&quot;,</span><br><span class="line">                      :raw-format &quot;application/json&quot;&#125;,</span><br><span class="line">   :muuntaja/response &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                       :format &quot;application/json&quot;,</span><br><span class="line">                       :raw-format &quot;application/json&quot;&#125;,</span><br><span class="line">   +:parameters &#123;:body &#123;:message &quot;22&quot;&#125;,</span><br><span class="line">                 :path &#123;:id 1&#125;,</span><br><span class="line">                 :query &#123;:name &quot;2&quot;&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">2019-06-22 11:09:16,537 [XNIO-2 task-2] INFO  alk-wxapi.middleware.log-interceptor - </span><br><span class="line">================================ REQUEST START ================================</span><br><span class="line"> request-id:8ddb3169-e72f-4b90-8811-d500c50d3057</span><br><span class="line"> request-uri: /api/guestbooks/path/good-all-params/1</span><br><span class="line"> request-method: :post</span><br><span class="line"> request-query: &#123;:name &quot;2&quot;&#125;</span><br><span class="line"> request-body: &#123;:message &quot;22&quot;&#125; </span><br><span class="line">--- Middleware ---</span><br><span class="line"></span><br><span class="line">  &#123;:body #&lt;io.undertow.io.UndertowInputStream@39931c66&gt;,</span><br><span class="line">   :body-params &#123;:message &quot;22&quot;&#125;,</span><br><span class="line">   :character-encoding &quot;ISO-8859-1&quot;,</span><br><span class="line">   :content-length 21,</span><br><span class="line">   :content-type &quot;application/json&quot;,</span><br><span class="line">   :context &quot;&quot;,</span><br><span class="line">   :cookies &#123;&quot;JSESSIONID&quot; &#123;:value &quot;GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU&quot;&#125;,</span><br><span class="line">             &quot;_ga&quot; &#123;:value &quot;GA1.1.521496834.1555489511&quot;&#125;,</span><br><span class="line">             &quot;_gid&quot; &#123;:value &quot;GA1.1.947080805.1561170619&quot;&#125;&#125;,</span><br><span class="line">   :flash nil,</span><br><span class="line">   :form-params &#123;&#125;,</span><br><span class="line">   :handler-type :undertow,</span><br><span class="line">   :headers &#123;&quot;accept&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;accept-encoding&quot; &quot;gzip, deflate, br&quot;,</span><br><span class="line">             &quot;accept-language&quot; &quot;zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7&quot;,</span><br><span class="line">             &quot;connection&quot; &quot;keep-alive&quot;,</span><br><span class="line">             &quot;content-length&quot; &quot;21&quot;,</span><br><span class="line">             &quot;content-type&quot; &quot;application/json&quot;,</span><br><span class="line">             &quot;cookie&quot; &quot;_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619&quot;,</span><br><span class="line">             &quot;host&quot; &quot;localhost:3000&quot;,</span><br><span class="line">             &quot;origin&quot; &quot;http://localhost:3000&quot;,</span><br><span class="line">             &quot;referer&quot; &quot;http://localhost:3000/api/api-docs/index.html&quot;,</span><br><span class="line">             &quot;user-agent&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36&quot;&#125;,</span><br><span class="line">   :multipart-params &#123;&#125;,</span><br><span class="line">   :parameters &#123;:body &#123;:message &quot;22&quot;&#125;,</span><br><span class="line">                :path &#123;:id 1&#125;,</span><br><span class="line">                :query &#123;:name &quot;2&quot;&#125;&#125;,</span><br><span class="line">   :params &#123;:name &quot;2&quot;&#125;,</span><br><span class="line">   :path-info &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :path-params &#123;:id &quot;1&quot;&#125;,</span><br><span class="line">   :query-params &#123;&quot;name&quot; &quot;2&quot;&#125;,</span><br><span class="line">   :query-string &quot;name=2&quot;,</span><br><span class="line">   :remote-addr &quot;0:0:0:0:0:0:0:1&quot;,</span><br><span class="line">   :request-method :post,</span><br><span class="line">   :scheme :http,</span><br><span class="line">   :server-exchange #&lt;io.undertow.server.HttpServerExchange@78f2e776 HttpServerExchange&#123; POST /api/guestbooks/path/good-all-params/1 request &#123;Accept=[application/json], Accept-Language=[zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7], Accept-Encoding=[gzip, deflate, br], Origin=[http://localhost:3000], User-Agent=[Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36], Connection=[keep-alive], Content-Length=[21], Content-Type=[application/json], Cookie=[_ga=GA1.1.521496834.1555489511; JSESSIONID=GpSiQENkmzM7qQwqWdYxjehYKvNKoEGMG6MIwqwU; _gid=GA1.1.947080805.1561170619], Referer=[http://localhost:3000/api/api-docs/index.html], Host=[localhost:3000]&#125; response &#123;Server=[undertow]&#125;&#125;&gt;,</span><br><span class="line">   :server-name &quot;localhost&quot;,</span><br><span class="line">   :server-port 3000,</span><br><span class="line">   :session nil,</span><br><span class="line">   :ssl-client-cert nil,</span><br><span class="line">   :uri &quot;/api/guestbooks/path/good-all-params/1&quot;,</span><br><span class="line">   :muuntaja/request &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                      :format &quot;application/json&quot;,</span><br><span class="line">                      :raw-format &quot;application/json&quot;&#125;,</span><br><span class="line">   :muuntaja/response &#123;:charset &quot;utf-8&quot;,</span><br><span class="line">                       :format &quot;application/json&quot;,</span><br><span class="line">                       :raw-format &quot;application/json&quot;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p>可以看到在<code>reitit.ring.coercion/coerce-request</code>中间件处理后request里增加了<br><code>:parameters { :body {:message &quot;22&quot;}, :path {:id 1}, :query {:name &quot;2&quot;}}</code><br>3种类型一致的map，这就是我们为什么推荐使用的原因。</p><blockquote><p>handler里获取request自定义的对象：</p></blockquote><p>那么，在上一步handle中加入到request中了一个current-user怎么获取和使用呢？其实，body-params，query-params这些也只是从request中获取到的而已，既然能从request中获取这些，那么request里的其他所有自然也能在handler中获取，看下面的例子：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">"/reset/pwd"</span></span><br><span class="line">    &#123;<span class="symbol">:post</span> &#123;<span class="symbol">:summary</span>    <span class="string">"修改密码"</span></span><br><span class="line">            <span class="symbol">:parameters</span> &#123;<span class="symbol">:body</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">::old-pwd</span> <span class="symbol">::new-pwd</span>])&#125;</span><br><span class="line">            <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;&#123;<span class="symbol">:keys</span> [old-pwd new-pwd]&#125; <span class="symbol">:body</span>&#125; <span class="symbol">:parameters</span> <span class="symbol">:as</span> request&#125;]</span><br><span class="line">                          (<span class="name"><span class="builtin-name">let</span></span> [current-id (<span class="name"><span class="builtin-name">-&gt;</span></span> request <span class="symbol">:current-user</span> <span class="symbol">:user-id</span>)</span><br><span class="line">                                db-user (<span class="name">db/get-user-id</span></span><br><span class="line">                                         &#123;<span class="symbol">:user-id</span> current-id&#125;)]</span><br><span class="line">                            (<span class="name"><span class="builtin-name">if</span></span> (<span class="name">check-old-pwd</span> old-pwd (<span class="symbol">:password</span> db-user))</span><br><span class="line">                              (<span class="name"><span class="builtin-name">do</span></span> (<span class="name">conman.core/with-transaction</span></span><br><span class="line">                                    [*db*]</span><br><span class="line">                                    (<span class="name">db/update-pwd!</span> &#123;<span class="symbol">:password</span>  (<span class="name">d/sha-256</span> new-pwd)</span><br><span class="line">                                                         <span class="symbol">:user-id</span> current-id&#125;))</span><br><span class="line">                                  &#123;<span class="symbol">:status</span> <span class="number">200</span></span><br><span class="line">                                   <span class="symbol">:body</span>   &#123;<span class="symbol">:code</span>    <span class="number">1</span></span><br><span class="line">                                            <span class="symbol">:message</span> <span class="string">"修改成功，请用新密码登录"</span>&#125;&#125;)</span><br><span class="line">                              &#123;<span class="symbol">:status</span> <span class="number">400</span></span><br><span class="line">                               <span class="symbol">:body</span>   &#123;<span class="symbol">:code</span>    <span class="number">0</span></span><br><span class="line">                                        <span class="symbol">:message</span> <span class="string">"密码错误，请输入正确的密码！"</span>&#125;&#125;)))&#125;&#125;]</span><br></pre></td></tr></table></figure></p><p><code>:as request</code>的意思是包含前面指定获取的参数的所有。</p><h4 id="4、分页，动态hugsql"><a href="#4、分页，动态hugsql" class="headerlink" title="4、分页，动态hugsql"></a>4、分页，动态hugsql</h4><p>在springboot里习惯使用spring data jpa，分页使用Pageable、PageRequest，还能携带Sort，放回结果自动分页，确实方便。在<a href="http://www.luminusweb.net/" target="_blank" rel="noopener">luminusweb</a>里没有看到分页的说明，于是在底层的<a href="https://www.hugsql.org/" target="_blank" rel="noopener">HugSQL</a>里找到的方案,举个动态sql，并且使用like模糊查询的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-- :name get-patient-like :? :*</span><br><span class="line">-- :doc 模糊查询患者列表</span><br><span class="line">SELECT</span><br><span class="line">/*~ (if (:count params) */</span><br><span class="line">  count(*) AS &apos;total-elements&apos;</span><br><span class="line">/*~*/</span><br><span class="line">p.`patient_id`,</span><br><span class="line">p.`name`,</span><br><span class="line">p.`headimgurl`,</span><br><span class="line">p.`patient_no`</span><br><span class="line">/*~ ) ~*/</span><br><span class="line">FROM</span><br><span class="line">`t_patient` p</span><br><span class="line">WHERE</span><br><span class="line">p.deleted = FALSE</span><br><span class="line">AND p.`hospital_id` = :hospital-id</span><br><span class="line">/*~ (if (= nil (:keywords params)) */</span><br><span class="line">  AND 1=1</span><br><span class="line">/*~*/</span><br><span class="line">  AND (</span><br><span class="line">p.`name` LIKE :keywords</span><br><span class="line">OR p.mobile LIKE :keywords</span><br><span class="line">  OR p.patient_no LIKE :keywords</span><br><span class="line">)</span><br><span class="line">/*~ ) ~*/</span><br><span class="line">ORDER BY p.`create_time` DESC</span><br><span class="line">--~ (if (:count params) &quot;;&quot; &quot;LIMIT :page, :size ;&quot;)</span><br></pre></td></tr></table></figure></p><p>调用：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">"/patient/search"</span></span><br><span class="line">    &#123;<span class="symbol">:get</span> &#123;<span class="symbol">:summary</span>    <span class="string">"医生模糊检索患者列表"</span></span><br><span class="line">           <span class="symbol">:parameters</span> &#123;<span class="symbol">:query</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">:base/page</span> <span class="symbol">:base/size</span>]</span><br><span class="line">                                       <span class="symbol">:opt-un</span> [<span class="symbol">::keywords</span>])&#125;</span><br><span class="line">           <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;&#123;<span class="symbol">:keys</span> [page size keywords]&#125; <span class="symbol">:query</span>&#125; <span class="symbol">:parameters</span> <span class="symbol">:as</span> request&#125;]</span><br><span class="line">                         (<span class="name"><span class="builtin-name">let</span></span> [hospital-id (<span class="name"><span class="builtin-name">-&gt;</span></span> request <span class="symbol">:doctor</span> <span class="symbol">:hospital-id</span>)]</span><br><span class="line">                           &#123;<span class="symbol">:status</span> </span><br><span class="line">                            <span class="number">200</span></span><br><span class="line">                            <span class="symbol">:body</span>   </span><br><span class="line">                            &#123;<span class="symbol">:code</span> <span class="number">1</span></span><br><span class="line">                             <span class="symbol">:data</span> &#123;<span class="symbol">:total-elements</span> </span><br><span class="line">                                    (<span class="name"><span class="builtin-name">-&gt;&gt;</span></span> (<span class="name">db-pat/get-patient-like</span></span><br><span class="line">                                           &#123;<span class="symbol">:count</span>       <span class="literal">true</span></span><br><span class="line">                                            <span class="symbol">:keywords</span>    (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"%"</span> keywords <span class="string">"%"</span>)</span><br><span class="line">                                            <span class="symbol">:hospital-id</span> hospital-id&#125;)</span><br><span class="line">                                         (<span class="name"><span class="builtin-name">map</span></span> <span class="symbol">:total-elements</span>)</span><br><span class="line">                                         (<span class="name"><span class="builtin-name">first</span></span>))</span><br><span class="line">                                    <span class="symbol">:content</span></span><br><span class="line">                                    (<span class="name">db-pat/get-patient-like</span></span><br><span class="line">                                      &#123;<span class="symbol">:page</span>        page</span><br><span class="line">                                       <span class="symbol">:size</span>        size</span><br><span class="line">                                       <span class="symbol">:hospital-id</span> hospital-id</span><br><span class="line">                                       <span class="symbol">:keywords</span>    (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"%"</span> keywords <span class="string">"%"</span>)&#125;)&#125;&#125;&#125;))&#125;&#125;]</span><br></pre></td></tr></table></figure></p><p>说明：接口的page,size为必须参数，keywords是非必须参数，sql中根据count的boolean值判断是不是求count，根据keywords是否有值判断是否加模糊查询条件，实现动态sql调用。<br>更多hugSQL的高阶使用，使用时参考<a href="https://www.hugsql.org/" target="_blank" rel="noopener">官网</a><br>边用边学吧。</p><ul><li>一个in查询的例子，下例中的type用逗号隔开传入:</li></ul><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:get</span>    &#123;<span class="symbol">:summary</span>    <span class="string">"分页获取患者检查报告列表"</span></span><br><span class="line">              <span class="symbol">:parameters</span> &#123;<span class="symbol">:query</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">:base/patient-id</span> <span class="symbol">::type</span>])&#125;</span><br><span class="line">              <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;&#123;<span class="symbol">:keys</span> [type, patient-id]&#125; <span class="symbol">:query</span>&#125; <span class="symbol">:parameters</span>&#125;]</span><br><span class="line">                            &#123;<span class="symbol">:status</span> <span class="number">200</span></span><br><span class="line">                             <span class="symbol">:body</span>   &#123;<span class="symbol">:code</span> <span class="number">1</span></span><br><span class="line">                                      <span class="symbol">:data</span> (<span class="name">db/get-examine-reports</span></span><br><span class="line">                                              &#123;<span class="symbol">:patient-id</span> patient-id</span><br><span class="line">                                               <span class="symbol">:types</span>      (<span class="name">str/split</span> type #<span class="string">","</span>)&#125;)&#125;&#125;)&#125;</span><br></pre></td></tr></table></figure><p>sql：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- :name get-reports :? :*</span><br><span class="line">-- :doc 查询列表</span><br><span class="line">SELECT</span><br><span class="line">*</span><br><span class="line">FROM `t_report`</span><br><span class="line">WHERE `deleted` = FALSE AND `id` =:id AND `type` in (:v*:types)</span><br></pre></td></tr></table></figure><p>调用处保证types是个array就行：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:get</span>    &#123;<span class="symbol">:summary</span>    <span class="string">"获取报告列表"</span></span><br><span class="line">              <span class="symbol">:parameters</span> &#123;<span class="symbol">:query</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">:base/id</span> <span class="symbol">::type</span>])&#125;</span><br><span class="line">              <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;&#123;<span class="symbol">:keys</span> [type, id]&#125; <span class="symbol">:query</span>&#125; <span class="symbol">:parameters</span>&#125;]</span><br><span class="line">                            &#123;<span class="symbol">:status</span> <span class="number">200</span></span><br><span class="line">                             <span class="symbol">:body</span>   &#123;<span class="symbol">:code</span> <span class="number">1</span></span><br><span class="line">                                      <span class="symbol">:data</span> (<span class="name">db/get-reports</span></span><br><span class="line">                                              &#123;<span class="symbol">:id</span> id</span><br><span class="line">                                               <span class="symbol">:types</span>      (<span class="name">str/split</span> type #<span class="string">","</span>)&#125;)&#125;&#125;)&#125;</span><br></pre></td></tr></table></figure><ul><li>批量操作,hugsql支持批量操作，语法是<code>:t*</code>，看看sql</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- :name batch-create-cure-reaction-detail! :! :n</span><br><span class="line">-- :doc: 新建</span><br><span class="line">INSERT INTO `t_cure_reaction_detail` (`main_id`, `type`, `dict_key_id`, `dict_key_name`, `dict_value_id`, `dict_value_name`) VALUES</span><br><span class="line">:t*:reaction-detail</span><br></pre></td></tr></table></figure><p>一个UT：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> alk-wxapi.routes.service.cure-reaction-service-test</span><br><span class="line">  (<span class="symbol">:require</span> [clojure.test <span class="symbol">:as</span> t]</span><br><span class="line">            [alk-wxapi.routes.service.cure-reaction-service <span class="symbol">:as</span> sut]</span><br><span class="line">            [alk-wxapi.db.db-patient-cure <span class="symbol">:as</span> db]</span><br><span class="line">            [alk-wxapi.db.core <span class="symbol">:refer</span> [*db*]]</span><br><span class="line">            [luminus-migrations.core <span class="symbol">:as</span> migrations]</span><br><span class="line">            [clojure.java.jdbc <span class="symbol">:as</span> jdbc]</span><br><span class="line">            [alk-wxapi.config <span class="symbol">:refer</span> [env]]</span><br><span class="line">            [mount.core <span class="symbol">:as</span> mount]))</span><br><span class="line"></span><br><span class="line">(<span class="name">t/use-fixtures</span></span><br><span class="line">  <span class="symbol">:once</span></span><br><span class="line">  (<span class="name"><span class="builtin-name">fn</span></span> [f]</span><br><span class="line">    (<span class="name">mount/start</span></span><br><span class="line">      #'alk-wxapi.config/env</span><br><span class="line">      #'alk-wxapi.db.core/*db*)</span><br><span class="line">    (<span class="name">migrations/migrate</span> [<span class="string">"migrate"</span>] (<span class="name"><span class="builtin-name">select-keys</span></span> env [<span class="symbol">:database-url</span>]))</span><br><span class="line">    (<span class="name">f</span>)))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">def</span></span> test-batch-create-cure-reaction-detail-data</span><br><span class="line">  '[[<span class="number">1</span></span><br><span class="line">     <span class="string">"REACTION"</span></span><br><span class="line">     <span class="number">62</span></span><br><span class="line">     <span class="string">"哮喘症状"</span></span><br><span class="line">     <span class="number">68</span></span><br><span class="line">     <span class="string">"气闭"</span>]</span><br><span class="line"></span><br><span class="line">    [<span class="number">1</span></span><br><span class="line">     <span class="string">"REACTION"</span></span><br><span class="line">     <span class="number">58</span></span><br><span class="line">     <span class="string">"全身非特异性反应"</span></span><br><span class="line">     <span class="number">59</span></span><br><span class="line">     <span class="string">"发热"</span>]</span><br><span class="line"></span><br><span class="line">    [<span class="number">1</span></span><br><span class="line">     <span class="string">"DISPOSE"</span></span><br><span class="line">     <span class="number">86</span></span><br><span class="line">     <span class="string">"处理方式"</span></span><br><span class="line">     <span class="number">89</span></span><br><span class="line">     <span class="string">"局部处理(冰敷)"</span>]])</span><br><span class="line"></span><br><span class="line">(<span class="name">t/deftest</span> test-batch-create-cure-reaction-detail</span><br><span class="line">  (<span class="name">jdbc/with-db-transaction</span></span><br><span class="line">    [t-conn *db*]</span><br><span class="line">    (<span class="name">jdbc/db-set-rollback-only!</span> t-conn)</span><br><span class="line"></span><br><span class="line">    (<span class="name">t/is</span> (<span class="name"><span class="builtin-name">=</span></span> <span class="number">2</span> (<span class="name">db/batch-create-cure-reaction-detail-data!</span></span><br><span class="line">                 &#123;<span class="symbol">:reaction-detail</span> test-batch-create-cure-reaction-detail-data&#125;)))))</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">(alk-wxapi.db.db-patient-cure/batch-create-cure-reaction-detail!</span><br><span class="line">  &#123;:reaction-detail [[1</span><br><span class="line">                      &quot;REACTION&quot;</span><br><span class="line">                      62</span><br><span class="line">                      &quot;哮喘症状&quot;</span><br><span class="line">                      68</span><br><span class="line">                      &quot;气闭&quot;]</span><br><span class="line"></span><br><span class="line">                     [1</span><br><span class="line">                      &quot;REACTION&quot;</span><br><span class="line">                      58</span><br><span class="line">                      &quot;全身非特异性反应&quot;</span><br><span class="line">                      59</span><br><span class="line">                      &quot;发热&quot;]</span><br><span class="line"></span><br><span class="line">                     [1</span><br><span class="line">                      &quot;DISPOSE&quot;</span><br><span class="line">                      86</span><br><span class="line">                      &quot;处理方式&quot;</span><br><span class="line">                      89</span><br><span class="line">                      &quot;局部处理(冰敷)&quot;]]&#125;)</span><br><span class="line">=&gt; 3</span><br><span class="line">2019-06-15 15:16:06,929 [nRepl-session-353b6f60-9fd8-415c-9baa-19f7eb4a97f9] INFO  jdbc.sqlonly - batching 1 statements: 1: INSERT INTO `t_cure_reaction_detail` (`main_id`, `type`, `dict_key_id`, </span><br><span class="line">`dict_key_name`, `dict_value_id`, `dict_value_name`) VALUES (1,&apos;REACTION&apos;,62,&apos;哮喘症状&apos;,68,&apos;气闭&apos;),(1,&apos;REACTION&apos;,58,&apos;全身非特异性反应&apos;,59,&apos;发热&apos;),(1,&apos;DISPOSE&apos;,86,&apos;处理方式&apos;,89,&apos;局部处理(冰敷)&apos;)</span><br></pre></td></tr></table></figure><p>需要<strong>注意</strong>的是传入的vector，里面也是vector，按照sql中的顺序，不是map结构。</p><h4 id="5、mysql中的字段表名和字段下划线在clojure中用中线连接的统一适配"><a href="#5、mysql中的字段表名和字段下划线在clojure中用中线连接的统一适配" class="headerlink" title="5、mysql中的字段表名和字段下划线在clojure中用中线连接的统一适配"></a>5、mysql中的字段表名和字段下划线在clojure中用中线连接的统一适配</h4><p><a href="https://github.com/druids/hugsql-adapter-case" target="_blank" rel="noopener">druids</a>提供了几个adapter，用来处理转换关系，比如有驼峰，中线等，我们使用连接符转换，即创建connection时加入kebab-case：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defstate</span> ^<span class="symbol">:dynamic</span> *db*</span><br><span class="line">          <span class="symbol">:start</span> (<span class="name"><span class="builtin-name">do</span></span> (<span class="name">Class/forName</span> <span class="string">"net.sf.log4jdbc.DriverSpy"</span>)</span><br><span class="line">                     (<span class="name"><span class="builtin-name">if-let</span></span> [jdbc-url (<span class="name">env</span> <span class="symbol">:database-url</span>)]</span><br><span class="line">                       (<span class="name">conman/connect!</span> &#123;<span class="symbol">:jdbc-url</span> jdbc-url&#125;)</span><br><span class="line">                       (<span class="name"><span class="builtin-name">do</span></span></span><br><span class="line">                         (<span class="name">log/warn</span> <span class="string">"database connection URL was not found, please set :database-url in your config, e.g: dev-config.edn"</span>)</span><br><span class="line">                         *db*)))</span><br><span class="line">          <span class="symbol">:stop</span> (<span class="name">conman/disconnect!</span> *db*))</span><br><span class="line">(<span class="name">conman/bind-connection</span> *db* &#123;<span class="symbol">:adapter</span> (<span class="name">kebab-adapter</span>)&#125; <span class="string">"sql/queries.sql"</span>)</span><br></pre></td></tr></table></figure><p>这个adapter在init项目时已经引入了，就看使用不使用。</p><h4 id="6、获取环境变量的值"><a href="#6、获取环境变量的值" class="headerlink" title="6、获取环境变量的值"></a>6、获取环境变量的值</h4><p>环境变量比较好获取，比如微信的配置和获取</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="symbol">:weixin</span>           &#123;<span class="symbol">:app-id</span> <span class="string">"wx9258d165932dad73"</span></span><br><span class="line">                    <span class="symbol">:secret</span> <span class="string">"my-secret"</span>&#125;</span><br></pre></td></tr></table></figure><p>在dev/test/prod中配置结构相同，</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">require</span> '[alk-wxapi.config <span class="symbol">:refer</span> [env]])</span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> get-weixin-access-token [code]</span><br><span class="line">  (<span class="name"><span class="builtin-name">let</span></span> [url (<span class="name"><span class="builtin-name">format</span></span> <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&amp;secret=%s&amp;code=%s&amp;grant_type=authorization_code"</span></span><br><span class="line">                    (<span class="name"><span class="builtin-name">-&gt;</span></span> env</span><br><span class="line">                        <span class="symbol">:weixin</span></span><br><span class="line">                        <span class="symbol">:app-id</span>)</span><br><span class="line">                    (<span class="name"><span class="builtin-name">-&gt;</span></span> env</span><br><span class="line">                        <span class="symbol">:weixin</span></span><br><span class="line">                        <span class="symbol">:secret</span>)</span><br><span class="line">                    code)]</span><br><span class="line">    (<span class="name">log/info</span> <span class="string">"请求微信access-token, url: %s"</span> url) url))</span><br></pre></td></tr></table></figure><p>如果配置是一层，使用也只需写一层key。<br><strong>特别说明</strong>：<br>在将redis的connetion从clj修改成从环境变量中获取时，也是一样的配置和获取，但是碰到了问题，在request里查看env中的redis的各项都有值，但是调用redis的地方却提示无法创建connection，</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> alk-wxapi.db.redis</span><br><span class="line">  (<span class="symbol">:require</span> [taoensso.carmine <span class="symbol">:as</span> car <span class="symbol">:refer</span> (<span class="name">wcar</span>)]</span><br><span class="line">            [alk-wxapi.config <span class="symbol">:refer</span> [env]]</span><br><span class="line">            [mount.core <span class="symbol">:refer</span> [defstate]]))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">def</span></span> server1-conn</span><br><span class="line">          <span class="symbol">:start</span></span><br><span class="line">          &#123;<span class="symbol">:pool</span> &#123;&#125;</span><br><span class="line">           <span class="symbol">:spec</span> &#123;<span class="symbol">:host</span>       (<span class="name"><span class="builtin-name">-&gt;</span></span> env <span class="symbol">:redis-host</span>)</span><br><span class="line">                  <span class="symbol">:port</span>       (<span class="name"><span class="builtin-name">-&gt;</span></span> env <span class="symbol">:redis-port</span>)</span><br><span class="line">                  <span class="symbol">:password</span>   (<span class="name"><span class="builtin-name">-&gt;</span></span> env <span class="symbol">:redis-password</span>)</span><br><span class="line">                  <span class="symbol">:timeout-ms</span> (<span class="name"><span class="builtin-name">-&gt;</span></span> env <span class="symbol">:redis-timeout-ms</span>)</span><br><span class="line">                  <span class="symbol">:db</span>         (<span class="name"><span class="builtin-name">-&gt;</span></span> env <span class="symbol">:redis-db</span>)&#125;&#125;)</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defmacro</span></span> wcar* [&amp; body] `(<span class="name">car/wcar</span> server1-conn ~@body))</span><br></pre></td></tr></table></figure><p>最后得知是因为env被定义了个state，</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> alk-wxapi.config</span><br><span class="line">  (<span class="symbol">:require</span> [cprop.core <span class="symbol">:refer</span> [load-config]]</span><br><span class="line">            [cprop.source <span class="symbol">:as</span> source]</span><br><span class="line">            [mount.core <span class="symbol">:refer</span> [args defstate]]))</span><br><span class="line"></span><br><span class="line">(<span class="name">defstate</span> env</span><br><span class="line">  <span class="symbol">:start</span></span><br><span class="line">  (<span class="name">load-config</span></span><br><span class="line">    <span class="symbol">:merge</span></span><br><span class="line">    [(<span class="name">args</span>)</span><br><span class="line">     (<span class="name">source/from-system-props</span>)</span><br><span class="line">     (<span class="name">source/from-env</span>)]))</span><br></pre></td></tr></table></figure><p>但是按照<a href="https://github.com/ptaoussanis/carmine" target="_blank" rel="noopener">说明文档</a>redis的conn是个常规的def定义的函数，但是它下面的使用是个宏<code>defmacro</code>，宏是在编译的执行的，因此在初始化时evn环没有ready，所以无法创建出connection。需要将server1-conn改成一个state，state有依赖状态，会等到env完成后才产生。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(defstate server1-conn </span><br><span class="line"> ...</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="7、jar引入及依赖冲突解决："><a href="#7、jar引入及依赖冲突解决：" class="headerlink" title="7、jar引入及依赖冲突解决："></a>7、jar引入及依赖冲突解决：</h4><ul><li>lein deps :tree  查看包依赖。</li><li>引入新的jar时在<code>project.clj</code>的<code>:dependencies</code>按说明引入，跟maven一样，分groupId、artifactId、version。</li><li>排除某sdk里的某些冲突包</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[com.baidu.aip/java-sdk &quot;4.11.0&quot;</span><br><span class="line"> :exclusions [org.slf4j/slf4j-simple]]</span><br></pre></td></tr></table></figure><h4 id="8、spec使用"><a href="#8、spec使用" class="headerlink" title="8、spec使用"></a>8、spec使用</h4><p>spec的使用需要引入<code>[clojure.spec.alpha :as s]</code>和<code>[spec-tools.core :as st]</code>，看个spec的定义：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">s/def</span> <span class="symbol">::page</span></span><br><span class="line">  (<span class="name">st/spec</span></span><br><span class="line">    &#123;<span class="symbol">:spec</span>            int?</span><br><span class="line">     <span class="symbol">:description</span>     <span class="string">"页码，从0开始"</span></span><br><span class="line">     <span class="symbol">:swagger/default</span> <span class="string">"0"</span></span><br><span class="line">     <span class="symbol">:reason</span>          <span class="string">"页码参数不能为空"</span>&#125;))</span><br><span class="line"></span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::size</span></span><br><span class="line">  (<span class="name">st/spec</span></span><br><span class="line">    &#123;<span class="symbol">:spec</span>            int?</span><br><span class="line">     <span class="symbol">:description</span>     <span class="string">"每页条数"</span></span><br><span class="line">     <span class="symbol">:swagger/default</span> <span class="number">10</span></span><br><span class="line">     <span class="symbol">:reason</span>          <span class="string">"条数参数不能为空"</span>&#125;))</span><br></pre></td></tr></table></figure><p>使用：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">"/page"</span></span><br><span class="line">    &#123;<span class="symbol">:get</span> &#123;<span class="symbol">:summary</span>    <span class="string">"分页获取字典数据"</span></span><br><span class="line">           <span class="symbol">:parameters</span> &#123;<span class="symbol">:query</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">::page</span> <span class="symbol">::size</span>])</span><br><span class="line">                        <span class="symbol">:handler</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [page]</span><br><span class="line">                                         <span class="symbol">:opt-un</span> [size])&#125;</span><br><span class="line">           <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;&#123;<span class="symbol">:keys</span> [page, size]&#125; <span class="symbol">:query</span>&#125; <span class="symbol">:parameters</span> <span class="symbol">:as</span> request&#125;]</span><br><span class="line">                         &#123;<span class="symbol">:status</span> <span class="number">200</span></span><br><span class="line">                          <span class="symbol">:body</span>   &#123;<span class="symbol">:code</span> <span class="number">10</span></span><br><span class="line">                                   <span class="symbol">:data</span> &#123;<span class="symbol">:total-elements</span> (<span class="name"><span class="builtin-name">-&gt;&gt;</span></span> (<span class="name">db/get-dicts-page</span> &#123;<span class="symbol">:count</span> <span class="literal">true</span>&#125;)</span><br><span class="line">                                                               (<span class="name"><span class="builtin-name">map</span></span> <span class="symbol">:total-elements</span>)</span><br><span class="line">                                                               (<span class="name"><span class="builtin-name">first</span></span>))</span><br><span class="line">                                          <span class="symbol">:content</span>        (<span class="name">db/get-dicts-page</span> &#123;<span class="symbol">:page</span> page</span><br><span class="line">                                                                              <span class="symbol">:size</span> size&#125;)&#125;&#125;&#125;)&#125;&#125;]</span><br></pre></td></tr></table></figure><ul><li>spec的参数也可以定义在其他namespace里，使用时加上namespace的名字即可，比如一个叫base的namespace里定义参数如下：</li></ul><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">s/def</span> <span class="symbol">:base/role</span></span><br><span class="line">  (<span class="name">st/spec</span></span><br><span class="line">    &#123;<span class="symbol">:spec</span>        #&#123;<span class="string">"PATIENT"</span>, <span class="string">"DOCTOR"</span>&#125;</span><br><span class="line">     <span class="symbol">:description</span> <span class="string">"角色"</span></span><br><span class="line">     <span class="symbol">:reason</span>      <span class="string">"角色不能为空"</span>&#125;))</span><br></pre></td></tr></table></figure><p>这个枚举类型的spec在另一个namespace里使用时<strong>不需要</strong>在require里引入这个base，而直接在spec里加namespace的名字，是这样的：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:parameters</span> &#123;<span class="symbol">:header</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">:base/role</span>])&#125;</span><br></pre></td></tr></table></figure><ul><li>用coll-of定义出一个list</li></ul><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">s/def</span> <span class="symbol">::head-id</span> id?)</span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::url</span> string?)</span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::unmatched-head</span></span><br><span class="line">  (<span class="name">s/keys</span> <span class="symbol">:req</span> [<span class="symbol">::head-id</span> <span class="symbol">::url</span>]))</span><br><span class="line"></span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::unmatched-head-result</span></span><br><span class="line">  (<span class="name">st/spec</span></span><br><span class="line">   &#123;<span class="symbol">:spec</span> (<span class="name">s/coll-of</span> <span class="symbol">::unmatched-head</span>)&#125;))</span><br></pre></td></tr></table></figure><p>再比定义一个下面的post的body体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;patient-id&quot;: &quot;string&quot;,</span><br><span class="line">  &quot;patient-ext-list&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;dict-id&quot;: 0,</span><br><span class="line">      &quot;dict-type&quot;: &quot;string&quot;,</span><br><span class="line">      &quot;dict-value&quot;: &quot;string&quot;,</span><br><span class="line">      &quot;other-value&quot;: &quot;string&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>spec定义<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">s/def</span> <span class="symbol">::dict-id</span> int?)</span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::dict-value</span> string?)</span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::dict-type</span> string?)</span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::other-value</span> string?)</span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::patient-ext-list</span> (<span class="name">s/coll-of</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">::dict-id</span> <span class="symbol">::dict-type</span> <span class="symbol">::dict-value</span> <span class="symbol">::other-value</span>])))</span><br><span class="line">(<span class="name">s/def</span> <span class="symbol">::ext-body</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">:base/patient-id</span> <span class="symbol">::patient-ext-list</span>]))</span><br></pre></td></tr></table></figure></p><p>coll-of函数还接收可选的参数，用来对数组中的元素进行限制，可选参数有如下：</p><p>   （1）:kind- - - -可以指定数组的类型，vector，set，list等；</p><p>   （2）:count- - - -可以限定数组中元素的个数；</p><p>   （3）:min-count- - - -限定数组中元素个数的最小值</p><p>   （4）:max-count- - - -限定数组中元素个数的最大值</p><p>   （5）:distinct- - - -数组没有重复的元素</p><p>   （6）:into- - - -可以将数组的元素插入到[],(),{},#{}这些其中之一，主要是为了改变conform函数的返回结果</p><ul><li>定义一个指定长度的</li></ul><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">s/def</span> <span class="symbol">::id</span></span><br><span class="line">  (<span class="name">st/spec</span></span><br><span class="line">   &#123;<span class="symbol">:spec</span> (<span class="name">s/and</span> string? #(<span class="name"><span class="builtin-name">=</span></span> (<span class="name"><span class="builtin-name">count</span></span> %) <span class="number">6</span>))</span><br><span class="line">    <span class="symbol">:description</span> <span class="string">"一个长度为6字符串"</span></span><br><span class="line">    <span class="symbol">:swagger/default</span> <span class="string">"666666"</span></span><br><span class="line">    <span class="symbol">:reason</span> <span class="string">"必须是长度为6的字符串"</span>&#125;))</span><br></pre></td></tr></table></figure><ul><li><p>使用函数验证参数合法性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(s/def ::head-body-id</span><br><span class="line">  (st/spec</span><br><span class="line">   &#123;:spec (s/and string? (fn [s]</span><br><span class="line">                           (let [[head-id body-id] (clojure.string/split s #&quot;-&quot;)]</span><br><span class="line">                             (and (s/valid? ::head-id head-id)</span><br><span class="line">                                  (s/valid? ::body-id body-id)))))</span><br><span class="line">    :description &quot;一个长度为13字符串, head-id 和 body-id 用‘-’ 连起来&quot;</span><br><span class="line">    :swagger/default &quot;666666-999999&quot;</span><br><span class="line">    :reason &quot;必须是长度为13的字符串，用-把body-id和head-id连起来&quot;&#125;))</span><br></pre></td></tr></table></figure></li><li><p>定义数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(s/def ::dict-id [string?])    ;Good</span><br><span class="line">(s/def ::dict-id vector?)      ;Bad</span><br></pre></td></tr></table></figure></li></ul><p>更多使用参考：<br><a href="https://www.cnblogs.com/zyfd/p/9962221.html" target="_blank" rel="noopener">clojure.spec库入门学习</a></p><h4 id="9、新增接口加入route"><a href="#9、新增接口加入route" class="headerlink" title="9、新增接口加入route"></a>9、新增接口加入route</h4><p>创建一个新的namespace，参考<a href="http://www.luminusweb.net/docs" target="_blank" rel="noopener">官网说明</a>定义出一个routes函数，然后将其加入到handle.clj中即可，像下面这样一直conj即可：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a14769e39bf36b0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加route"></p><h4 id="10、文件上传接口"><a href="#10、文件上传接口" class="headerlink" title="10、文件上传接口"></a>10、文件上传接口</h4><p>接口定义</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> format-date-time [timestamp]</span><br><span class="line">  (<span class="name"><span class="builtin-name">-&gt;</span></span> <span class="string">"yyyyMMddHHmmss"</span></span><br><span class="line">      (<span class="name">java.text.SimpleDateFormat.</span>)</span><br><span class="line">      (<span class="name">.format</span> timestamp)))</span><br><span class="line"></span><br><span class="line"><span class="comment">;;上传到本地</span></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> upload-file-local [type file]</span><br><span class="line">  (<span class="name"><span class="builtin-name">let</span></span> [file-path (<span class="name"><span class="builtin-name">str</span></span> (<span class="name"><span class="builtin-name">-&gt;</span></span> env <span class="symbol">:file-path</span>) type</span><br><span class="line">                       <span class="string">"/"</span> (<span class="name">format-date-time</span> (<span class="name">java.util.Date.</span>))</span><br><span class="line">                       <span class="string">"/"</span> (<span class="symbol">:filename</span> file))]</span><br><span class="line">    (<span class="name">io/make-parents</span> file-path)</span><br><span class="line">    (<span class="name"><span class="builtin-name">with-open</span></span> [writer (<span class="name">io/output-stream</span> file-path)]</span><br><span class="line">      (<span class="name">io/copy</span> (<span class="symbol">:tempfile</span> file) writer))</span><br><span class="line">    (<span class="name">get-image-data</span> file-path)</span><br><span class="line">    file-path))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> common-routes []</span><br><span class="line">  [<span class="string">"/common"</span></span><br><span class="line">   &#123;<span class="symbol">:swagger</span>    &#123;<span class="symbol">:tags</span> [<span class="string">"文件接口"</span>]&#125;</span><br><span class="line">    <span class="symbol">:parameters</span> &#123;<span class="symbol">:header</span> (<span class="name">s/keys</span> <span class="symbol">:req-un</span> [<span class="symbol">::token</span> <span class="symbol">::role</span>])&#125;</span><br><span class="line">    <span class="symbol">:middleware</span> [token-wrap]&#125;</span><br><span class="line"></span><br><span class="line">   [<span class="string">"/files"</span></span><br><span class="line">    &#123;<span class="symbol">:post</span> &#123;<span class="symbol">:summary</span>    <span class="string">"附件上传接口"</span></span><br><span class="line">            <span class="symbol">:parameters</span> &#123;<span class="symbol">:multipart</span> &#123;<span class="symbol">:file</span> multipart/temp-file-part</span><br><span class="line">                                     <span class="symbol">:type</span> (<span class="name">st/spec</span></span><br><span class="line">                                             &#123;<span class="symbol">:spec</span>        string?</span><br><span class="line">                                              <span class="symbol">:description</span> <span class="string">"类型"</span></span><br><span class="line">                                              <span class="symbol">:reason</span>      <span class="string">"类型必填"</span>&#125;)&#125;&#125;</span><br><span class="line"></span><br><span class="line">            <span class="symbol">:responses</span>  &#123;<span class="number">200</span> &#123;<span class="symbol">:body</span> &#123;<span class="symbol">:code</span> int?, <span class="symbol">:data</span> &#123;<span class="symbol">:file-url</span> string?&#125;&#125;&#125;&#125;</span><br><span class="line">            <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;&#123;<span class="symbol">:keys</span> [type file]&#125; <span class="symbol">:multipart</span>&#125; <span class="symbol">:parameters</span>&#125;]</span><br><span class="line">                          &#123;<span class="symbol">:status</span> <span class="number">200</span></span><br><span class="line">                           <span class="symbol">:body</span>   &#123;<span class="symbol">:code</span>    <span class="number">1</span></span><br><span class="line">                                    <span class="symbol">:message</span> <span class="string">"上传成功"</span></span><br><span class="line">                                    <span class="symbol">:data</span>    &#123;<span class="symbol">:file-url</span> (<span class="symbol">:url</span> (<span class="name">upload-file-local</span> type file))&#125;&#125;&#125;)&#125;&#125;]])</span><br></pre></td></tr></table></figure><p>如果要将图片上传至七牛等有CDN能力的云存储空间，可以使用别人的轮子，或者自己需要造轮子，我这里使用了一个<a href="https://github.com/killme2008/clj.qiniu" target="_blank" rel="noopener">别人造的上传七牛的轮子</a>,先在:dependencies里加入依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[clj.qiniu &quot;0.2.1&quot;]</span><br></pre></td></tr></table></figure></p><p>调用api</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">require</span> '[clj.qiniu <span class="symbol">:as</span> qiniu])</span><br><span class="line"><span class="comment">;;上传到七牛配置</span></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> set-qiniu-config []</span><br><span class="line">  (<span class="name">qiniu/set-config!</span> <span class="symbol">:access-key</span> <span class="string">"my-key"</span></span><br><span class="line">                     <span class="symbol">:secret-key</span> <span class="string">"my-secret"</span>))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">def</span></span> qiniu-config</span><br><span class="line">  &#123;<span class="symbol">:bucket</span> <span class="string">"medical"</span></span><br><span class="line">   <span class="symbol">:domain</span> <span class="string">"http://prfmkg8tt.bkt.clouddn.com/"</span></span><br><span class="line">   <span class="symbol">:prefix</span> <span class="string">"alk/weixin/"</span>&#125;)</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> qiniu-upload-path [type filename]</span><br><span class="line">  (<span class="name"><span class="builtin-name">str</span></span> (<span class="name"><span class="builtin-name">-&gt;</span></span> qiniu-config <span class="symbol">:prefix</span>)</span><br><span class="line">       type <span class="string">"/"</span></span><br><span class="line">       (<span class="name">utils/format-date-time</span> (<span class="name">java.util.Date.</span>))</span><br><span class="line">       <span class="string">"/"</span></span><br><span class="line">       filename))</span><br><span class="line"></span><br><span class="line"><span class="comment">;;七牛云上传，返回上传后地址</span></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> upload-file-qiniu [type file]</span><br><span class="line">  (<span class="name">set-qiniu-config</span>)</span><br><span class="line">  (<span class="name"><span class="builtin-name">let</span></span> [filename (<span class="symbol">:filename</span> file)</span><br><span class="line">        bucket (<span class="name"><span class="builtin-name">-&gt;</span></span> qiniu-config <span class="symbol">:bucket</span>)</span><br><span class="line">        key (<span class="name">qiniu-upload-path</span> type filename)</span><br><span class="line">        res (<span class="name">qiniu/upload-bucket</span> bucket</span><br><span class="line">                                 key</span><br><span class="line">                                 (<span class="symbol">:tempfile</span> file))]</span><br><span class="line">    (<span class="name">log/info</span> <span class="string">"上传七牛云结果："</span> res)</span><br><span class="line">    (<span class="name"><span class="builtin-name">if-not</span></span> (<span class="name"><span class="builtin-name">=</span></span> <span class="number">200</span> (<span class="name"><span class="builtin-name">-&gt;</span></span> res <span class="symbol">:status</span>))</span><br><span class="line">      (<span class="name"><span class="builtin-name">throw</span></span> (<span class="name">Exception.</span> <span class="string">" 附件上传失败 "</span>)))</span><br><span class="line">    (<span class="name"><span class="builtin-name">str</span></span> (<span class="name"><span class="builtin-name">-&gt;</span></span> qiniu-config <span class="symbol">:domain</span>) key)))</span><br></pre></td></tr></table></figure><p>使用的时候将上传local改成upload-file-qiniu即可。</p><h4 id="11、全局跨域配置"><a href="#11、全局跨域配置" class="headerlink" title="11、全局跨域配置"></a>11、全局跨域配置</h4><p>在middleware的<code>wrap-base</code>中加入跨域信息，先配置个*的</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> alk-wxapi.middleware</span><br><span class="line">  (<span class="symbol">:require</span></span><br><span class="line">   [alk-wxapi.env <span class="symbol">:refer</span> [defaults]]</span><br><span class="line">   [alk-wxapi.config <span class="symbol">:refer</span> [env]]</span><br><span class="line">   [ring.middleware.flash <span class="symbol">:refer</span> [wrap-flash]]</span><br><span class="line">   [immutant.web.middleware <span class="symbol">:refer</span> [wrap-session]]</span><br><span class="line">   [ring.middleware.cors <span class="symbol">:refer</span> [wrap-cors]]</span><br><span class="line">   [ring.middleware.defaults <span class="symbol">:refer</span> [site-defaults wrap-defaults]]))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> wrap-base [handler]</span><br><span class="line">  (<span class="name"><span class="builtin-name">-&gt;</span></span> ((<span class="symbol">:middleware</span> defaults) handler)</span><br><span class="line">      wrap-flash</span><br><span class="line">      (<span class="name">wrap-session</span> &#123;<span class="symbol">:cookie-attrs</span> &#123;<span class="symbol">:http-only</span> <span class="literal">true</span>&#125;&#125;)</span><br><span class="line">      (<span class="name">wrap-cors</span> <span class="symbol">:access-control-allow-origin</span> [#<span class="string">".*"</span>]</span><br><span class="line">                 <span class="symbol">:access-control-allow-methods</span> [<span class="symbol">:get</span> <span class="symbol">:put</span> <span class="symbol">:post</span> <span class="symbol">:delete</span>])</span><br><span class="line">      (<span class="name">wrap-defaults</span></span><br><span class="line">       (<span class="name"><span class="builtin-name">-&gt;</span></span> site-defaults</span><br><span class="line">           (<span class="name">assoc-in</span> [<span class="symbol">:security</span> <span class="symbol">:anti-forgery</span>] <span class="literal">false</span>)</span><br><span class="line">           (<span class="name"><span class="builtin-name">dissoc</span></span> <span class="symbol">:session</span>)))))</span><br></pre></td></tr></table></figure><h4 id="12、增加打包环境"><a href="#12、增加打包环境" class="headerlink" title="12、增加打包环境"></a>12、增加打包环境</h4><p>比如增加pre环境，在project.clj中配置uberjar即可，在:profiles里增加,可以参考test环境，比如增加的uberjar-test环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:uberjar-test  &#123;:omit-source    true</span><br><span class="line">                :aot            :all</span><br><span class="line">                :uberjar-name   &quot;alk-wxapi-test.jar&quot;</span><br><span class="line">                :source-paths   [&quot;env/test/clj&quot;]</span><br><span class="line">                :resource-paths [&quot;env/test/resources&quot;]</span><br><span class="line">                :jvm-opts       [&quot;-Dconf=test-config.edn&quot;]&#125;</span><br></pre></td></tr></table></figure><p>打包:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">➜  alk-wxapi git:(master) ✗ lein with-profiles uberjar-test uberjar</span><br><span class="line">Compiling alk-wxapi.common.utils</span><br><span class="line">Compiling alk-wxapi.config</span><br><span class="line">Compiling alk-wxapi.core</span><br><span class="line">Compiling alk-wxapi.db.core</span><br><span class="line">Compiling alk-wxapi.db.db-dicts</span><br><span class="line">Compiling alk-wxapi.db.db-doctor</span><br><span class="line">Compiling alk-wxapi.db.db-guestbook</span><br><span class="line">Compiling alk-wxapi.db.db-hospital</span><br><span class="line">Compiling alk-wxapi.db.db-patient</span><br><span class="line">Compiling alk-wxapi.db.redis</span><br><span class="line">Compiling alk-wxapi.env</span><br><span class="line">Compiling alk-wxapi.handler</span><br><span class="line">Compiling alk-wxapi.middleware</span><br><span class="line">Compiling alk-wxapi.middleware.exception</span><br><span class="line">Compiling alk-wxapi.middleware.formats</span><br><span class="line">Compiling alk-wxapi.middleware.interceptor</span><br><span class="line">Compiling alk-wxapi.middleware.log-interceptor</span><br><span class="line">Compiling alk-wxapi.middleware.token-interceptor</span><br><span class="line">Compiling alk-wxapi.nrepl</span><br><span class="line">Compiling alk-wxapi.routes.base</span><br><span class="line">Compiling alk-wxapi.routes.dicts</span><br><span class="line">Compiling alk-wxapi.routes.doctor</span><br><span class="line">Compiling alk-wxapi.routes.file</span><br><span class="line">Compiling alk-wxapi.routes.guestbook</span><br><span class="line">Compiling alk-wxapi.routes.hospital</span><br><span class="line">Compiling alk-wxapi.routes.patient</span><br><span class="line">Compiling alk-wxapi.routes.patient-cost</span><br><span class="line">Compiling alk-wxapi.routes.patient-examine</span><br><span class="line">Compiling alk-wxapi.routes.public</span><br><span class="line">Compiling alk-wxapi.routes.user</span><br><span class="line">Compiling alk-wxapi.routes.weixin</span><br><span class="line">Compiling alk-wxapi.validation</span><br><span class="line">Warning: skipped duplicate file: config.edn</span><br><span class="line">Warning: skipped duplicate file: logback.xml</span><br><span class="line">Created /Users/mahaiqiang/git/redcreation/alk-wxapi/target/uberjar+uberjar-test/alk-wxapi-0.1.0-SNAPSHOT.jar</span><br><span class="line">Created /Users/mahaiqiang/git/redcreation/alk-wxapi/target/uberjar/alk-wxapi-test.jar</span><br><span class="line">➜  alk-wxapi git:(master) ✗</span><br></pre></td></tr></table></figure></p><h4 id="13、事务"><a href="#13、事务" class="headerlink" title="13、事务"></a>13、事务</h4><p>发起事务使用<code>conman.core/with-transaction</code>，一个例子：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">let</span></span> [timestamp (<span class="name">java.util.Date.</span>)</span><br><span class="line">      id (<span class="name">utils/generate-db-id</span>)]</span><br><span class="line">  (<span class="name">conman.core/with-transaction</span> </span><br><span class="line">    [*db*]</span><br><span class="line">    (<span class="name">db/create-guestbook!</span> (<span class="name"><span class="builtin-name">assoc</span></span> body-params</span><br><span class="line">                            <span class="symbol">:timestamp</span> timestamp</span><br><span class="line">                            <span class="symbol">:id</span> id))</span><br><span class="line">    (<span class="name">db/get-guestbook</span> &#123;<span class="symbol">:id</span> id&#125;)</span><br><span class="line">    (<span class="name"><span class="builtin-name">throw</span></span> (<span class="name">ex-info</span> (<span class="name"><span class="builtin-name">str</span></span> <span class="string">"异常，事务回滚，列表中查看该id的数据是否存在，id:"</span> id) &#123;&#125;))))</span><br></pre></td></tr></table></figure><p>注意：只有在transaction中的exception发生，事务的机制才会生效，我测试时就正好稀里糊涂把throw放到了with-transaction里面，导致总是不会回滚。</p><h4 id="14、工具类"><a href="#14、工具类" class="headerlink" title="14、工具类"></a>14、工具类</h4><p>工具类Utils单独一个namespace，目前收纳</p><ul><li>获取uuid</li></ul><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> generate-db-id []</span><br><span class="line">  (<span class="name">clojure.string/replace</span> (<span class="name"><span class="builtin-name">str</span></span> (<span class="name">java.util.UUID/randomUUID</span>)) <span class="string">"-"</span> <span class="string">""</span>))</span><br></pre></td></tr></table></figure><ul><li>日期时间格式化</li></ul><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> format-time [timestamp]</span><br><span class="line">  (<span class="name"><span class="builtin-name">-&gt;</span></span> <span class="string">"yyyy-MM-dd HH:mm:ss"</span></span><br><span class="line">      (<span class="name">java.text.SimpleDateFormat.</span>)</span><br><span class="line">      (<span class="name">.format</span> timestamp)))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> format-date-time [timestamp]</span><br><span class="line">  (<span class="name"><span class="builtin-name">-&gt;</span></span> <span class="string">"yyyyMMddHHmmss"</span></span><br><span class="line">      (<span class="name">java.text.SimpleDateFormat.</span>)</span><br><span class="line">      (<span class="name">.format</span> timestamp)))</span><br></pre></td></tr></table></figure><h4 id="15、定时任务"><a href="#15、定时任务" class="headerlink" title="15、定时任务"></a>15、定时任务</h4><p>有个比较重量级的<a href="http://clojurequartz.info/articles/guides.html" target="_blank" rel="noopener">http://clojurequartz.info/articles/guides.html</a>库，quartz与在java里的一样，只不过是clojure的实现。<br>我们项目里没有很复杂的需要动态修改的定时任务，因此选择了一个轻量级的库:<a href="https://github.com/jarohen/chime" target="_blank" rel="noopener">chime</a>，api参考github。下面是项目中的一个demo</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">ns</span></span> alk-wxapi.common.scheduler</span><br><span class="line">  (<span class="symbol">:require</span> [chime <span class="symbol">:refer</span> [chime-ch]]</span><br><span class="line">            [clj-time.core <span class="symbol">:as</span> t]</span><br><span class="line">            [clj-time.periodic <span class="symbol">:refer</span> [periodic-seq]]</span><br><span class="line">            [clojure.core.async <span class="symbol">:as</span> a <span class="symbol">:refer</span> [&lt;! go-loop]]</span><br><span class="line">            [clojure.tools.logging <span class="symbol">:as</span> log])</span><br><span class="line">  (<span class="symbol">:import</span> org.joda.time.DateTimeZone))</span><br><span class="line"></span><br><span class="line"><span class="comment">;; FIXME 定时功能应该还没有做    (^_^)</span></span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> times []</span><br><span class="line">  (<span class="name"><span class="builtin-name">rest</span></span> (<span class="name">periodic-seq</span> (<span class="name"><span class="builtin-name">..</span></span> (<span class="name">t/now</span>)</span><br><span class="line">                          (<span class="name">withZone</span> (<span class="name">DateTimeZone/getDefault</span>))</span><br><span class="line">                          #_(<span class="name">withTime</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>))</span><br><span class="line">                      (<span class="name">t/minutes</span> <span class="number">10</span>))))</span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> channel []</span><br><span class="line">  (<span class="name">a/chan</span>))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> chime []</span><br><span class="line">  (<span class="name">chime-ch</span> (<span class="name">times</span>) &#123;<span class="symbol">:ch</span> (<span class="name">channel</span>)&#125;))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> start-scheduler []</span><br><span class="line">  (<span class="name"><span class="builtin-name">let</span></span> [chime-channle (<span class="name">chime</span>)]</span><br><span class="line">    (<span class="name">go-loop</span> []</span><br><span class="line">      (<span class="name"><span class="builtin-name">when-let</span></span> [msg (<span class="name">&lt;!</span> chime-channle)]</span><br><span class="line">        (<span class="name">log/error</span> (<span class="name"><span class="builtin-name">format</span></span> <span class="string">"亲爱的 %s, Clojure repl搞一个小时了，休息一下？"</span></span><br><span class="line">                           (<span class="name">System/getProperty</span> <span class="string">"user.name"</span>)))</span><br><span class="line">        (<span class="name"><span class="builtin-name">recur</span></span>)))</span><br><span class="line">    chime-channle))</span><br></pre></td></tr></table></figure><p>该定时任务项目启动后一个小时执行一次，执行只是简单打个log，效果如下：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-082bf7bd49269db0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="定时任务"></p><h4 id="16、优雅地打印jdbc的执行sql"><a href="#16、优雅地打印jdbc的执行sql" class="headerlink" title="16、优雅地打印jdbc的执行sql"></a>16、优雅地打印jdbc的执行sql</h4><p>项目中默认的jdbc驱动是mysql自身的启动，所以默认的databaseurl也许是这样的</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:database-url</span> <span class="string">"mysql://localhost:3306/demo?user=root&amp;password=password</span></span><br></pre></td></tr></table></figure><p>然而，这样的配置是不会打印出jdbc执行的真正sql的，而我们有时候很需要这些sql，因为他们代表着逻辑，有时候debug也会需要。<br>那么怎么配置才能达到目的呢？<br>我们使用的是log4jdbc，因此需要在project.clj中引入该库，</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[com.googlecode.log4jdbc/log4jdbc <span class="string">"1.2"</span>]</span><br></pre></td></tr></table></figure><p>引入以后修改需要查看sql的profile里的edn配置文件，比如本地dev-config.edn</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:database-url</span> <span class="string">"jdbc:log4jdbc:mysql://localhost:3306/demo?user=root&amp;password=password</span></span><br></pre></td></tr></table></figure><p>然后jdbc连接处自然也得变,routes/db/core.clj</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defstate</span> ^<span class="symbol">:dynamic</span> *db*</span><br><span class="line">          <span class="symbol">:start</span> (<span class="name"><span class="builtin-name">do</span></span> (<span class="name">Class/forName</span> <span class="string">"net.sf.log4jdbc.DriverSpy"</span>)</span><br><span class="line">                     (<span class="name"><span class="builtin-name">if-let</span></span> [jdbc-url (<span class="name">env</span> <span class="symbol">:database-url</span>)]</span><br><span class="line">                       (<span class="name">conman/connect!</span> &#123;<span class="symbol">:jdbc-url</span> jdbc-url&#125;)</span><br><span class="line">                       (<span class="name"><span class="builtin-name">do</span></span></span><br><span class="line">                         (<span class="name">log/warn</span> <span class="string">"database connection URL was not found, please set :database-url in your config, e.g: dev-config.edn"</span>)</span><br><span class="line">                         *db*)))</span><br><span class="line">          <span class="symbol">:stop</span> (<span class="name">conman/disconnect!</span> *db*))</span><br></pre></td></tr></table></figure><p>默认的log配置，使用logback是配置的方式。<br>这样会在log控制台看到很多jdbc的log，因为默认这些日志都是info的，需要调整logback里日志级别。<br>为了分开打印log、error、sql的log，附上我本地的logback配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;10 seconds&quot;&gt;</span><br><span class="line">    &lt;statusListener class=&quot;ch.qos.logback.core.status.NopStatusListener&quot;/&gt;</span><br><span class="line">    &lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;!-- 如果只是想要Info级别的日志，只是过滤info还是会输出Error日志，因为Error的级别高，使用filter，可以避免输出Error日志 --&gt;</span><br><span class="line">        &lt;filter class=&quot;ch.qos.logback.classic.filter.LevelFilter&quot;&gt;</span><br><span class="line">            &lt;!--过滤 Error--&gt;</span><br><span class="line">            &lt;level&gt;ERROR&lt;/level&gt;</span><br><span class="line">            &lt;!--匹配到就禁止--&gt;</span><br><span class="line">            &lt;onMatch&gt;DENY&lt;/onMatch&gt;</span><br><span class="line">            &lt;!--没有匹配到就允许--&gt;</span><br><span class="line">            &lt;onMismatch&gt;ACCEPT&lt;/onMismatch&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br><span class="line">        &lt;file&gt;log/info-wxapi.log&lt;/file&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;log/info-wxapi.%d&#123;yyyy-MM-dd&#125;.%i.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;</span><br><span class="line">                &lt;maxFileSize&gt;100MB&lt;/maxFileSize&gt;</span><br><span class="line">            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;</span><br><span class="line">            &lt;!-- keep 30 days of history --&gt;</span><br><span class="line">            &lt;maxHistory&gt;30&lt;/maxHistory&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;charset&gt;UTF-8&lt;/charset&gt;</span><br><span class="line">            &lt;pattern&gt;%date&#123;ISO8601&#125; [%thread] %-5level %logger&#123;36&#125; - %msg %n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;appender name=&quot;ERRORFILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter--&gt;</span><br><span class="line">        &lt;filter class=&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;&gt;</span><br><span class="line">            &lt;level&gt;Error&lt;/level&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br><span class="line">        &lt;file&gt;log/error-wxapi.log&lt;/file&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;log/error-wxapi.%d&#123;yyyy-MM-dd&#125;.%i.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;</span><br><span class="line">                &lt;maxFileSize&gt;100MB&lt;/maxFileSize&gt;</span><br><span class="line">            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;</span><br><span class="line">            &lt;!-- keep 30 days of history --&gt;</span><br><span class="line">            &lt;maxHistory&gt;10&lt;/maxHistory&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;charset&gt;UTF-8&lt;/charset&gt;</span><br><span class="line">            &lt;pattern&gt;%date&#123;ISO8601&#125; [%thread] %-5level %logger&#123;36&#125; - %msg %n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;appender name=&quot;SQLFILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</span><br><span class="line">        &lt;file&gt;log/sql-wxapi.log&lt;/file&gt;</span><br><span class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</span><br><span class="line">            &lt;fileNamePattern&gt;log/sql-wxapi.%d&#123;yyyy-MM-dd&#125;.%i.log&lt;/fileNamePattern&gt;</span><br><span class="line">            &lt;timeBasedFileNamingAndTriggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;&gt;</span><br><span class="line">                &lt;maxFileSize&gt;100MB&lt;/maxFileSize&gt;</span><br><span class="line">            &lt;/timeBasedFileNamingAndTriggeringPolicy&gt;</span><br><span class="line">            &lt;!-- keep 30 days of history --&gt;</span><br><span class="line">            &lt;maxHistory&gt;10&lt;/maxHistory&gt;</span><br><span class="line">        &lt;/rollingPolicy&gt;</span><br><span class="line">        &lt;encoder&gt;</span><br><span class="line">            &lt;charset&gt;UTF-8&lt;/charset&gt;</span><br><span class="line">            &lt;pattern&gt;%date&#123;ISO8601&#125; [%thread] %-5level %logger&#123;36&#125; - %msg %n&lt;/pattern&gt;</span><br><span class="line">        &lt;/encoder&gt;</span><br><span class="line">    &lt;/appender&gt;</span><br><span class="line"></span><br><span class="line">    &lt;logger name=&quot;org.apache.http&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;org.xnio.nio&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;com.zaxxer.hikari&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;io.undertow.session&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;io.undertow.request&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;jdbc.audit&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;jdbc.sqltiming&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;jdbc.connection&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line">    &lt;logger name=&quot;jdbc.resultset&quot; level=&quot;warn&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;logger name=&quot;wxapi&quot; level=&quot;INFO&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;FILE&quot;/&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;ERRORFILE&quot;/&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line"></span><br><span class="line">    &lt;logger name=&quot;jdbc.sqlonly&quot; level=&quot;INFO&quot; additivity=&quot;false&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;SQLFILE&quot;/&gt;</span><br><span class="line">    &lt;/logger&gt;</span><br><span class="line"></span><br><span class="line">    &lt;root level=&quot;ERROR&quot;&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;ERRORFILE&quot;/&gt;</span><br><span class="line">        &lt;appender-ref ref=&quot;FILE&quot;/&gt;</span><br><span class="line">    &lt;/root&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><p><code>:as request</code>的意思是包含前面指定获取的参数的所有。<br>当然，如你所知，clojure确实足够灵活，取参方式也还有方式，比如<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">"/path/good-all-params/:id"</span></span><br><span class="line">   &#123;<span class="symbol">:post</span> &#123;<span class="symbol">:summary</span>    <span class="string">"更多方式"</span></span><br><span class="line">           <span class="symbol">:parameters</span> &#123;<span class="symbol">:path</span>  &#123;<span class="symbol">:id</span> int?&#125;</span><br><span class="line">                        <span class="symbol">:query</span> &#123;<span class="symbol">:name</span> string?&#125;</span><br><span class="line">                        <span class="symbol">:body</span>  &#123;<span class="symbol">:message</span> string?&#125;&#125;</span><br><span class="line">           <span class="symbol">:handler</span>    (<span class="name"><span class="builtin-name">fn</span></span> [&#123;&#123;data <span class="symbol">:body</span>&#125; <span class="symbol">:parameters</span></span><br><span class="line">                             &#123;&#123;<span class="symbol">:keys</span> [id]&#125; <span class="symbol">:path</span>&#125;    <span class="symbol">:parameters</span>]</span><br><span class="line">                        (<span class="name">ok</span> (<span class="name"><span class="builtin-name">format</span></span> <span class="string">" body params: %s "</span> data)))&#125;&#125;]</span><br></pre></td></tr></table></figure></p><p>这里参数名称<code>data</code>可以定义成任何你想叫的名字。</p>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojure爬坑之项目里处理过的复杂逻辑</title>
      <link href="/2019/07/31/clojure%E7%88%AC%E5%9D%91%E4%B9%8B%E9%A1%B9%E7%9B%AE%E9%87%8C%E5%A4%84%E7%90%86%E8%BF%87%E7%9A%84%E5%A4%8D%E6%9D%82%E9%80%BB%E8%BE%91/"/>
      <url>/2019/07/31/clojure%E7%88%AC%E5%9D%91%E4%B9%8B%E9%A1%B9%E7%9B%AE%E9%87%8C%E5%A4%84%E7%90%86%E8%BF%87%E7%9A%84%E5%A4%8D%E6%9D%82%E9%80%BB%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<p>clojure中调用java,解决jar包依赖冲突</p><p><a href="https://www.jianshu.com/p/597b88132e0b" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="1、一个高阶函数的使用：将db查询结果日期进行format，并且group和求sum，重新组织结构"><a href="#1、一个高阶函数的使用：将db查询结果日期进行format，并且group和求sum，重新组织结构" class="headerlink" title="1、一个高阶函数的使用：将db查询结果日期进行format，并且group和求sum，重新组织结构"></a>1、一个高阶函数的使用：将db查询结果日期进行format，并且group和求sum，重新组织结构</h3><p>从DB中查到的map结果集如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">(alk-wxapi.db.db-patient/get-patient-cost</span><br><span class="line">  &#123;:page       0,</span><br><span class="line">   :size       10,</span><br><span class="line">   :patient-id 222&#125;)</span><br><span class="line">=&gt;</span><br><span class="line">(&#123;:deleted 0,</span><br><span class="line">  :drug-flag 1,</span><br><span class="line">  :drug-id 1,</span><br><span class="line">  :cost-date #object[java.time.LocalDate 0x2d30b554 &quot;2019-05-07&quot;],</span><br><span class="line">  :id &quot;1&quot;,</span><br><span class="line">  :create-time #object[java.time.LocalDateTime 0x76211aed &quot;2019-06-05T22:42:14&quot;],</span><br><span class="line">  :count 2,</span><br><span class="line">  :drug-name &quot;安脱达&quot;,</span><br><span class="line">  :patient-id &quot;222&quot;,</span><br><span class="line">  :sum 58.0&#125;</span><br><span class="line"> &#123;:deleted 0,</span><br><span class="line">  :drug-flag 1,</span><br><span class="line">  :drug-id 1,</span><br><span class="line">  :cost-date #object[java.time.LocalDate 0x9e55443 &quot;2019-06-05&quot;],</span><br><span class="line">  :id &quot;3&quot;,</span><br><span class="line">  :create-time #object[java.time.LocalDateTime 0x7114ec3c &quot;2019-06-05T22:42:01&quot;],</span><br><span class="line">  :count 10,</span><br><span class="line">  :drug-name &quot;安脱达&quot;,</span><br><span class="line">  :patient-id &quot;222&quot;,</span><br><span class="line">  :sum 120.0&#125;</span><br><span class="line"> &#123;:deleted 0,</span><br><span class="line">  :drug-flag 1,</span><br><span class="line">  :drug-id 4,</span><br><span class="line">  :cost-date #object[java.time.LocalDate 0x59267d5f &quot;2019-05-07&quot;],</span><br><span class="line">  :id &quot;2&quot;,</span><br><span class="line">  :create-time #object[java.time.LocalDateTime 0x27aef2e4 &quot;2019-06-05T22:41:50&quot;],</span><br><span class="line">  :count 15,</span><br><span class="line">  :drug-name &quot;奥马珠&quot;,</span><br><span class="line">  :patient-id &quot;222&quot;,</span><br><span class="line">  :sum 200.0&#125;)</span><br></pre></td></tr></table></figure></p><p>json以后格式是一条条的record：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&quot;data&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;deleted&quot;: 0,</span><br><span class="line">        &quot;drug-flag&quot;: 1,</span><br><span class="line">        &quot;drug-id&quot;: 1,</span><br><span class="line">        &quot;cost-date&quot;: &quot;2019-05-07&quot;,</span><br><span class="line">        &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;create-time&quot;: &quot;2019-06-05T22:42:14&quot;,</span><br><span class="line">        &quot;count&quot;: 2,</span><br><span class="line">        &quot;drug-name&quot;: &quot;安脱达&quot;,</span><br><span class="line">        &quot;patient-id&quot;: &quot;222&quot;,</span><br><span class="line">        &quot;sum&quot;: 58</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;deleted&quot;: 0,</span><br><span class="line">        &quot;drug-flag&quot;: 1,</span><br><span class="line">        &quot;drug-id&quot;: 1,</span><br><span class="line">        &quot;cost-date&quot;: &quot;2019-06-05&quot;,</span><br><span class="line">        &quot;id&quot;: &quot;3&quot;,</span><br><span class="line">        &quot;create-time&quot;: &quot;2019-06-05T22:42:01&quot;,</span><br><span class="line">        &quot;count&quot;: 10,</span><br><span class="line">        &quot;drug-name&quot;: &quot;安脱达&quot;,</span><br><span class="line">        &quot;patient-id&quot;: &quot;222&quot;,</span><br><span class="line">        &quot;sum&quot;: 120</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;deleted&quot;: 0,</span><br><span class="line">        &quot;drug-flag&quot;: 1,</span><br><span class="line">        &quot;drug-id&quot;: 4,</span><br><span class="line">        &quot;cost-date&quot;: &quot;2019-05-07&quot;,</span><br><span class="line">        &quot;id&quot;: &quot;2&quot;,</span><br><span class="line">        &quot;create-time&quot;: &quot;2019-06-05T22:41:50&quot;,</span><br><span class="line">        &quot;count&quot;: 15,</span><br><span class="line">        &quot;drug-name&quot;: &quot;奥马珠&quot;,</span><br><span class="line">        &quot;patient-id&quot;: &quot;222&quot;,</span><br><span class="line">        &quot;sum&quot;: 200</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure></p><p>而预期的json是干这么几件事:</p><blockquote><p>1、根据日期将分组，以指定字段为key，group的日期为value<br>2、对日期进行格式化<br>3、同一日期下的数据，以list为key，record作为value<br>4、对每个list里record的sum字段求和，与list同级，以total-cost为key，和为value<br>5、同4类似，对list里的record的count求和，与list同级，以total-count为key，和为value<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"content"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"cost-date"</span>: <span class="string">"2019-05-07"</span>,</span><br><span class="line">        <span class="attr">"list"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"deleted"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"drug-flag"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"drug-id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"cost-date"</span>: <span class="string">"2019-05-07"</span>,</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"1"</span>,</span><br><span class="line">            <span class="attr">"create-time"</span>: <span class="string">"2019-06-05T22:42:14"</span>,</span><br><span class="line">            <span class="attr">"count"</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">"drug-name"</span>: <span class="string">"安脱达"</span>,</span><br><span class="line">            <span class="attr">"patient-id"</span>: <span class="string">"222"</span>,</span><br><span class="line">            <span class="attr">"sum"</span>: <span class="number">58</span></span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"deleted"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"drug-flag"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"drug-id"</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">"cost-date"</span>: <span class="string">"2019-05-07"</span>,</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"2"</span>,</span><br><span class="line">            <span class="attr">"create-time"</span>: <span class="string">"2019-06-05T22:41:50"</span>,</span><br><span class="line">            <span class="attr">"count"</span>: <span class="number">15</span>,</span><br><span class="line">            <span class="attr">"drug-name"</span>: <span class="string">"奥马珠"</span>,</span><br><span class="line">            <span class="attr">"patient-id"</span>: <span class="string">"222"</span>,</span><br><span class="line">            <span class="attr">"sum"</span>: <span class="number">200</span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"total-cost"</span>: <span class="number">258</span>,</span><br><span class="line">        <span class="attr">"total-count"</span>: <span class="number">17</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"cost-date"</span>: <span class="string">"2019-06-05"</span>,</span><br><span class="line">        <span class="attr">"list"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"deleted"</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">"drug-flag"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"drug-id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"cost-date"</span>: <span class="string">"2019-06-05"</span>,</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"3"</span>,</span><br><span class="line">            <span class="attr">"create-time"</span>: <span class="string">"2019-06-05T22:42:01"</span>,</span><br><span class="line">            <span class="attr">"count"</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="attr">"drug-name"</span>: <span class="string">"安脱达"</span>,</span><br><span class="line">            <span class="attr">"patient-id"</span>: <span class="string">"222"</span>,</span><br><span class="line">            <span class="attr">"sum"</span>: <span class="number">120</span></span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">"total-cost"</span>: <span class="number">120</span>,</span><br><span class="line">        <span class="attr">"total-count"</span>: <span class="number">10</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><p>那么这个处理函数应该怎么写呢？<br>提供一个工具类，处理将关系数据库的record搞成tree的函数<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> group-data-by-keys</span><br><span class="line">  <span class="string">"对一组数据库返回结果&#123;data&#125;进行处理, 使用&#123;group-keys&#125;中的key进行group-by:</span></span><br><span class="line"><span class="string">  (sut/group-data-by-keys test-dict</span></span><br><span class="line"><span class="string">                                  [:group-code1</span></span><br><span class="line"><span class="string">                                   :group-code2]</span></span><br><span class="line"><span class="string">                                  )</span></span><br><span class="line"><span class="string">  可以带多组额外的集合函数，多组[key reducing-function init-value]的格式：</span></span><br><span class="line"><span class="string">  (sut/group-data-by-keys test-dict</span></span><br><span class="line"><span class="string">                                  [:group-code]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                  :a</span></span><br><span class="line"><span class="string">                                  (fn [v e] (+ v (:id e)))</span></span><br><span class="line"><span class="string">                                  0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                                  :b</span></span><br><span class="line"><span class="string">                                  (fn [v e] (+ v (:id e)))</span></span><br><span class="line"><span class="string">                                  0</span></span><br><span class="line"><span class="string">                                  )"</span></span><br><span class="line">  ([data group-keys]</span><br><span class="line">   (<span class="name"><span class="builtin-name">-&gt;&gt;</span></span> data</span><br><span class="line">        (<span class="name">group-by</span> (<span class="name"><span class="builtin-name">fn</span></span> [m] (<span class="name"><span class="builtin-name">select-keys</span></span> m group-keys)))</span><br><span class="line"></span><br><span class="line">        (<span class="name">reduce-kv</span> (<span class="name"><span class="builtin-name">fn</span></span> [m k v]</span><br><span class="line">                     (<span class="name"><span class="builtin-name">assoc</span></span> m k &#123;<span class="symbol">:list</span></span><br><span class="line">                                 (<span class="name"><span class="builtin-name">mapv</span></span></span><br><span class="line">                                  (<span class="name"><span class="builtin-name">fn</span></span> [e]</span><br><span class="line">                                    (<span class="name"><span class="builtin-name">apply</span></span> dissoc e group-keys))</span><br><span class="line">                                  v)&#125;))</span><br><span class="line">                   &#123;&#125;)</span><br><span class="line">        (<span class="name"><span class="builtin-name">mapv</span></span> (<span class="name"><span class="builtin-name">fn</span></span> [e] (<span class="name"><span class="builtin-name">apply</span></span> merge e)))))</span><br><span class="line"></span><br><span class="line">  ([data group-keys key r-func val &amp; krvs]</span><br><span class="line">   (<span class="name"><span class="builtin-name">-&gt;&gt;</span></span> data</span><br><span class="line">        (<span class="name">group-by</span> (<span class="name"><span class="builtin-name">fn</span></span> [m] (<span class="name"><span class="builtin-name">select-keys</span></span> m group-keys)))</span><br><span class="line"></span><br><span class="line">        (<span class="name">reduce-kv</span> (<span class="name"><span class="builtin-name">fn</span></span> [m k v]</span><br><span class="line">                     (<span class="name"><span class="builtin-name">assoc</span></span> m</span><br><span class="line">                            k (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">empty?</span></span> krvs)</span><br><span class="line">                                &#123;<span class="symbol">:list</span></span><br><span class="line">                                 (<span class="name"><span class="builtin-name">mapv</span></span></span><br><span class="line">                                  (<span class="name"><span class="builtin-name">fn</span></span> [e]</span><br><span class="line">                                    (<span class="name"><span class="builtin-name">apply</span></span> dissoc e group-keys))</span><br><span class="line">                                  v)</span><br><span class="line">                                 key (<span class="name"><span class="builtin-name">reduce</span></span> r-func val v)&#125;</span><br><span class="line"></span><br><span class="line">                                (<span class="name"><span class="builtin-name">apply</span></span> assoc &#123;<span class="symbol">:list</span></span><br><span class="line">                                              (<span class="name"><span class="builtin-name">mapv</span></span></span><br><span class="line">                                               (<span class="name"><span class="builtin-name">fn</span></span> [e]</span><br><span class="line">                                                 (<span class="name"><span class="builtin-name">apply</span></span> dissoc e group-keys))</span><br><span class="line">                                               v)</span><br><span class="line">                                              key (<span class="name"><span class="builtin-name">reduce</span></span> r-func val v)&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                       (<span class="name"><span class="builtin-name">let</span></span> [krvs-seq (<span class="name"><span class="builtin-name">partition</span></span> <span class="number">3</span> krvs)]</span><br><span class="line">                                         (<span class="name"><span class="builtin-name">mapcat</span></span> (<span class="name"><span class="builtin-name">fn</span></span> [krv]</span><br><span class="line">                                                   (<span class="name"><span class="builtin-name">let</span></span> [[key r-func val] krv]</span><br><span class="line">                                                     [key (<span class="name"><span class="builtin-name">reduce</span></span> r-func val v)]))</span><br><span class="line">                                                 krvs-seq))))))</span><br><span class="line"></span><br><span class="line">                   &#123;&#125;)</span><br><span class="line">        (<span class="name"><span class="builtin-name">map</span></span> (<span class="name"><span class="builtin-name">fn</span></span> [e] (<span class="name"><span class="builtin-name">apply</span></span> merge e))))))</span><br></pre></td></tr></table></figure></p><p>在提供一个相反作用的函数<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> list-from-group-by</span><br><span class="line"> <span class="string">"去除分组, 作用和group-data-by-key 相反:</span></span><br><span class="line"><span class="string">  一层嵌套: (list-from-group-by &#123;:y 1 :a [&#123;:b 2&#125; &#123;:b 3&#125;]&#125; )))  -&gt;  [&#123;:b 2, :y 1&#125; &#123;:b 3, :y 1&#125;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 双层嵌套:  (mapcat sut/list-from-group-by</span></span><br><span class="line"><span class="string">                  (sut/list-from-group-by &#123;:y 1 :a [&#123;:b [&#123;:x 99&#125;]&#125; &#123;:b [&#123;:x 77&#125;]&#125;]&#125; ))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           -&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">           [&#123;:x 99, :y 1&#125; &#123;:x 77, :y 1&#125;]</span></span><br><span class="line"><span class="string"> "</span></span><br><span class="line"> [m]</span><br><span class="line"> (<span class="name">reduce-kv</span> (<span class="name"><span class="builtin-name">fn</span></span> [r k v]</span><br><span class="line">             (<span class="name"><span class="builtin-name">if</span></span> (<span class="name"><span class="builtin-name">vector?</span></span> v)</span><br><span class="line">              (<span class="name"><span class="builtin-name">-&gt;&gt;</span></span> (<span class="name"><span class="builtin-name">apply</span></span> conj r v)</span><br><span class="line">                   (<span class="name"><span class="builtin-name">map</span></span> #(<span class="name"><span class="builtin-name">merge</span></span> % (<span class="name"><span class="builtin-name">dissoc</span></span> m k))))</span><br><span class="line"></span><br><span class="line">              r))</span><br><span class="line"></span><br><span class="line">            []</span><br><span class="line">            m))</span><br></pre></td></tr></table></figure></p><h3 id="2、一些有用的utils"><a href="#2、一些有用的utils" class="headerlink" title="2、一些有用的utils"></a>2、一些有用的utils</h3><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> lower-case-keywrod</span><br><span class="line"> <span class="string">"把输入的字符串变成keywrokd \"ABC\" -&gt; :abc "</span></span><br><span class="line"> [s]</span><br><span class="line"> (<span class="name"><span class="builtin-name">keyword</span></span> (<span class="name">clojure.string/lower-case</span> s)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> parse-int</span><br><span class="line">  <span class="string">"string 转 int"</span></span><br><span class="line">  [s]</span><br><span class="line">  (<span class="name">Integer/parseInt</span> (<span class="name"><span class="builtin-name">re-find</span></span> #<span class="string">"\A-?\d+"</span> s)))</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> parse-double</span><br><span class="line">  <span class="string">"string 转 doule"</span></span><br><span class="line">  [s]</span><br><span class="line">  (<span class="name">Double/parseDouble</span> (<span class="name"><span class="builtin-name">re-find</span></span> #<span class="string">"\A-?\d+"</span> s)))</span><br></pre></td></tr></table></figure><h3 id="3、筛选和判断一组数据中不为nil的"><a href="#3、筛选和判断一组数据中不为nil的" class="headerlink" title="3、筛选和判断一组数据中不为nil的"></a>3、筛选和判断一组数据中不为nil的</h3><p>有这么一组数：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">def</span></span> x '[(<span class="name">nil</span> <span class="literal">nil</span> <span class="literal">nil</span> <span class="literal">nil</span> <span class="literal">nil</span>) (<span class="name">nil</span> <span class="literal">nil</span> <span class="literal">nil</span> <span class="literal">nil</span> <span class="literal">nil</span>) (&#123;<span class="symbol">:drug-id</span> <span class="string">"300"</span>, <span class="symbol">:drug-name</span> <span class="string">"西替利嗪，左西替利嗪（仙特朗，优泽）"</span>, <span class="symbol">:checked</span> <span class="literal">true</span>, <span class="symbol">:dosage</span> <span class="string">"1111"</span>, <span class="symbol">:dosage-unit</span> <span class="string">"滴/天"</span>&#125; <span class="literal">nil</span> &#123;<span class="symbol">:drug-id</span> <span class="string">"302"</span>, <span class="symbol">:drug-name</span> <span class="string">"谈说斯汀（UPDATE）"</span>, <span class="symbol">:checked</span> <span class="literal">true</span>, <span class="symbol">:dosage</span> <span class="string">"1111"</span>, <span class="symbol">:dosage-unit</span> <span class="string">"滴/天"</span>&#125; <span class="literal">nil</span>) ()])</span><br></pre></td></tr></table></figure></p><p>找出不为nil的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(filter (complement nil?) (mapcat identity x))</span><br></pre></td></tr></table></figure></p><h3 id="4、两个数中找到不为nil的第一个数"><a href="#4、两个数中找到不为nil的第一个数" class="headerlink" title="4、两个数中找到不为nil的第一个数"></a>4、两个数中找到不为nil的第一个数</h3><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name"><span class="builtin-name">first</span></span> (<span class="name"><span class="builtin-name">filter</span></span> (<span class="name"><span class="builtin-name">complement</span></span> <span class="literal">nil</span>?)</span><br><span class="line">        [a b]))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql中存储带特殊符号的微信昵称</title>
      <link href="/2019/07/20/mysql%E4%B8%AD%E5%AD%98%E5%82%A8%E5%B8%A6%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%BE%AE%E4%BF%A1%E6%98%B5%E7%A7%B0/"/>
      <url>/2019/07/20/mysql%E4%B8%AD%E5%AD%98%E5%82%A8%E5%B8%A6%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E7%9A%84%E5%BE%AE%E4%BF%A1%E6%98%B5%E7%A7%B0/</url>
      
        <content type="html"><![CDATA[<p>微信昵称中有表情符号，在获取到微信个人信息保存到mysql时，格式不支持导致保存失败，怎么解决？</p><p><a href="https://www.jianshu.com/p/3bbf19cd29da" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>问题：<br>微信昵称中有表情符号，在获取到微信个人信息保存到mysql时，格式不支持导致保存失败。<br>现象：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-3c59fed9d20e0f01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="微信昵称带表情"></p><p>错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.sql.SQLException: Incorrect string value: &apos;\xF0\x9F\x8C\xB2\xE6\x97...&apos; for column &apos;nick_name&apos; at row 1</span><br><span class="line">        at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[alk-wxapi.jar:na]</span><br><span class="line">        at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[alk-wxapi.jar:na]</span><br><span class="line">        at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[alk-wxapi.jar:na]</span><br><span class="line">        at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:975) ~[alk-wxapi.jar:na]</span><br><span class="line">        at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1114) ~[alk-wxapi.jar:na]</span><br><span class="line">        at com.mysql.cj.jdbc.ClientPreparedStatement.executeBatchSerially(ClientPreparedStatement.java:854) ~[alk-wxapi.jar:na]</span><br><span class="line">        ... 82 common frames omitted</span><br></pre></td></tr></table></figure></p><p>解决思路：<br>1、修改mysql的配置，不外乎server端，客户端，DB<br>2、数据库存base64，base64连图片都能搞，一个表清应该是ok的，只不过需要存储的时候encode，拿出来再decode</p><p>解决方案：<br>果断采用第一种啊，并实践证明，是科学+合理+快捷的方式。<br>修改mysql的配置，配置文件位置各不相同，不再累赘。</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-7081399688eaea88.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><p>修改点就一个，mysqld上加个<code>character-set-server = utf8mb4</code>，就这一个而已。</p><p>然后修改数据库、这个表、这个字段的字符集类型为<code>utf8mb4</code>，ok了。</p><p>验证：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-ca6077b6de39a9e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="字段设置"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-6c220103c4d59fc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="存储"></p><blockquote><p>第二种方式也称应用层解决方案</p></blockquote><p>base64可以用java.util.Base64，也可以用apache提供的。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ant Design Pro或者其他npm管理的项目一键远程部署</title>
      <link href="/2019/07/17/Ant%20Design%20Pro%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96npm%E7%AE%A1%E7%90%86%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%B8%80%E9%94%AE%E8%BF%9C%E7%A8%8B%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/07/17/Ant%20Design%20Pro%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96npm%E7%AE%A1%E7%90%86%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%B8%80%E9%94%AE%E8%BF%9C%E7%A8%8B%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>npm项目没有jenkins这样的自动打包工具的话，本地配置好免密登录，一句命令实现自动部署，还是挺美滋滋的。</p><p><a href="https://www.jianshu.com/p/fab7bcc93a12" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>听起来title有点绕，其实目的很简单，就是本地一条简单命令，实现将项目打包并上传到服务器这么个功能。</p><p>具体实现</p><p>在项目根目录的package.json文件中找到scripts，相信你能看到不少命令，start、build等等，在此处增加一条命令，内容大概如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;dist&quot;: &quot;npm run build &amp;&amp; rsync -p22 -avz --delete-after dist/ root@x.x.x.x:/opt/site/test/antd-pro&quot;,</span><br></pre></td></tr></table></figure></p><p>其他更多命令，在后面拼接 多个&amp;&amp;就可以。</p><p>运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn dist</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dist</span><br></pre></td></tr></table></figure></p><p>解释：<br>这句话会先执行<code>npm run build</code>然后再将dist目录下的所有文件拷贝到目标服务器，当然需要您配好本地到服务器的免密登录。</p>]]></content>
      
      
      <categories>
          
          <category> 后台管理系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antd Pro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mac上将mysql加入环境变量classpath</title>
      <link href="/2019/07/16/Mac%E4%B8%8A%E5%B0%86mysql%E5%8A%A0%E5%85%A5%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8Fclasspath/"/>
      <url>/2019/07/16/Mac%E4%B8%8A%E5%B0%86mysql%E5%8A%A0%E5%85%A5%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8Fclasspath/</url>
      
        <content type="html"><![CDATA[<p>mac系统上安装了mysql server以后，命令行里没有，提示 command not found: mysql<br><a href="https://www.jianshu.com/p/8bb66316eb12" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>mac上玩开发的同志多在使用items的oh-my-zsh这个神奇，不知道的可以看看<a href="https://www.jianshu.com/p/d1c0efe37a43" target="_blank" rel="noopener">这篇文章</a>。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h2><p>我本地安装的mysql服务已经用了大半年了，今天一用命令行，发现居然没有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ which mysql</span><br><span class="line">mysql not found</span><br><span class="line">➜  ~ whereis mysql</span><br><span class="line">➜  ~ mysql</span><br><span class="line">zsh: command not found: mysql</span><br></pre></td></tr></table></figure></p><p>虽然我基本不会用，但是既然知道了，岂能不把它搞好，万一用呢（其实不大可能）。</p><p>还是stackoverflow好使，在<a href="https://stackoverflow.com/questions/35858052/zsh-command-not-found-mysql" target="_blank" rel="noopener">这篇文章</a>中很快就找到了答案，而且配置也非常easy，但是毕竟不是自己的，于是就简单记录一下。</p><p>我本地的.bash_profile文件里面最后面已经加了下面的内容了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$&#123;PATH&#125;:/usr/local/mysql/bin/</span><br></pre></td></tr></table></figure></p><p>但是依然没有，这是前提。</p><h2 id="方案："><a href="#方案：" class="headerlink" title="方案："></a>方案：</h2><p>修改<code>~/.zshrc</code>文件，在最后加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$&#123;PATH&#125;:/usr/local/mysql/bin/</span><br></pre></td></tr></table></figure></p><p>然后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.zshrc</span><br></pre></td></tr></table></figure></p><p>再查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ mysql --version</span><br><span class="line">mysql  Ver 14.14 Distrib 5.7.25, for macos10.14 (x86_64) using  EditLine wrapper</span><br><span class="line">➜  ~ mysql -root -p</span><br><span class="line">Enter password:</span><br></pre></td></tr></table></figure></p><p>完。</p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mac上安装和使用nginx</title>
      <link href="/2019/07/10/Mac%E4%B8%8A%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8nginx/"/>
      <url>/2019/07/10/Mac%E4%B8%8A%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8nginx/</url>
      
        <content type="html"><![CDATA[<p>mac系统上安装和配置nginx供开发使用</p><p><a href="https://www.jianshu.com/p/a23a634400b0" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><h2 id="nginx安装"><a href="#nginx安装" class="headerlink" title="nginx安装"></a>nginx安装</h2><p>在mac系统上，基本上所有软件都可以用brew(brew 又叫Homebrew，brew类似CentOS系统下的Yum软件包管理工具，能在Mac中方便的安装软件或者卸载软件 )这个神器搞定，这也是我一枚穷屌丝为啥非要舍弃国民青睐的windows系统，而费劲巴拉的非要玩黑苹果的原因。<br>言归正传，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew search nginx # brew 查询Nginx</span><br><span class="line"></span><br><span class="line">brew install nginx# brew 安装Nginx</span><br></pre></td></tr></table></figure></p><p>安装完成后，可在终端输通过 brew list nginx 来显示nginx安装路径：</p><ul><li>通过brew install安装应用会在/usr/local/Cellar/目录下；</li><li>某些应用会自动创建软链接放在 /usr/bin 或者 /usr/sbin，同时也可能将整个文件夹放在/usr/local</li><li>可以使用 brew list 软件名 (比如 brew list Nginx)确定Nginx安装位置。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ brew list nginx</span><br><span class="line">/usr/local/Cellar/nginx/1.17.1/.bottle/etc/ (15 files)</span><br><span class="line">/usr/local/Cellar/nginx/1.17.1/bin/nginx</span><br><span class="line">/usr/local/Cellar/nginx/1.17.1/homebrew.mxcl.nginx.plist</span><br><span class="line">/usr/local/Cellar/nginx/1.17.1/html -&gt; ../../../var/www</span><br><span class="line">/usr/local/Cellar/nginx/1.17.1/share/man/man8/nginx.8</span><br><span class="line">/usr/local/Cellar/nginx/1.17.1/share/nginx/ (2 files)</span><br><span class="line">➜  ~ ll /usr/local/Cellar/nginx/1.17.1</span><br><span class="line">total 624</span><br><span class="line">-rw-r--r--  1 mahaiqiang  staff   290K  6 25 20:19 CHANGES</span><br><span class="line">-rw-r--r--  1 mahaiqiang  staff   678B  7 10 18:57 INSTALL_RECEIPT.json</span><br><span class="line">-rw-r--r--  1 mahaiqiang  staff   1.4K  6 25 20:19 LICENSE</span><br><span class="line">-rw-r--r--  1 mahaiqiang  staff    49B  6 25 20:19 README</span><br><span class="line">drwxr-xr-x  3 mahaiqiang  staff   102B  6 25 20:19 bin</span><br><span class="line">-rw-r--r--  1 mahaiqiang  staff   571B  7 10 18:57 homebrew.mxcl.nginx.plist</span><br><span class="line">lrwxr-xr-x  1 mahaiqiang  staff    16B  7 10 18:57 html -&gt; ../../../var/www</span><br><span class="line">drwxr-xr-x  4 mahaiqiang  staff   136B  6 25 20:19 share</span><br><span class="line">➜  ~</span><br><span class="line"># Nginx www目录</span><br><span class="line">➜  ~ cd /usr/local/Cellar/nginx/1.17.1</span><br><span class="line">➜  1.17.1 ll ../../../var/www</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r--  1 mahaiqiang  staff   494B  6 25 20:19 50x.html</span><br><span class="line">-rw-r--r--  1 mahaiqiang  staff   612B  6 25 20:19 index.html</span><br><span class="line">➜  1.17.1 pwd</span><br><span class="line">/usr/local/Cellar/nginx/1.17.1</span><br><span class="line">➜</span><br><span class="line"># 寻找Nginx 配置文件</span><br><span class="line">➜  ~ find /usr/ -name &quot;nginx.conf&quot;</span><br><span class="line">/usr//local/Cellar/nginx/1.17.1/.bottle/etc/nginx/nginx.conf</span><br><span class="line">/usr//local/etc/nginx/nginx.conf</span><br><span class="line">find: /usr//local/mysql-5.7.25-macos10.14-x86_64/data: Permission denied</span><br><span class="line">find: /usr//local/mysql-5.7.25-macos10.14-x86_64/keyring: Permission denied</span><br><span class="line">find: /usr//sbin/authserver: Permission denied</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure></li></ul><p>执行<code>nginx</code>命令启动<br><img src="https://upload-images.jianshu.io/upload_images/4109786-3e9c85ed0139e8e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="nginx"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>一下指名配置文件位置信息，更多使用参考<a href="https://www.jianshu.com/p/a6472181e6be" target="_blank" rel="noopener">Linux 上我常用的几种nginx配置</a></p><h4 id="1、配置文件位置"><a href="#1、配置文件位置" class="headerlink" title="1、配置文件位置"></a>1、配置文件位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h4 id="2、软连接"><a href="#2、软连接" class="headerlink" title="2、软连接"></a>2、软连接</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ which nginx</span><br><span class="line">/usr/local/bin/nginx</span><br><span class="line"> </span><br><span class="line"># /usr/bin/nginx 提示没权限，直接用 /usr/local/bin/nginx</span><br><span class="line">$ ln -s  /usr/local/sbin/nginx /usr/local/bin/nginx</span><br></pre></td></tr></table></figure><h4 id="3、Nginx-隐藏版本号"><a href="#3、Nginx-隐藏版本号" class="headerlink" title="3、Nginx 隐藏版本号"></a>3、Nginx 隐藏版本号</h4><p>nginx 配置文件里增加 server_tokens off;<br>server_tokens作用域是http server location语句块<br>server_tokens默认值是on，表示显示版本信息，设置server_tokens值是off，就可以在所有地方隐藏nginx的版本信息。<br>隐藏了 Nginx 版本号后，重启Nginx即可</p><h4 id="4、多文件配置"><a href="#4、多文件配置" class="headerlink" title="4、多文件配置"></a>4、多文件配置</h4><p>细心的你打开nginx.config会发现文件最后一行是这句</p><blockquote><p>include servers/*;</p></blockquote><p>没错，这句的意思你可以在这个目录下放自己的配置文件，每个server独立的配置文件会被加入到主配置文件中。</p><p>剩下的玩法请参考<a href="https://www.jianshu.com/p/a6472181e6be" target="_blank" rel="noopener">Linux 上我常用的几种nginx配置</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>获取微信公众号的openid并发送模板消息之前后端</title>
      <link href="/2019/06/22/%20%E8%8E%B7%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9A%84openid%E5%B9%B6%E5%8F%91%E9%80%81%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF%E4%B9%8B%E5%89%8D%E5%90%8E%E7%AB%AF/"/>
      <url>/2019/06/22/%20%E8%8E%B7%E5%8F%96%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E7%9A%84openid%E5%B9%B6%E5%8F%91%E9%80%81%E6%A8%A1%E6%9D%BF%E6%B6%88%E6%81%AF%E4%B9%8B%E5%89%8D%E5%90%8E%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<p>微信公众号获取授权，获取微信用户信息，并且发送模板消息。</p><p><a href="https://www.jianshu.com/p/12b57fc2e95b" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>如今的开发感觉已经离不开微信了，虽然相关的文章已经比微信官网还要多了，但是别人家的再好也是别人家的，自己走一遍还是挺有意义的。</p><p>如果是开发环境，还没有审核的微信公众号，那自然是不能发送模板消息的，只能获取到微信用户信息。需要申请个测试的公众号，<a href="http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login&amp;token=1447200436&amp;lang=zh_CN" target="_blank" rel="noopener">官网</a>免费申请。申请好以后，需要在”网页服务”-&gt;”网页账号”里配置一下oauth2.0的授权回调地址。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-64c898f6af86aec8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测试号"></p><p>后面的操作就跟下面我正式的开发者平台一样了。</p><p>作为前端小白，有机会从零开始申请公众号，开发公众号，自然要学到什么记录什么。<br>本篇记录下开发环境怎么获取openid并且发送模板消息的。</p><p>参考<br><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842" target="_blank" rel="noopener">微信网页开发授权官方文档</a><br><a href="https://www.cnblogs.com/jilu/p/6123447.html" target="_blank" rel="noopener">微信公众平台，微信网页授权，redirect_uri参数错误，解决方法</a></p><h2 id="获取微信用户信息"><a href="#获取微信用户信息" class="headerlink" title="获取微信用户信息"></a>获取微信用户信息</h2><p>1、关注微信公众号<br> 2、绑定微信号称为网页开发者<br><img src="https://upload-images.jianshu.io/upload_images/4109786-9d171d42c63604c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"><br> 3、修改微信网页授权<br>关于网页授权回调域名的说明</p><ul><li><p>在微信公众号请求用户网页授权之前，开发者需要先到公众平台官网中的“开发 - 接口权限 - 网页服务 - 网页帐号 - 网页授权获取用户基本信息”的配置选项中，修改授权回调域名。请注意，这里填写的是域名（是一个字符串），而不是URL，因此请勿加 http:// 等协议头； </p></li><li><p>授权回调域名配置规范为全域名，比如需要网页授权的域名为：<a href="http://www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html" target="_blank" rel="noopener">www.qq.com，配置以后此域名下面的页面http://www.qq.com/music.html</a> 、 <a href="http://www.qq.com/login.html" target="_blank" rel="noopener">http://www.qq.com/login.html</a> 都可以进行OAuth2.0鉴权。但<a href="http://pay.qq.com" target="_blank" rel="noopener">http://pay.qq.com</a> 、 <a href="http://music.qq.com" target="_blank" rel="noopener">http://music.qq.com</a> 、 <a href="http://qq.com无法进行OAuth2.0鉴权" target="_blank" rel="noopener">http://qq.com无法进行OAuth2.0鉴权</a> </p></li><li><p>如果公众号登录授权给了第三方开发者来进行管理，则不必做任何设置，由第三方代替公众号实现网页授权即可。</p></li></ul><p>先配置服务器，保证根域名下可以访问到微信提供的测试文件。<br>如果您没有可用的域名，或许<a href="https://www.jianshu.com/p/4f008e2b7622" target="_blank" rel="noopener">这篇文章</a>可以祝您一臂之力。<br>配置好以后是这样的：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-d3d3df2af87655de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"><br>配置授权域名<br><img src="https://upload-images.jianshu.io/upload_images/4109786-d6d9e9d9782cc4db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/4109786-8a7f93f5c7a4e6fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><ul><li>注意：这一步如果是tomcat做的容器，将txt文件放在tomcat/webapps/ROOT/下即可。<br> 如果用的nginx转发的，将文件放在根目录即可。<br>比如：nginx如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    root   /opt/site/alk-patient;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">    try_files $uri $uri/ /index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4109786-39b2cd54e7c21c2a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="目录"><br><img src="https://upload-images.jianshu.io/upload_images/4109786-5e57386772808c06.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>如果这一步没有配置，域名是加不上去的。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-e4dcaffbbb6cc76e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><blockquote><p>这一步要是有问题不会配，只能说这位后台适合去买庆丰包子。</p></blockquote><p>4、获取code<br>回调url要用urlencode处理，比如我的回调地址是https%3a%2f%2fxhapp.3vyd.com%2fMP_verify_5J1FbKvfyqtzU26N.txt<br>设置在微信api里如下<br><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=https%3a%2f%2fxhapp.3vyd.com%2fMP_verify_5J1FbKvfyqtzU26N.txt&amp;response_type=code&amp;scope=snsapi_userinfo&amp;state=123#wechat_redirect</code></p><p>将该URL用微信开发者工具访问后<br><img src="https://upload-images.jianshu.io/upload_images/4109786-99516cf76e2dc795.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><p>同意授权，跳转成功后，想要的code在url里<br><img src="https://upload-images.jianshu.io/upload_images/4109786-54cebbeead99d0d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="code"></p><p>5、获取微信用户信息<br>获取到了code以后，调用服务端的接口，获取用户信息：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-6f49dc7016b29733.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="user-info"><br>服务端看<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1433747234" target="_blank" rel="noopener">微信官网API</a>，出问题概率太小，不再贴代码。粘一下服务端打出来的log：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">=============== REQUEST START ===============</span><br><span class="line"> request-id:d0ae146d-86fa-4dfb-8224-f0f90b234e4a</span><br><span class="line"> request-uri: /api/public/weixin/authorized/001g4LGs0ns6xf1qaPGs0kS1Hs0g4LG4</span><br><span class="line"> request-method: :get</span><br><span class="line"> request-query: </span><br><span class="line"> request-body:  </span><br><span class="line">2019-06-22 15:54:16,796 [XNIO-1 task-2] INFO  alk-wxapi.routes.weixin - 请求微信access-token的 url: %s https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=001g4LGs0ns6xf1qaPGs0kS1Hs0g4LG4&amp;grant_type=authorization_code </span><br><span class="line">2019-06-22 15:54:17,056 [XNIO-1 task-2] INFO  alk-wxapi.routes.weixin - ====== 请求微信access-token返回结果 ===== :  &#123;:access_token 22_laqOVUrxrg5URkqS18gzDqdvgsHlkl5tXxBU6pbaqI9kIqdAdDVMk7zw0gMmoUlR2F1uQnhyzfdlmyixsP3qLA, :expires_in 7200, :refresh_token 22_eHVuzmK9VGxgQsxQV0qwCx9eNoECv7506YXsaXQH9LxEMifD5KwXkTRKAG2WxdlIkj9ZthbSC2wFbtaYGfNClg, :openid oIzsW5sck7l9kmtwDb66_RAvdepY, :scope snsapi_userinfo&#125; </span><br><span class="line">2019-06-22 15:54:17,057 [XNIO-1 task-2] INFO  alk-wxapi.routes.weixin - 请求微信用户信息的 url: %s https://api.weixin.qq.com/sns/userinfo?access_token=22_laqOVUrxrg5URkqS18gzDqdvgsHlkl5tXxBU6pbaqI9kIqdAdDVMk7zw0gMmoUlR2F1uQnhyzfdlmyixsP3qLA&amp;openid=oIzsW5sck7l9kmtwDb66_RAvdepYlang=zh_CN </span><br><span class="line">2019-06-22 15:54:17,256 [XNIO-1 task-2] INFO  alk-wxapi.routes.weixin - ====== 请求微信用户信息user-info返回结果 ===== :  &#123;:sex 1, :nickname 马海强, :city Qingdao, :headimgurl http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqxGWwK3lTGAffuGickR7V1VjAiawaAicIsoxGGAD0yWf2toLUZGAiaFHwS8QDMvZ2vLW3QJloKTnIPQ/132, :openid oIzsW5sck7l9kmtwDb66_RAvdepY, :language zh_CN, :province Shandong, :country CN, :privilege []&#125; </span><br><span class="line">2019-06-22 15:54:38,673 [XNIO-1 task-2] INFO  jdbc.sqlonly - SELECT * FROM `t_patient` p WHERE p.`deleted` = FALSE AND p.`openid` = &apos;oIzsW5sck7l9kmtwDb66_RAvdepY&apos;; </span><br><span class="line"> </span><br><span class="line">2019-06-22 15:54:38,834 [XNIO-1 task-2] INFO  jdbc.sqlonly - batching 1 statements: 1: INSERT INTO `t_patient`(`patient_id`, `nick_name`, `gender`, `openid`, </span><br><span class="line">`province`, `city`, `country`, `headimgurl`, `unionid`, `create_time`, `status`) values (&apos;a8dfb64eb45549b0b109e7170ac131e0&apos;, </span><br><span class="line">&apos;马海强&apos;, &apos;男&apos;, &apos;oIzsW5sck7l9kmtwDb66_RAvdepY&apos;, &apos;Shandong&apos;, &apos;Qingdao&apos;, &apos;CN&apos;, &apos;http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqxGWwK3lTGAffuGickR7V1VjAiawaAicIsoxGGAD0yWf2toLUZGAiaFHwS8QDMvZ2vLW3QJloKTnIPQ/132&apos;, </span><br><span class="line">NULL, NOW(), 20); </span><br><span class="line"> </span><br><span class="line">2019-06-22 15:54:38,841 [XNIO-1 task-2] INFO  alk-wxapi.routes.weixin - 微信公众号注册新用户，用户信息：%s  &#123;:sex 1, :nickname 马海强, :city Qingdao, :headimgurl http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqxGWwK3lTGAffuGickR7V1VjAiawaAicIsoxGGAD0yWf2toLUZGAiaFHwS8QDMvZ2vLW3QJloKTnIPQ/132, :openid oIzsW5sck7l9kmtwDb66_RAvdepY, :language zh_CN, :province Shandong, :country CN, :privilege []&#125; </span><br><span class="line">2019-06-22 15:54:38,843 [XNIO-1 task-2] INFO  alk-wxapi.middleware.log-interceptor - response: &#123;:code 1, :message &quot;操作成功&quot;, :data &#123;:sex 1, :nickname &quot;马海强&quot;, :city &quot;Qingdao&quot;, :headimgurl &quot;http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqxGWwK3lTGAffuGickR7V1VjAiawaAicIsoxGGAD0yWf2toLUZGAiaFHwS8QDMvZ2vLW3QJloKTnIPQ/132&quot;, :openid &quot;oIzsW5sck7l9kmtwDb66_RAvdepY&quot;, :language &quot;zh_CN&quot;, :province &quot;Shandong&quot;, :country &quot;CN&quot;, :privilege []&#125;&#125;</span><br><span class="line"> request-id:d0ae146d-86fa-4dfb-8224-f0f90b234e4a </span><br><span class="line">2019-06-22 15:54:38,853 [XNIO-1 task-2] INFO  alk-wxapi.middleware.log-interceptor - </span><br><span class="line">=============== response END ===============</span><br></pre></td></tr></table></figure></p><p>到此，获得用户信息。</p><h2 id="公众平台配置模板消息"><a href="#公众平台配置模板消息" class="headerlink" title="公众平台配置模板消息"></a>公众平台配置模板消息</h2><p><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1433751277" target="_blank" rel="noopener">官方文档</a></p><p>1、从模板库中选择适合自己的模板，添加称为自己的模板，获取的模板id<br><img src="https://upload-images.jianshu.io/upload_images/4109786-e505ab8839cbd8b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="模板"></p><p>2、查看模板消息详情，确认字段内容<br><img src="https://upload-images.jianshu.io/upload_images/4109786-6328bfe48f0867c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="模板详情"></p><p>3、公众号里基本配置-&gt;IP白名单配置<a href="https://ip.cn/" target="_blank" rel="noopener">当前网络外网地址</a>IP<br><img src="https://upload-images.jianshu.io/upload_images/4109786-b52438e65fb14ab5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><p>4、postman调用发消息</p><ul><li><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140183" target="_blank" rel="noopener">获取access_token</a></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4109786-75003257103769cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><ul><li>发送模板消息<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4c2d80b0a3cb2482.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></li></ul><p>收到的消息<br><img src="https://upload-images.jianshu.io/upload_images/4109786-09da06a747079972.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/200" alt="收到消息"></p><p>完美！<br>收关！</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> 公众号 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojure上一个start最多的集合数据处理库-specter</title>
      <link href="/2019/06/21/clojure%E4%B8%8A%E4%B8%80%E4%B8%AAstart%E6%9C%80%E5%A4%9A%E7%9A%84%E9%9B%86%E5%90%88%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%BA%93-specter/"/>
      <url>/2019/06/21/clojure%E4%B8%8A%E4%B8%80%E4%B8%AAstart%E6%9C%80%E5%A4%9A%E7%9A%84%E9%9B%86%E5%90%88%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%BA%93-specter/</url>
      
        <content type="html"><![CDATA[<p>正如<a href="https://github.com/nathanmarz/specter" target="_blank" rel="noopener">站点</a>介绍<strong>Clojure(Script)’s missing piece</strong></p><p><a href="https://www.jianshu.com/p/72c9211f8443" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a><br>正如<a href="https://github.com/nathanmarz/specter" target="_blank" rel="noopener">站点</a>介绍<strong>Clojure(Script)’s missing piece</strong></p><p>使用示例<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">require</span> '[com.rpl.specter <span class="symbol">:refer</span> <span class="symbol">:all</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 1.1 clojure</span></span><br><span class="line">(<span class="name"><span class="builtin-name">map</span></span> inc [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>])</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">into</span></span> #&#123;&#125; (<span class="name"><span class="builtin-name">map</span></span> inc #&#123;<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>&#125;))</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 1.2 specter</span></span><br><span class="line"></span><br><span class="line">(<span class="name">transform</span> ALL inc #&#123;<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>&#125; )</span><br><span class="line">(<span class="name">transform</span> ALL inc '(<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>))</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 2 方便的操作嵌套数据结构</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 2.1 Clojure</span></span><br><span class="line">(<span class="name"><span class="builtin-name">defn</span></span> apply-fn-to-map [f m]</span><br><span class="line">  (<span class="name"><span class="builtin-name">into</span></span> &#123;&#125;</span><br><span class="line">        (<span class="name"><span class="builtin-name">for</span></span> [[k v] m]</span><br><span class="line">          [k (<span class="name">f</span> v)]) ))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">apply-fn-to-map</span> inc &#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">2</span>&#125;)</span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">map</span></span> #(<span class="name">apply-fn-to-map</span> inc %) [&#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">1</span>&#125; &#123;<span class="symbol">:c</span> <span class="number">1</span> <span class="symbol">:d</span> <span class="number">1</span>&#125;])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 2.2 Specter</span></span><br><span class="line">(<span class="name">transform</span> [MAP-VALS] inc &#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">2</span>&#125;)</span><br><span class="line"></span><br><span class="line">(<span class="name">transform</span> [ALL MAP-VALS] inc [&#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">1</span>&#125; &#123;<span class="symbol">:c</span> <span class="number">1</span> <span class="symbol">:d</span> <span class="number">1</span>&#125;] )</span><br><span class="line"></span><br><span class="line">(<span class="name">transform</span> [ALL MAP-VALS even?] inc [&#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">2</span>&#125; &#123;<span class="symbol">:c</span> <span class="number">3</span> <span class="symbol">:d</span> <span class="number">4</span>&#125;] )</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 工作原理</span></span><br><span class="line"></span><br><span class="line">[&#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">2</span>&#125; &#123;<span class="symbol">:c</span> <span class="number">3</span> <span class="symbol">:d</span> <span class="number">4</span>&#125;]</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; ALL</span></span><br><span class="line">&#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">2</span>&#125;</span><br><span class="line">&#123;<span class="symbol">:c</span> <span class="number">3</span> <span class="symbol">:d</span> <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; MAP-VAL</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; even?</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; inc</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 重建</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; reverse even?</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; reverse MAP-VAL</span></span><br><span class="line">&#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">3</span>&#125;</span><br><span class="line">&#123;<span class="symbol">:c</span> <span class="number">3</span> <span class="symbol">:d</span> <span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; reverse ALL</span></span><br><span class="line">[&#123;<span class="symbol">:a</span> <span class="number">1</span> <span class="symbol">:b</span> <span class="number">3</span>&#125; &#123;<span class="symbol">:c</span> <span class="number">3</span> <span class="symbol">:d</span> <span class="number">5</span>&#125;]</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 具体使用</span></span><br><span class="line"></span><br><span class="line">(<span class="name"><span class="builtin-name">def</span></span> data &#123;<span class="symbol">:result</span> [&#123;<span class="symbol">:hy-x</span>                 <span class="number">45</span>,</span><br><span class="line">                     <span class="symbol">:ft-y</span>                 <span class="number">36</span>,</span><br><span class="line">                     <span class="symbol">:immed-other-dispose</span>  <span class="string">"涂抹药水2"</span>,</span><br><span class="line">                     <span class="symbol">:later-other-reaction</span> <span class="literal">nil</span>,</span><br><span class="line">                     <span class="symbol">:cure-id</span>              <span class="string">"1"</span>,</span><br><span class="line">                     <span class="symbol">:reaction-time</span>        <span class="string">"2019-05-28T14:01:00"</span>,</span><br><span class="line">                     <span class="symbol">:ft-x</span>                 <span class="number">34</span>,</span><br><span class="line">                     <span class="symbol">:immed-other-reaction</span> <span class="string">"胳膊红肿3"</span>,</span><br><span class="line">                     <span class="symbol">:list</span></span><br><span class="line">                     [&#123;<span class="symbol">:type</span>          <span class="string">"REACTION"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"1"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"局部反应"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"手臂肿胀"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">230</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">53</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"疼痛"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">231</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">55</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"活动受限"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">232</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">57</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"热"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">247</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">54</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"瘙痒"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">248</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">56</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"活动受限"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-code</span> <span class="string">"HUODONGSHOUXIAN"</span>,</span><br><span class="line">                         <span class="symbol">:parent-id</span>       <span class="number">52</span>,</span><br><span class="line">                         <span class="symbol">:group-code</span>      <span class="string">"REACTION"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-sort</span> <span class="number">5</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">57</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">52</span>&#125;</span><br><span class="line">                      &#123;<span class="symbol">:type</span>          <span class="string">"REACTION"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"1"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"全身非特异性反应"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"发热"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">233</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">59</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"疲倦"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">234</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">60</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"关节痛"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">235</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">61</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"关节痛"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-code</span> <span class="string">"GUANJIETONG"</span>,</span><br><span class="line">                         <span class="symbol">:parent-id</span>       <span class="number">58</span>,</span><br><span class="line">                         <span class="symbol">:group-code</span>      <span class="string">"REACTION"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-sort</span> <span class="number">3</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">61</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">58</span>&#125;</span><br><span class="line">                      &#123;<span class="symbol">:type</span>          <span class="string">"REACTION"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"1"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"过敏性结膜炎症状"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"眼痒"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">256</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">75</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"眼肿"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">237</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">79</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"结膜充血"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">257</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">77</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"畏光"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">258</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">78</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"眼肿"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-code</span> <span class="string">"YANZHONG"</span>,</span><br><span class="line">                         <span class="symbol">:parent-id</span>       <span class="number">74</span>,</span><br><span class="line">                         <span class="symbol">:group-code</span>      <span class="string">"REACTION"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-sort</span> <span class="number">5</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">79</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">74</span>&#125;</span><br><span class="line">                      &#123;<span class="symbol">:type</span>          <span class="string">"DISPOSE"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"1"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"处理方式"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"抗组胺药"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">238</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">87</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"β受体激动剂(雾化)"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">239</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">90</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"糖皮质激素"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">263</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">88</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"局部处理(冰敷)"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">264</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">89</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">86</span>&#125;</span><br><span class="line">                      &#123;<span class="symbol">:type</span>          <span class="string">"REACTION"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"1"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"哮喘症状"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"咳嗽"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">249</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">64</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"胸闷"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">250</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">65</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"咽痒不适"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-code</span> <span class="string">"YANYANGBUSHI"</span>,</span><br><span class="line">                         <span class="symbol">:parent-id</span>       <span class="number">62</span>,</span><br><span class="line">                         <span class="symbol">:group-code</span>      <span class="string">"REACTION"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-sort</span> <span class="number">5</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">67</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">62</span>&#125;</span><br><span class="line">                      &#123;<span class="symbol">:type</span>          <span class="string">"REACTION"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"1"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"鼻炎症状"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"鼻痒"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">251</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">69</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"喷嚏"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">252</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">70</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"流涕"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">253</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">71</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"鼻塞"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">254</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">72</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"鼻干"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">255</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">73</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"鼻干"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-code</span> <span class="string">"BIGAN"</span>,</span><br><span class="line">                         <span class="symbol">:parent-id</span>       <span class="number">68</span>,</span><br><span class="line">                         <span class="symbol">:group-code</span>      <span class="string">"REACTION"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-sort</span> <span class="number">6</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">73</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">68</span>&#125;</span><br><span class="line">                      &#123;<span class="symbol">:type</span>          <span class="string">"REACTION"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"1"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"过敏性皮肤症状"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"荨麻疹"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">259</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">81</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"湿疹"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">260</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">82</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"皮肤瘙痒"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">261</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">83</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"血管性水肿"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-01T14:02:25"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">262</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">84</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"血管性水肿"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-code</span> <span class="string">"XUEGUANIXINGSHUIZHONG"</span>,</span><br><span class="line">                         <span class="symbol">:parent-id</span>       <span class="number">80</span>,</span><br><span class="line">                         <span class="symbol">:group-code</span>      <span class="string">"REACTION"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-sort</span> <span class="number">4</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">84</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">80</span>&#125;],</span><br><span class="line">                     <span class="symbol">:id</span>                   <span class="number">1</span>,</span><br><span class="line">                     <span class="symbol">:later-other-dispose</span>  <span class="literal">nil</span>,</span><br><span class="line">                     <span class="symbol">:hy-y</span>                 <span class="number">33</span>,</span><br><span class="line">                     <span class="symbol">:reaction-type</span>        <span class="string">"IMMED"</span>&#125;</span><br><span class="line">                    &#123;<span class="symbol">:hy-x</span>                 <span class="number">66</span>,</span><br><span class="line">                     <span class="symbol">:ft-y</span>                 <span class="number">33</span>,</span><br><span class="line">                     <span class="symbol">:immed-other-dispose</span>  <span class="string">""</span>,</span><br><span class="line">                     <span class="symbol">:later-other-reaction</span> <span class="string">"大面积红点"</span>,</span><br><span class="line">                     <span class="symbol">:cure-id</span>              <span class="string">"1"</span>,</span><br><span class="line">                     <span class="symbol">:reaction-time</span>        <span class="string">"2019-05-21T10:03:00"</span>,</span><br><span class="line">                     <span class="symbol">:ft-x</span>                 <span class="number">22</span>,</span><br><span class="line">                     <span class="symbol">:immed-other-reaction</span> <span class="string">""</span>,</span><br><span class="line">                     <span class="symbol">:list</span></span><br><span class="line">                     [&#123;<span class="symbol">:type</span>          <span class="string">"REACTION"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"2"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"全身非特异性反应"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"发热"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-03T14:03:56"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">240</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">59</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"关节痛"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-03T14:03:56"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">241</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">61</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"关节痛"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-code</span> <span class="string">"GUANJIETONG"</span>,</span><br><span class="line">                         <span class="symbol">:parent-id</span>       <span class="number">58</span>,</span><br><span class="line">                         <span class="symbol">:group-code</span>      <span class="string">"REACTION"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-sort</span> <span class="number">3</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">61</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">58</span>&#125;</span><br><span class="line">                      &#123;<span class="symbol">:type</span>          <span class="string">"REACTION"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"2"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"哮喘症状"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"喘息"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-03T14:03:56"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">242</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">63</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"气闭"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-03T14:03:56"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">243</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">66</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"咽痒不适"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-03T14:03:56"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">244</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">67</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"咽痒不适"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-code</span> <span class="string">"YANYANGBUSHI"</span>,</span><br><span class="line">                         <span class="symbol">:parent-id</span>       <span class="number">62</span>,</span><br><span class="line">                         <span class="symbol">:group-code</span>      <span class="string">"REACTION"</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-sort</span> <span class="number">5</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">67</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">62</span>&#125;</span><br><span class="line">                      &#123;<span class="symbol">:type</span>          <span class="string">"DISPOSE"</span>,</span><br><span class="line">                       <span class="symbol">:main-id</span>       <span class="string">"2"</span>,</span><br><span class="line">                       <span class="symbol">:dict-key-name</span> <span class="string">"处理方式"</span>,</span><br><span class="line">                       <span class="symbol">:list</span></span><br><span class="line">                       [&#123;<span class="symbol">:dict-value-name</span> <span class="string">"糖皮质激素"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-03T14:03:56"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">245</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">88</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;</span><br><span class="line">                        &#123;<span class="symbol">:dict-value-name</span> <span class="string">"局部处理(冰敷)"</span>,</span><br><span class="line">                         <span class="symbol">:create-time</span>     <span class="string">"2019-05-03T14:03:56"</span>,</span><br><span class="line">                         <span class="symbol">:id-2</span>            <span class="number">246</span>,</span><br><span class="line">                         <span class="symbol">:dict-value-id</span>   <span class="number">89</span>,</span><br><span class="line">                         <span class="symbol">:show</span>            <span class="literal">true</span>&#125;],</span><br><span class="line">                       <span class="symbol">:dict-key-id</span>   <span class="number">86</span>&#125;],</span><br><span class="line">                     <span class="symbol">:id</span>                   <span class="number">2</span>,</span><br><span class="line">                     <span class="symbol">:later-other-dispose</span>  <span class="string">"抹药"</span>,</span><br><span class="line">                     <span class="symbol">:hy-y</span>                 <span class="number">88</span>,</span><br><span class="line">                     <span class="symbol">:reaction-type</span>        <span class="string">"LATER"</span>&#125;]&#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 2.2.1 select</span></span><br><span class="line"></span><br><span class="line">(<span class="name">select</span> [<span class="symbol">:result</span> ALL <span class="symbol">:list</span> ALL <span class="symbol">:list</span> ALL <span class="symbol">:show</span> ] data)</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 找到:dict-value-name</span></span><br><span class="line"></span><br><span class="line">(<span class="name">select</span> [<span class="symbol">:result</span> ALL <span class="symbol">:list</span> ALL <span class="symbol">:list</span> ALL (<span class="name">submap</span> [<span class="symbol">:dict-value-name</span> <span class="symbol">:show</span>]) ] data)</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 使用transform做数据更新</span></span><br><span class="line">(<span class="name">transform</span> [<span class="symbol">:result</span> ALL <span class="symbol">:list</span> ALL <span class="symbol">:list</span>]</span><br><span class="line">           (<span class="name"><span class="builtin-name">constantly</span></span> <span class="string">"sdsdsdsdsdd"</span>)           data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 使用setval做数据更新</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 替换一个值</span></span><br><span class="line"></span><br><span class="line">(<span class="name">setval</span> [<span class="symbol">:result</span>  FIRST <span class="symbol">:hy-x</span> ] <span class="string">"------"</span> data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 替换一个collection的值</span></span><br><span class="line"></span><br><span class="line">(<span class="name">setval</span> [<span class="symbol">:result</span> ALL <span class="symbol">:list</span> ALL ] <span class="string">"------"</span> data)</span><br><span class="line"></span><br><span class="line">      <span class="comment">;;; 插入一个新值</span></span><br><span class="line"></span><br><span class="line">(<span class="name">setval</span> [<span class="symbol">:result</span> FIRST <span class="symbol">:list</span> FIRST <span class="symbol">:list</span> (<span class="name">nthpath</span> <span class="number">1</span>)  ] <span class="string">"------"</span> data)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
            <tag> specter </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojure编程初体验</title>
      <link href="/2019/06/10/clojure%E7%BC%96%E7%A8%8B%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2019/06/10/clojure%E7%BC%96%E7%A8%8B%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>使用clojure开发web接口常见问题及解决方案</p><p><a href="https://www.jianshu.com/p/12b63627fc56" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h4 id="收藏的学习地址："><a href="#收藏的学习地址：" class="headerlink" title="收藏的学习地址："></a>收藏的学习地址：</h4><p><a href="http://wiki.fnil.net/index.php?title=Leiningen_tutorial%E4%B8%AD%E6%96%87%E7%89%88" target="_blank" rel="noopener">Leiningen中文教程</a><br><a href="http://www.luminusweb.net/docs" target="_blank" rel="noopener">luminusweb官方文档</a><br><a href="https://www.cern.cc/post/2016-06-17-clojure-libraries.html" target="_blank" rel="noopener">Clojure常用包</a><br><a href="https://cljdoc.org/d/leiningen/leiningen/2.9.1/doc/readme" target="_blank" rel="noopener">leiningen  API</a></p><h4 id="学习中命令行里敲过的"><a href="#学习中命令行里敲过的" class="headerlink" title="学习中命令行里敲过的"></a>学习中命令行里敲过的</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">(+ 11 11 1111)</span><br><span class="line"></span><br><span class="line">(/ 1 2)</span><br><span class="line"></span><br><span class="line">(doc /)</span><br><span class="line"></span><br><span class="line">(Take 5 (repeat 10))</span><br><span class="line"></span><br><span class="line">(1 2 3) =&gt; error</span><br><span class="line"></span><br><span class="line">&apos;(1 2 3) =&gt; (1 2 3)</span><br><span class="line"></span><br><span class="line">(doc if)</span><br><span class="line"></span><br><span class="line">(def a-array [1 2 3])</span><br><span class="line"></span><br><span class="line">(def b-array [1 2 3])</span><br><span class="line"></span><br><span class="line">(idertical? a-array b-array)</span><br><span class="line"></span><br><span class="line">(def a-list (1 2 3))</span><br><span class="line"></span><br><span class="line">(def b-list [1 2 3])</span><br><span class="line"></span><br><span class="line">(type a-list)</span><br><span class="line"></span><br><span class="line">(type b-list)</span><br><span class="line"></span><br><span class="line">(conj a-list 9)</span><br><span class="line"></span><br><span class="line">(conj b-list 9)</span><br><span class="line"></span><br><span class="line">(def my-add (fn [x y] (+ x y)))</span><br><span class="line"></span><br><span class="line">(my-add 4 2)</span><br><span class="line"></span><br><span class="line">`#&#123;1 2 3&#125;`</span><br><span class="line"></span><br><span class="line">(type #&#123;1 2 3&#125;)</span><br><span class="line"></span><br><span class="line">(type &#123;:a a&#125;)</span><br><span class="line"></span><br><span class="line">(filter even? [1 2 3 ])</span><br><span class="line"></span><br><span class="line">(map inc [1 2 3])</span><br></pre></td></tr></table></figure><h4 id="常用的一些函数的使用体会"><a href="#常用的一些函数的使用体会" class="headerlink" title="常用的一些函数的使用体会"></a>常用的一些函数的使用体会</h4><ol><li>map<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># map  遍历list，格式化list里map的key对应的value</span><br><span class="line">(require &apos;[clj-time.format :as f])</span><br><span class="line">=&gt; nil</span><br><span class="line">(def custom-formatter (f/formatter &quot;yyyyMMdd&quot;))</span><br><span class="line">=&gt; #&apos;user/custom-formatter</span><br><span class="line">(defn convert-format [d] (f/unparse custom-formatter (f/parse (f/formatter :date-hour-minute-second ) d)))</span><br><span class="line">=&gt; #&apos;user/convert-format</span><br><span class="line">(map (fn [m] (assoc m :create-time (convert-format (:create-time m))) )</span><br><span class="line">     [&#123;:id 1</span><br><span class="line">       :create-time &quot;2019-04-17T14:47:24&quot;&#125;</span><br><span class="line">      &#123;</span><br><span class="line">       :id 2</span><br><span class="line">       :create-time &quot;2019-04-17T14:47:44&quot;&#125;])</span><br><span class="line">=&gt; (&#123;:id 1, :create-time &quot;20190417&quot;&#125; &#123;:id 2, :create-time &quot;20190417&quot;&#125;)</span><br><span class="line"></span><br><span class="line"># 在写一个</span><br><span class="line">(map (fn [m] (assoc m</span><br><span class="line">               :office-name (format &quot;%s-%s&quot; (:office-id m) (:office-name m))))</span><br><span class="line">     </span><br><span class="line">  [&#123;</span><br><span class="line">   :office-id &quot;1&quot;,</span><br><span class="line">   :office-name &quot;耳鼻喉科&quot;,</span><br><span class="line">   :hospital-id &quot;1&quot;,</span><br><span class="line">   :create-time &quot;2019-04-17T14:47:24&quot;,</span><br><span class="line">   :deleted 0</span><br><span class="line">   &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">   :office-id &quot;2&quot;,</span><br><span class="line">   :office-name &quot;变态反应科&quot;,</span><br><span class="line">   :hospital-id &quot;1&quot;,</span><br><span class="line">   :create-time &quot;2019-04-17T14:47:44&quot;,</span><br><span class="line">   :deleted 0</span><br><span class="line">   &#125;])</span><br><span class="line">=&gt;</span><br><span class="line">(&#123;:office-id &quot;1&quot;, :office-name &quot;1-耳鼻喉科&quot;, :hospital-id &quot;1&quot;, :create-time &quot;2019-04-17T14:47:24&quot;, :deleted 0&#125;</span><br><span class="line"> &#123;:office-id &quot;2&quot;, :office-name &quot;2-变态反应科&quot;, :hospital-id &quot;1&quot;, :create-time &quot;2019-04-17T14:47:44&quot;, :deleted 0&#125;)</span><br></pre></td></tr></table></figure></li></ol><p>2、date、timestamp、string<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(import &apos;[java.text SimpleDateFormat]) </span><br><span class="line">(import &apos;[java.sql Timestamp]) </span><br><span class="line"></span><br><span class="line">;; timelong is the long int time seconds </span><br><span class="line">(defn timestamp2date [timelong] </span><br><span class="line">(.toString (Timestamp. timelong))) </span><br><span class="line"></span><br><span class="line">;; date is date string 04/16/2012 </span><br><span class="line">(defn date2timestamp [date] </span><br><span class="line">(.getTime (.parse (SimpleDateFormat. &quot;MM/dd/yyyy&quot;) date)))</span><br></pre></td></tr></table></figure></p><p>3、conj<br>4、seq<br>5、when-let<br>6、comp<br>就是对参数从右到左组合执行所有函数，如下面的函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">((comp f1 f2 .. fn) arg1 arg2 .. argn)</span><br></pre></td></tr></table></figure></p><p>可以转变为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(f1 (f2 (.. (fn arg1 arg2 .. argn))))</span><br></pre></td></tr></table></figure></p><p>举例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">((comp str +) 8 8 8)   </span><br><span class="line">;;=&gt; &quot;24&quot;</span><br><span class="line">(filter (comp not zero?) [0 1 0 2 0 3 0 4])</span><br><span class="line">;;=&gt; (1 2 3 4)</span><br><span class="line">(map</span><br><span class="line">   (comp - (partial + 3) (partial * 2))</span><br><span class="line">       [1 2 3 4])</span><br><span class="line">;;=&gt;  (-5 -7 -9 -11)</span><br></pre></td></tr></table></figure></p><p>7、partial<br>形如：<code>((partial  f  arg1 arg2 .. argn)  arga argb .. argz)</code><br>就是执行：<br>(f  arg1 arg2 .. argn  arga argb .. argz)<br>注意：偏函数的第一个参数是一个函数，后面至少有1个其他参数<br>partial函数称为“偏函数”或者“部分完整函数”，因为它是不完整的，定义也用def而不是defn。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user=&gt; (def hundred-times (partial * 100))</span><br><span class="line">#&apos;user/hundred-times</span><br><span class="line"></span><br><span class="line">user=&gt; (hundred-times 5)</span><br><span class="line">500</span><br><span class="line"></span><br><span class="line">user=&gt; (hundred-times 4 5 6)</span><br><span class="line">12000</span><br></pre></td></tr></table></figure></p><p>8、reduce<br>9、apply</p><h4 id="函数间对比使用"><a href="#函数间对比使用" class="headerlink" title="函数间对比使用"></a>函数间对比使用</h4><p>1、assoc vs update-in vs assoc-in<br>说法不一，详情参考<a href="http://www.bertschneider.de/2011/01/11/Assoc-vs-Update/" target="_blank" rel="noopener">Assoc-vs-Update/</a><br>assoc，只允许更新数据结构的第一层。处理数据的性能最高，几乎是assoc-in的两倍。<br>assoc-in 和update-in 可以使用路径表达式改变数据结构的内层。<br>如果新的值不依赖旧值，assoc-in就可以满足需求，不需要使用update-in;在有依赖关系时，使用update-in<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(defrecord Person [fname lname address]）</span><br><span class="line">(defrecourd Address [street city state zip])</span><br><span class="line"></span><br><span class="line">(def stu (Person. &quot;Stu&quot; &quot;Halloway&quot; (Address. &quot;200 N Mangum&quot; &quot;Durham&quot; &quot;NC&quot; 27707)))</span><br><span class="line">(assoc stu :fname &quot;Stuart&quot;)</span><br><span class="line">(upate-in stu [:address :zip] inc)</span><br></pre></td></tr></table></figure></p><h4 id="有用的代码段"><a href="#有用的代码段" class="headerlink" title="有用的代码段"></a>有用的代码段</h4><p>1、记录接口响应时间middleware<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(defn record-response-time [handler]</span><br><span class="line">  (fn [req]</span><br><span class="line">    (let [start-date (System/currentTimeMillis)]</span><br><span class="line">      (handler req)</span><br><span class="line">      (let [res-time (- (System/currentTimeMillis) start-date)]</span><br><span class="line">        (println (format  &quot;%s took %d ms&quot; (:uri req) res-time))))))</span><br></pre></td></tr></table></figure></p><p>需要注意的是 record-response-time 需要放在 middleware 最外层，这样它才能纪录一个请求经过所有 middleware + handler 处理的时间。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-13b0b3db53980d66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>2、移除map中值为nil的key<br>参考<a href="https://code.i-harness.com/en/q/3c157d" target="_blank" rel="noopener">clojure nil? - Remove nil values from a map?</a><br>我使用的两个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(into &#123;&#125; (filter #(not (nil? (val %))) &#123;:a true :b false :c nil&#125;))</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(into &#123;&#125; (remove #(nil? (val %)) &#123;:a true :b false :c nil&#125;))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SpringBoot 之Servlet启动前和配置热更新</title>
      <link href="/2019/06/09/SpringBoot%20%E4%B9%8BServlet%E5%90%AF%E5%8A%A8%E5%89%8D%E5%92%8C%E9%85%8D%E7%BD%AE%E7%83%AD%E6%9B%B4%E6%96%B0/"/>
      <url>/2019/06/09/SpringBoot%20%E4%B9%8BServlet%E5%90%AF%E5%8A%A8%E5%89%8D%E5%92%8C%E9%85%8D%E7%BD%AE%E7%83%AD%E6%9B%B4%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<p>需要在servlet启动后和销毁前做点啥？需要热更新配置文件？本文记录这两个操作</p><p><a href="https://www.jianshu.com/p/26cace225b5e" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>有个项目里甲方粑粑提了个需求：给所有手机号默认没天最多发送50条短信，但是可以改，修改成51的话，那就每天再多发一条呗。</p><p>需求听起来很简单，把50存在数据库的system_config表中，每次发送时，查询然后判断下。</p><p>配置在配置文件中热更新可以使配置生效，但是是不能满足需求，因为修改后的值没有保存容器重启后就失效。</p><p>但是聪明如你，这一定不是最优的。</p><p>这个需求不是我实现的，但是我参与了方案讨论，现在已经实现，在此记录下方案和方式，以备不时之需。</p><p><strong>方案一：</strong></p><blockquote><p>1、默认配置存储在DB中<br>   2、容器启动后从DB中读取配置数据，并存入Redis，后面使用时以redis为准，如果redis丢失了，从DB重新获取。<br>3、修改配置时修改redis中的配置数据，并同步修改DB里的数据。</p></blockquote><p>引入redis的好处时每次发送时无需进行DB级的查询，提高相应效率。<br><strong>方案二：</strong></p><blockquote><p>1、默认配置存储在DB中<br>2、容器启动后，将从DB中查询到的数据，创建出一个配置文件。<br>3、修改配置时修改DB中的数据，同时使用配置热更新，修改配置文件中的值。</p></blockquote><p>很明显重点是<code>容器启动后读取DB中的数据</code>，本文使用方案二，上源码：</p><h4 id="系统属性table"><a href="#系统属性table" class="headerlink" title="系统属性table"></a>系统属性table</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">import javax.persistence.Entity;</span><br><span class="line">import javax.persistence.GeneratedValue;</span><br><span class="line">import javax.persistence.Id;</span><br><span class="line">import javax.persistence.Inheritance;</span><br><span class="line">import javax.persistence.InheritanceType;</span><br><span class="line">import javax.persistence.Table;</span><br><span class="line"></span><br><span class="line">import org.hibernate.annotations.GenericGenerator;</span><br><span class="line"></span><br><span class="line">import lombok.Data;</span><br><span class="line">import lombok.ToString;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 配置文件数据表</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line">@ToString</span><br><span class="line">@Data</span><br><span class="line">@Entity</span><br><span class="line">@Table(name = &quot;t_sys_config&quot;)</span><br><span class="line">@Inheritance(strategy = InheritanceType.SINGLE_TABLE)</span><br><span class="line">public class SysConfig &#123;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 主键</span><br><span class="line"> */</span><br><span class="line">@Id</span><br><span class="line">@GenericGenerator(name = &quot;snowFlakeId&quot;, strategy = &quot;com.hczt.haier.commoncenter.jpa.SnowflakeIdentifierGenerator&quot;)</span><br><span class="line">    @GeneratedValue(generator = &quot;snowFlakeId&quot;)</span><br><span class="line">private Long id;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 属性编码</span><br><span class="line"> */</span><br><span class="line">    private String code;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 属性值</span><br><span class="line">     */</span><br><span class="line">    private String value;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 属性名称</span><br><span class="line">     */</span><br><span class="line">    private String name;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 属性描述</span><br><span class="line">     */</span><br><span class="line">    private String description;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="加载SystemConfig"><a href="#加载SystemConfig" class="headerlink" title="加载SystemConfig"></a>加载SystemConfig</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.ConfigurableEnvironment;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.MutablePropertySources;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.PropertiesPropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.PropertySource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.hczt.haier.smscenter.db.entity.SysConfig;</span><br><span class="line"><span class="keyword">import</span> com.hczt.haier.smscenter.service.SysConfigService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 系统属性配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ConfigurableEnvironment environment;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> SysConfigService sysConfigService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从数据库加载配置文件信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostConstruct</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initDbPropertySourceUsage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">log.info(<span class="string">"从数据库中加载属性配置文件开始"</span>);</span><br><span class="line"><span class="comment">// 获取系统属性集合</span></span><br><span class="line">        MutablePropertySources propertySources = environment.getPropertySources();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 从数据库中获取自定义变量表</span></span><br><span class="line">        Map&lt;String, String&gt; collect = sysConfigService.findAll().stream().collect(Collectors.toMap(SysConfig::getCode, SysConfig::getValue));</span><br><span class="line">        log.info(<span class="string">"从数据库中获取自定义变量表完成，获取到的数据为【&#123;&#125;】"</span>, collect);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将转换后的列表加入属性中</span></span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.putAll(collect);</span><br><span class="line">        </span><br><span class="line">        PropertiesPropertySource constants = <span class="keyword">new</span> PropertiesPropertySource(<span class="string">"system-config"</span>, properties);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 定义寻找属性的正则，该正则为系统默认属性集合的前缀</span></span><br><span class="line">        Pattern pattern = Pattern.compile(<span class="string">"^application*"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 接收系统默认属性集合的名称</span></span><br><span class="line">        String name = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 接收是否找到系统默认属性集合</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 遍历属性集合</span></span><br><span class="line">        <span class="keyword">for</span> (PropertySource&lt;?&gt; source : propertySources) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 正则匹配</span></span><br><span class="line">        <span class="keyword">if</span> (pattern.matcher(source.getName()).matches()) &#123;</span><br><span class="line">        <span class="comment">// 接收名称</span></span><br><span class="line">        name = source.getName();</span><br><span class="line">        <span class="comment">// 变更标识</span></span><br><span class="line">        flag = <span class="keyword">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="comment">// 找到则将自定义属性添加到该属性前</span></span><br><span class="line">        propertySources.addBefore(name, constants);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 未找到则默认添加到第一位</span></span><br><span class="line">        propertySources.addFirst(constants);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">log.info(<span class="string">"从数据库中加载属性配置文件结束"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>里面的SysConfigService及不打了，直接调用了Jpa的Repository而已。</p><p><code>@PostConstruct</code>注解正是为解决<code>容器启动后干啥</code>而生，与其相配的是<code>@PreDestroy</code>容器销毁前干点啥。<br>被@PostConstruct修饰的方法会在服务器加载Servlet的时候运行，并且只会被服务器执行一次。PostConstruct在构造函数之后执行，init（）方法之前执行。PreDestroy（）方法在destroy（）方法知性之后执行<br><img src="https://upload-images.jianshu.io/upload_images/4109786-443313a54fbdce02.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="postconstruct"><br>另外，spring中Constructor、@Autowired、@PostConstruct的顺序其实从依赖注入的字面意思就可以知道，要将对象p注入到对象a，那么首先就必须得生成对象a和对象p，才能执行注入。<br>所以，如果一个类A中有个成员变量p被@Autowried注解，那么@Autowired注入是发生在A的构造方法执行完之后的。如果想在生成对象时完成某些初始化操作，而偏偏这些初始化操作又依赖于依赖注入，那么久无法在构造函数中实现。为此，可以使用@PostConstruct注解一个方法来完成初始化，@PostConstruct注解的方法将会在依赖注入完成后被自动调用。</p><h4 id="定义属性刷新监听器"><a href="#定义属性刷新监听器" class="headerlink" title="定义属性刷新监听器"></a>定义属性刷新监听器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.event.EventListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义属性刷新监听器</span></span><br><span class="line"><span class="comment"> * 当调用/actuator/refresh接口时会调用onRefresh方法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PropertiesRefreshEventListener</span> </span>&#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> SystemConfig systemConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 属性刷新事件监听方法</span></span><br><span class="line"><span class="comment"> * 当此方法被调用时，表示/actuator/refresh方法被调用</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> event</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EventListener</span>(RefreshScopeRefreshedEvent.class)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">(RefreshScopeRefreshedEvent event)</span> </span>&#123;</span><br><span class="line">log.info(<span class="string">"重新从数据库装载属性"</span>);</span><br><span class="line">systemConfig.initDbPropertySourceUsage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动配置热更新<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 短信发送接口（采用redis channel 实现 pub/sub 模式）</span><br><span class="line"> * @param ipInfo  客户端ip信息</span><br><span class="line"> * @param appInfo 请求应用信息</span><br><span class="line"> * @param msgInfo 短信发送信息</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">@RefreshScope</span><br><span class="line">@PostMapping(value=&quot;/send&quot;)</span><br><span class="line">public RtnResult&lt;String&gt; sendSmsCodeChannel(IpInfo ipInfo,</span><br><span class="line">AppInfo appInfo,</span><br><span class="line">@Validated @RequestBody MsgInfo msgInfo,</span><br><span class="line">@Value(&quot;$&#123;smsCode.limitCount&#125;&quot;) Long smsLimitCount) &#123;</span><br><span class="line">log.info(&quot;应用【&#123;&#125;】IP地址【&#123;&#125;】采用Redis Channel方式请求短信发送接口，请求参数为【&#123;&#125;】&quot;,</span><br><span class="line">appInfo.getAppId(),ipInfo.getIpAddress(), msgInfo);</span><br><span class="line"></span><br><span class="line">// 判断短信发送次数是否超限（每应用每天每手机号）</span><br><span class="line">if(checkSmsCountOver(appInfo, msgInfo,smsLimitCount)) &#123;</span><br><span class="line">return RtnResult.error(SmsCodeMsg.SMS_COUNT_OVER.fillArgs(msgInfo.getMobile()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">long start = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">// 组装发送队列条件</span><br><span class="line">AsyncSmsInfo asyncSmsInfo = new AsyncSmsInfo();</span><br><span class="line">asyncSmsInfo.setAppId(appInfo.getAppId());</span><br><span class="line">asyncSmsInfo.setAppName(appInfo.getAppName());</span><br><span class="line">asyncSmsInfo.setMobileSign(appInfo.getMobileSign());</span><br><span class="line">asyncSmsInfo.setSmsCodeExpire(appInfo.getSmsCodeExpire());</span><br><span class="line">asyncSmsInfo.setSmsCodeLength(appInfo.getSmsCodeLength());</span><br><span class="line">asyncSmsInfo.setMobile(msgInfo.getMobile());</span><br><span class="line">asyncSmsInfo.setContent(msgInfo.getContent());</span><br><span class="line">asyncSmsInfo.setIpAddress(ipInfo.getIpAddress());</span><br><span class="line">asyncSmsInfo.setInvokeTime(new Date());</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">// 异步发送短信，将信息推送到Redis消息服务队列</span><br><span class="line">publisherService.pushSms(asyncSmsInfo);</span><br><span class="line">&#125; catch (BizException e) &#123;</span><br><span class="line">return RtnResult.error(SmsCodeMsg.SMS_PUBLISH_ERROR);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">long end = System.currentTimeMillis();</span><br><span class="line">log.info(&quot;应用【&#123;&#125;】IP地址【&#123;&#125;】采用Redis Channel方式请求短信发送接口，请求参数为【&#123;&#125;】完成，执行时间为【&#123;&#125;】ms&quot;, appInfo.getAppId(),ipInfo.getIpAddress(), msgInfo, end-start);</span><br><span class="line">return RtnResult.success(StringUtils.EMPTY);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>文中提到的redis channel发送消息模式不是重点，不在讲解使用的是redisTemplate的convertAndSend方法，有需要时自行查阅。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.jianshu.com/p/98cf7d8b9ec3" target="_blank" rel="noopener">@PostConstruct</a><br><a href="https://blog.csdn.net/zzzgd_666/article/details/84322947" target="_blank" rel="noopener">SpringCloud配置热更新@RefreshScope,以及没有出现/refresh的动态刷新地址,访问404的解决办法</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jenkins上使用shell脚本nohup部署jar服务到remote服务器</title>
      <link href="/2019/06/03/jenkins%E4%B8%8A%E4%BD%BF%E7%94%A8shell%E8%84%9A%E6%9C%ACnohup%E9%83%A8%E7%BD%B2jar%E6%9C%8D%E5%8A%A1%E5%88%B0remote%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/06/03/jenkins%E4%B8%8A%E4%BD%BF%E7%94%A8shell%E8%84%9A%E6%9C%ACnohup%E9%83%A8%E7%BD%B2jar%E6%9C%8D%E5%8A%A1%E5%88%B0remote%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>jenkins上使用shell用nohup java -jar部署服务到远程服务器遇到的坑</p><p><a href="https://www.jianshu.com/p/34708c0fde16" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>先贴一下，我的jenkins里最后核心配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#停止服务，备份jar</span><br><span class="line">ssh -p 22 root@0.0.0.0 &apos;bash -s &apos; &lt; /opt/auto-deploy-scripts/remove_jar.sh /opt/jar/ alk-wxapi-test.jar</span><br><span class="line"></span><br><span class="line">#copy jar</span><br><span class="line">scp -P22 /mnt/jenkins/workspace/alk_api_test_auto_deploy/target/uberjar/alk-wxapi-test.jar root@0.0.0.0:/opt/jar/</span><br><span class="line"></span><br><span class="line">#重启服务</span><br><span class="line">ssh -p 22 root@0.0.0.0 &apos;bash -s&apos; &lt; /opt/auto-deploy-scripts/start_jar.sh /usr/local/jdk1.8.0_212 /opt/jar/ alk-wxapi-test.jar</span><br></pre></td></tr></table></figure></p><p>remove_jar.sh脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#获取第一个参数,jar包路径,先备份,再发布</span><br><span class="line">jar_path=$1</span><br><span class="line">#!编译好的jar包名称</span><br><span class="line">jar_name=$2</span><br><span class="line">file=$jar_path$jar_name</span><br><span class="line">bak_file=`date +%Y%m%d%H%M%S`.$jar_name</span><br><span class="line">bak_path=&quot;bak/&quot;</span><br><span class="line"></span><br><span class="line">if [ $jar_name == &quot;&quot;  ] ;then</span><br><span class="line"></span><br><span class="line">echo &quot; jar name is null&quot;</span><br><span class="line">exit 5</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">echo &quot;================== service stop start=======================&quot;</span><br><span class="line">pid=`ps -aux | grep $jar_name | grep -v bash |grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">if [ -n &quot;$&#123;pid&#125;&quot; ]</span><br><span class="line">then</span><br><span class="line">#!kill -9 强制终止</span><br><span class="line">   echo &quot;kill -9 的pid:&quot; $pid</span><br><span class="line">   kill -9 $pid</span><br><span class="line">fi</span><br><span class="line">echo &quot;================== service stop end =======================&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;service stop successed!&quot;</span><br><span class="line">echo &quot;================== jar backup start =======================&quot;</span><br><span class="line"></span><br><span class="line">#!将现有的jar备份后，将新的jar包替换</span><br><span class="line">cd $jar_path</span><br><span class="line">echo &quot;file origin is: $file&quot;</span><br><span class="line">echo &quot;backup jar is: $jar_path$bak_path&quot;</span><br><span class="line">if [ -f &quot;$file&quot; ]</span><br><span class="line">then</span><br><span class="line">rm -rf $jar_path$bak_path/*</span><br><span class="line">mv $jar_name $bak_file</span><br><span class="line">cp $bak_file $jar_path$bak_path</span><br><span class="line">rm -rf $bak_file</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;================== jar backup end =======================&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></p><p>start_jar.sh脚本内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!启动应用</span><br><span class="line">#!stop.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;================== startup start =======================&quot;</span><br><span class="line">#获取第1个参数，jdk的安装路径</span><br><span class="line">jdk_path=$1</span><br><span class="line">#获取第2个参数,jar包路径,先备份,再发布</span><br><span class="line">jar_path=$2</span><br><span class="line">#第三个参数，编译好的jar包名称</span><br><span class="line">jar_name=$3</span><br><span class="line">file=$jar_path$jar_name</span><br><span class="line"></span><br><span class="line">#远程执行该脚本时改变了环境变量，找不到java的环境变量，提示：nohup: failed to run command ‘java’: No such file or directory</span><br><span class="line">#所以需要加上以下java的环境变量，其中JAVA_HOME的值，可以通过执行命令echo $JAVA_HOME得到，每个人的java环境变量设置不一样</span><br><span class="line">#该问题参考自：https://stackoverflow.com/questions/20791846/zookeeper-not-starting-nohup-error</span><br><span class="line">export JAVA_HOME=$&#123;jdk_path&#125;</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">echo &quot;授予当前用户权限&quot;</span><br><span class="line">#chmod 777 $file</span><br><span class="line">echo &quot;执行.....&quot;</span><br><span class="line">cd $jar_path</span><br><span class="line">nohup java -jar $file &gt; $&#123;jar_path&#125;/log/nohup.log 2&gt;&amp;1 &amp;</span><br><span class="line">echo &quot;启动jar的命令: nohup java -jar $file &gt; $&#123;jar_path&#125;log/nohup.log 2&gt;&amp;1 &amp; &quot;</span><br><span class="line">echo &quot;================== startup end =======================&quot;</span><br></pre></td></tr></table></figure></p><p><code>remove_jar.sh</code>和<code>start_jar.sh</code>在jenkins服务器上，需要将这两个shell在0.0.0.0（不能暴露）的远端去执行<br>没错，客官您一眼就看出来了，觉得简单的不值一提吧，先别着急，对搜这个问题的小菜鸡来说这里面也是大有文章，听我一一道来。</p><p>1、第一个问题：ps -ef|grep xxx.jar查到多余的pid<br>现象：在0.0.0.0上行<code>ps -ef | grep alk-wxapi-test.jar | grep -v grep | awk &#39;{print $2}&#39;</code>只能查到一个pid，但是把这句话放到shell脚本里，在本地使用命令上远端执行，就会找到3个pid，而且kill 时提示失败的错误。<br>现在已经知道原因了，但是当时确实是个问题。<br>已经解决不方便复现了，因此就描述一下就行了。<br>原因：shell里的这个命令也是通过bash在远程执行的，所以找到的别的<em>无关紧要</em>的pid其实是bash，因此在grep是除了排除grep本身(<code>grep -v grep</code>)外还要排除bash（<code>grep -v bash</code>）<br>最后命令是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pid=`ps -aux | grep $jar_name | grep -v bash |grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br></pre></td></tr></table></figure></p><p>2、远程执行脚本，里面有nohup java -jar,发生错误：<code>nohup: failed to run command ‘java’: No such file or directory</code><br>这是因为nohup时java环境变量没有读到，处理方式就是在nohup执行前加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_151</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p><p>3、其他思路</p><ul><li>将jar的服务配置成服务器的一个service，使用systemctl停止、启动等。</li><li>使用docker部署服务。</li></ul><h3 id="2019-12-11-补充"><a href="#2019-12-11-补充" class="headerlink" title="2019-12-11 补充"></a>2019-12-11 补充</h3><p>4、第二条说jdk的路径因为每个服务企业都不一样，所以需要手动传改，这一点已经在脚本上做了修改，启动脚本上携带的第一个参数就是jdk的安装路径</p><p>这两个也都是比较好的思路，以后肯定有机会体验的，本篇到此。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h2><p><a href="https://www.cnblogs.com/FlyAway2013/p/10858028.html" target="_blank" rel="noopener">ps -ef |grep -v 在shell sh 脚本中貌似无效？</a><br><a href="https://www.jianshu.com/p/5cd618ad381e" target="_blank" rel="noopener">linux下搭建zookeeper集群遇到的坑</a><br><a href="http://www.chepoo.com/nohup-cannot-run-command-error-solved.html" target="_blank" rel="noopener">nohup: cannot run command异常解决</a><br><a href="https://stackoverflow.com/questions/20791846/zookeeper-not-starting-nohup-error" target="_blank" rel="noopener">Zookeeper not starting, nohup error</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> java </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>clojure java interop,依赖冲突解决</title>
      <link href="/2019/06/02/2019-06-02-clojure-java-interop-extend/"/>
      <url>/2019/06/02/2019-06-02-clojure-java-interop-extend/</url>
      
        <content type="html"><![CDATA[<p>clojure中调用java,解决jar包依赖冲突</p><p><a href="https://www.jianshu.com/p/b03473115fb0" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>今天在clojure中使用<a href="https://ai.baidu.com/docs#/OCR-Java-SDK/f76eb9f8" target="_blank" rel="noopener">百度OCR的java api</a>，但是发现引入java的sdk后，项目中配置的logback的配置与sdk里的slf4j冲突，并且不巧的是slf4j冲掉了原有的logback的配置，这还了得，只能修改后再使用啦。<br>1、先以一个包的log配置和现状来看看现状。<br>logback配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;logger name=&quot;jdbc.audit&quot; level=&quot;warn&quot;/&gt;</span><br></pre></td></tr></table></figure></p><p>jdbc.audit的级别是warn，原来启动项目时自然是不会打印jdbc.audit的日志的，引入第三方sdk然后启动repl，log中有如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SLF4J: Class path contains multiple SLF4J bindings.</span><br><span class="line">SLF4J: Found binding in [jar:file:/Users/mahaiqiang/.m2/repository/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: Found binding in [jar:file:/Users/mahaiqiang/.m2/repository/ch/qos/logback/logback-classic/1.1.3/logback-classic-1.1.3.jar!/org/slf4j/impl/StaticLoggerBinder.class]</span><br><span class="line">SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.</span><br></pre></td></tr></table></figure></p><p>提示冲突，再start项目<br><img src="/2019/06/02/2019-06-02-clojure-java-interop-extend/jar-extend.png" alt="log"><br>打出一堆无用的log，现状演示完毕。<br>2、修改jar内容<br>参考的<a href="https://blog.csdn.net/CHX_W/article/details/78261161" target="_blank" rel="noopener">JAVA中jar包反编译再重新生成jar文件完整流程</a>，先看看SDK的pom里引用的log依赖，证实一下：<br><img src="/2019/06/02/2019-06-02-clojure-java-interop-extend/jar-extend-pom.png" alt="image.png"></p><p>另存为pom文件，删除掉这个dependency，然后将pom复制到这个jar所在的目录<br><img src="/2019/06/02/2019-06-02-clojure-java-interop-extend/jar-extend-rep.webp" alt="image.png"></p><p>然后执行以下操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//该命令创建pom文件与原jar包路径一样的文件夹(即class文件在jar包中的包名)</span><br><span class="line">mkdir -p META-INF/maven/com.baidu.aip/java-sdk</span><br><span class="line">//从当前目录拷贝一份修改后的pom.xml文件到java-sdk文件夹下</span><br><span class="line">cp pom.xml META-INF/maven/com.baidu.aip/java-sdk</span><br><span class="line">//将文件pom.xml添加/更新到现有的jar文件java-sdk-4.11.0.jar中</span><br><span class="line">jar uf java-sdk-4.11.0.jar META-INF/maven/com.baidu.aip/java-sdk/pom.xml</span><br></pre></td></tr></table></figure></p><p>再看jar的内容<br><img src="/2019/06/02/2019-06-02-clojure-java-interop-extend/jar-extend-pom2.webp" alt="image.png"><br>然后启动项目：<br>发现还是提示冲突，与之前一样，于是手动删除slf4j的slf4j-simple的jar<br><img src="/2019/06/02/2019-06-02-clojure-java-interop-extend/jar-extend-slf4j.webp" alt="image.png"><br>然后再启动，还是一样，搜了一下slf4j<br><img src="/2019/06/02/2019-06-02-clojure-java-interop-extend/jar-extend-slf4g-2.webp" alt="image.png"><br>果断该掉，再试一把呗，果然干净了。<br><img src="/2019/06/02/2019-06-02-clojure-java-interop-extend/jar-extend-success.webp" alt="image.png"></p><p>以后怎么出来，怎么解决。再续吧，先干活要紧。<br>2、使用SDK<br>一般搜索clojure java interop就会有结果，我主要看了<a href="https://clojure.org/reference/java_interop" target="_blank" rel="noopener">https://clojure.org/reference/java_interop</a>和</p><blockquote><p>This was a good chance to get familiar with a few of the interop features:<br>Importing with (import java.io.FileReader)<br>Instantiating an object, where new FileReader(path) becomes (FileReader. path)<br>Accessing a class attribute/method, where CSVFormat.DEFAULT becomes CSVFormat/DEFAULT, and<br>Calling an instance method, where record.get(“greeting”) becomes (.get record “greeting”).<br>I particularly like that the Clojure notation clearly distinguishes class attributes/methods from instance methods eg. CSVFormat/DEFAULT vs. (.get record “greeting”).<br>I’ll still be reaching for Python when a CSV file comes my way, but I was pleasantly surprised at how neat the Clojure version of this code ended up.</p></blockquote><p>这段启示使用的,在repl里的代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(import com.baidu.aip.ocr.AipOcr)</span><br><span class="line">=&gt; com.baidu.aip.ocr.AipOcr</span><br><span class="line">(def ocr-client</span><br><span class="line">  (AipOcr. &quot;16321634&quot;</span><br><span class="line">           &quot;ppiRhvR7VQLqhaiMH7svO7G9&quot;</span><br><span class="line">           &quot;my-secret&quot;))</span><br><span class="line">=&gt; #&apos;user/ocr-client</span><br><span class="line">(.receipt ocr-client &quot;upload/files/81558580941_.pic_1.jpg&quot; (new java.util.HashMap))</span><br><span class="line">=&gt;</span><br><span class="line">#object[org.json.JSONObject</span><br><span class="line">        0x7a4e1225</span><br><span class="line">        &quot;&#123;\&quot;log_id\&quot;:7285098450024979673,\&quot;words_result\&quot;:[&#123;\&quot;words\&quot;:\&quot;山东省耳鼻喉医院鼻变态反应-嗅觉门诊\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:29,\&quot;left\&quot;:232,\&quot;width\&quot;:606,\&quot;height\&quot;:63&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;变应原点刺试验报告单\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:104,\&quot;left\&quot;:318,\&quot;width\&quot;:419,\&quot;height\&quot;:45&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;姓名:\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:218,\&quot;left\&quot;:63,\&quot;width\&quot;:58,\&quot;height\&quot;:25&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;性别:年龄:岁电话\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:212,\&quot;left\&quot;:205,\&quot;width\&quot;:287,\&quot;height\&quot;:30&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;检查日期:\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:207,\&quot;left\&quot;:697,\&quot;width\&quot;:103,\&quot;height\&quot;:25&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;年月日\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:199,\&quot;left\&quot;:876,\&quot;width\&quot;:120,\&quot;height\&quot;:29&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;名称\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:302,\&quot;left\&quot;:106,\&quot;width\&quot;:40,\&quot;height\&quot;:21&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;标本风团直径结果\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:296,\&quot;left\&quot;:220,\&quot;width\&quot;:268,\&quot;height\&quot;:26&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;名称\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:295,\&quot;left\&quot;:572,\&quot;width\&quot;:40,\&quot;height\&quot;:21&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;标本风团直径结果\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:286,\&quot;left\&quot;:694,\&quot;width\&quot;:276,\&quot;height\&quot;:29&#125;&#125;,&#123;\&quot;words\&quot;:\&quot; (mm)\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:328,\&quot;left\&quot;:330,\&quot;width\&quot;:55,\&quot;height\&quot;:17&#125;&#125;,&#123;\&quot;words\&quot;:\&quot; mm)\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:321,\&quot;left\&quot;:806,\&quot;width\&quot;:43,\&quot;height\&quot;:14&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;9\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:370,\&quot;left\&quot;:586,\&quot;width\&quot;:12,\&quot;height\&quot;:14&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;粉尘螨\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:408,\&quot;left\&quot;:98,\&quot;width\&quot;:62,\&quot;height\&quot;:22&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;大籽蒿花粉\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:401,\&quot;left\&quot;:543,\&quot;width\&quot;:100,\&quot;height\&quot;:23&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;2\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:477,\&quot;left\&quot;:126,\&quot;width\&quot;:12,\&quot;height\&quot;:14&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;10\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:470,\&quot;left\&quot;:582,\&quot;width\&quot;:23,\&quot;height\&quot;:16&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;屋尘螨\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:509,\&quot;left\&quot;:102,\&quot;width\&quot;:60,\&quot;height\&quot;:21&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;杨树花粉\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:503,\&quot;left\&quot;:553,\&quot;width\&quot;:80,\&quot;height\&quot;:22&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;狗毛\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:607,\&quot;left\&quot;:113,\&quot;width\&quot;:42,\&quot;height\&quot;:21&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;柳树花粉\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:603,\&quot;left\&quot;:554,\&quot;width\&quot;:79,\&quot;height\&quot;:23&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;12\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:670,\&quot;left\&quot;:583,\&quot;width\&quot;:22,\&quot;height\&quot;:17&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;猫毛\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:706,\&quot;left\&quot;:116,\&quot;width\&quot;:40,\&quot;height\&quot;:21&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;梧桐花粉\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:702,\&quot;left\&quot;:554,\&quot;width\&quot;:79,\&quot;height\&quot;:21&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;5\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:773,\&quot;left\&quot;:131,\&quot;width\&quot;:13,\&quot;height\&quot;:14&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;13\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:768,\&quot;left\&quot;:585,\&quot;width\&quot;:21,\&quot;height\&quot;:16&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;鸭毛绒\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:804,\&quot;left\&quot;:106,\&quot;width\&quot;:62,\&quot;height\&quot;:22&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;产黄青霉\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:801,\&quot;left\&quot;:554,\&quot;width\&quot;:81,\&quot;height\&quot;:21&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;14\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:868,\&quot;left\&quot;:586,\&quot;width\&quot;:22,\&quot;height\&quot;:14&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;葎草\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:903,\&quot;left\&quot;:119,\&quot;width\&quot;:40,\&quot;height\&quot;:19&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;链格孢霉\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:900,\&quot;left\&quot;:557,\&quot;width\&quot;:80,\&quot;height\&quot;:23&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;15\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:955,\&quot;left\&quot;:587,\&quot;width\&quot;:21,\&quot;height\&quot;:16&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;藜属花粉\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:990,\&quot;left\&quot;:98,\&quot;width\&quot;:83,\&quot;height\&quot;:24&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;阴性对照\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:987,\&quot;left\&quot;:558,\&quot;width\&quot;:79,\&quot;height\&quot;:23&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;8\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:1058,\&quot;left\&quot;:133,\&quot;width\&quot;:14,\&quot;height\&quot;:14&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;16\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:1053,\&quot;left\&quot;:588,\&quot;width\&quot;:22,\&quot;height\&quot;:16&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;豚草\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:1088,\&quot;left\&quot;:119,\&quot;width\&quot;:42,\&quot;height\&quot;:23&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;阳性对照\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:1085,\&quot;left\&quot;:558,\&quot;width\&quot;:80,\&quot;height\&quot;:21&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;注:1、皮试前应停用口服抗组胺药物3天\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:1178,\&quot;left\&quot;:46,\&quot;width\&quot;:372,\&quot;height\&quot;:41&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;2、有严重皮肤病和皮肤溃烂者不得做皮肤试验\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:1217,\&quot;left\&quot;:121,\&quot;width\&quot;:405,\&quot;height\&quot;:29&#125;&#125;,&#123;\&quot;words\&quot;:\&quot;3、以上结果不做证明用\&quot;,\&quot;location\&quot;:&#123;\&quot;top\&quot;:1248,\&quot;left\&quot;:120,\&quot;width\&quot;:214,\&quot;height\&quot;:40&#125;&#125;],\&quot;words_result_num\&quot;:41&#125;&quot;]</span><br></pre></td></tr></table></figure></p><p>再者，可以使用<a href="https://coldnew.github.io/a9b87aa3/" target="_blank" rel="noopener">使用 lein 來管理你本地的 maven repo</a>来讲jar做成本地资源，导入到maven仓库，不再多写了。</p><p>3、进阶<br>上面的办法显然是比较low的，不利于持续化，更高阶的方式是在:dependencies中使用<code>:exclusions</code>关键字，忽略某些依赖，比如上面的sdk应该这么用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[com.baidu.aip/java-sdk &quot;4.11.0&quot;</span><br><span class="line">                  :exclusions [org.slf4j/slf4j-simple]]</span><br></pre></td></tr></table></figure></p><p>4、关于dependencies的其他<br>在命令行里执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看依赖关系</span><br><span class="line">lein deps :tree</span><br><span class="line">#加载依赖</span><br><span class="line">lein deps</span><br></pre></td></tr></table></figure></p><p>其他更多请参照：<a href="https://cljdoc.org/d/leiningen/leiningen/2.9.1/api/leiningen.deps" target="_blank" rel="noopener">https://cljdoc.org/d/leiningen/leiningen/2.9.1/api/leiningen.deps</a></p><p>5、clojure里使用java<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">;;md5加密</span><br><span class="line">(defn get-str-md5 [s]</span><br><span class="line">  (apply str</span><br><span class="line">         (map (partial format &quot;%02x&quot;)</span><br><span class="line">              (.digest (doto (java.security.MessageDigest/getInstance &quot;MD5&quot;)</span><br><span class="line">                         .reset</span><br><span class="line">                         (.update (.getBytes s)))))))</span><br><span class="line">;;修改时间格式</span><br><span class="line">(defn format-date-time [timestamp]</span><br><span class="line">  (-&gt; &quot;yyyyMMddHHmmss&quot;</span><br><span class="line">      (java.text.SimpleDateFormat.)</span><br><span class="line">      (.format timestamp)))</span><br><span class="line">;;获取UUID</span><br><span class="line">(defn generate-db-id []</span><br><span class="line">  (clojure.string/replace (str (java.util.UUID/randomUUID)) &quot;-&quot; &quot;&quot;))</span><br></pre></td></tr></table></figure></p><p>更多clojure和java的交互使用参看：<a href="https://clojure.org/reference/java_interop" target="_blank" rel="noopener">https://clojure.org/reference/java_interop</a></p>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>海尔创客汇笔记----安卓端编译和运行</title>
      <link href="/2019/05/24/%E6%B5%B7%E5%B0%94%E5%88%9B%E5%AE%A2%E6%B1%87%E7%AC%94%E8%AE%B0----%E5%AE%89%E5%8D%93%E7%AB%AF%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8C/"/>
      <url>/2019/05/24/%E6%B5%B7%E5%B0%94%E5%88%9B%E5%AE%A2%E6%B1%87%E7%AC%94%E8%AE%B0----%E5%AE%89%E5%8D%93%E7%AB%AF%E7%BC%96%E8%AF%91%E5%92%8C%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>创客汇app在android studio里配置和编译运行，及安卓投屏工具推荐</p><p><a href="https://www.jianshu.com/p/6bceb554394e" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="开发环境准备"><a href="#开发环境准备" class="headerlink" title="开发环境准备"></a>开发环境准备</h3><ol><li>下载安装android studio</li><li>启动运行<br><img src="https://upload-images.jianshu.io/upload_images/4109786-6f03a30bbbc894d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="start studio"></li><li>配置代理<br>如果能翻墙最好了，因为一些资源都需要爬墙，实在没有吗，只能选择不代理。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-639c5d002829ce04.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="设置代理"></li></ol><p>选择标准安装，下一步，等待下载<br><img src="https://upload-images.jianshu.io/upload_images/4109786-67d174d8609b6a65.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="下载"><br><img src="https://upload-images.jianshu.io/upload_images/4109786-e793cad7c2935a19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><p>import到Portal的android目录，导入项目<br><img src="https://upload-images.jianshu.io/upload_images/4109786-127d4e761db56467.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="下载2"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-735bbb68af8f0d78.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="下载3"></p><ol start="4"><li>build完成以后在命令窗口启动打包jsbundle<br>打包成jsbundle文件的方式可以参照另一篇-<a href="https://www.jianshu.com/p/cb25e817ba36" target="_blank" rel="noopener">海尔创客汇笔记—-安卓生产环境打包配置</a>。<br>主要是下面这个命令<br>打包IOS：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;bundle-ios&quot;: &quot;react-native bundle --entry-file index.js --platform ios --dev false --bundle-output ./ios/main.jsbundle --assets-dest ./ios&quot;,</span><br></pre></td></tr></table></figure></li></ol><p>打包安卓：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;bundle-android&quot;: &quot;react-native bundle --entry-file index.js --bundle-output ./android/app/src/main/assets/index.android.bundle --platform android --assets-dest ./android/app/src/main/res/ --dev false&quot;,</span><br></pre></td></tr></table></figure></p><p>该项目有个没有配置好的地方，会导致生成.html文件，需要删除后，再进行后面的操作。</p><h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><ol start="5"><li><p>yarn</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Portal git:(master) yarn</span><br><span class="line">yarn install v1.15.2</span><br><span class="line">[1/4] 🔍  Resolving packages...</span><br><span class="line">[2/4] 🚚  Fetching packages...</span><br><span class="line">[3/4] 🔗  Linking dependencies...</span><br><span class="line">warning &quot; &gt; react-native-doc-viewer@2.7.8&quot; has incorrect peer dependency &quot;react@^16.3.0-alpha.1&quot;.</span><br><span class="line">warning &quot; &gt; react-native-doc-viewer@2.7.8&quot; has incorrect peer dependency &quot;react-native@0.54.3&quot;.</span><br><span class="line">warning &quot; &gt; react-native-fs@2.9.12&quot; has incorrect peer dependency &quot;react@^16.2.0&quot;.</span><br><span class="line">warning &quot; &gt; react-native-fs@2.9.12&quot; has incorrect peer dependency &quot;react-native@^0.51.0&quot;.</span><br><span class="line">warning &quot; &gt; react-native-fs@2.9.12&quot; has unmet peer dependency &quot;prop-types@15.6.0&quot;.</span><br><span class="line">warning &quot; &gt; react-native-fs@2.9.12&quot; has unmet peer dependency &quot;create-react-class@^15.6.2&quot;.</span><br><span class="line">warning &quot; &gt; react-native-pdf@5.0.8&quot; has incorrect peer dependency &quot;rn-fetch-blob@^0.10.13&quot;.</span><br><span class="line">warning &quot; &gt; react-native-svg@6.5.2&quot; has unmet peer dependency &quot;prop-types@^15.5.7&quot;.</span><br><span class="line">warning &quot; &gt; react-native-svg-uri@1.2.3&quot; has incorrect peer dependency &quot;react-native-svg@^5.3.0&quot;.</span><br><span class="line">warning &quot; &gt; babel-jest@22.0.4&quot; has unmet peer dependency &quot;babel-core@^6.0.0 || ^7.0.0-0&quot;.</span><br><span class="line">[4/4] 🔨  Building fresh packages...</span><br><span class="line">warning Your current version of Yarn is out of date. The latest version is &quot;1.16.0&quot;, while you&apos;re on &quot;1.15.2&quot;.</span><br><span class="line">info To upgrade, run the following command:</span><br><span class="line">$ curl --compressed -o- -L https://yarnpkg.com/install.sh | bash</span><br><span class="line">✨  Done in 169.93s.</span><br><span class="line">➜  Portal git:(master)</span><br></pre></td></tr></table></figure></li><li><p>启动js<br><img src="https://upload-images.jianshu.io/upload_images/4109786-89a4a517903bf500.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="yarn start"></p></li><li><p>运行app<br>因为项目加入了IM的一些东西导致不能用模拟器运行，真机连接后选择USB调试，然后运行项目<br><img src="https://upload-images.jianshu.io/upload_images/4109786-e69e92ed5654e0c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"><br>选择不使用instant<br><img src="https://upload-images.jianshu.io/upload_images/4109786-264e7b09e16f4da4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"><br>查看日志：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-679dc031e89fac7a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="logcat"></p></li></ol><h3 id="配置JS调试模式"><a href="#配置JS调试模式" class="headerlink" title="配置JS调试模式"></a>配置JS调试模式</h3><ol start="8"><li>配置端口映射，让手机端连接到PC的js server上<br>首先，电脑要有ADB，作为一名Android终端开发，这个是必备的。但是不巧我是客串的，所以手动安装了一下，MAC上通过homebrew安装很简单，一句命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install android-platform-tools</span><br></pre></td></tr></table></figure></li></ol><p>手动安装配置classpath的可以参考<a href="https://www.jianshu.com/p/1b3fb1f27b67" target="_blank" rel="noopener">在 MAC OS X 安装 ADB (Android调试桥)</a>。<br>安装成功，并且真机设置好了开发者模式，允许调试的话，可以用以下命令看到设备：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ adb devices</span><br><span class="line">List of devices attached</span><br><span class="line">c752c893device</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure></p><p>有了adb以后，用下面的命令设置映射关系,将本地的8081映射到client的8081<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ adb reverse tcp:8081 tcp:8081</span><br></pre></td></tr></table></figure></p><p>如果adb没有配置到classpath里，可以这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ cd ~/Library/Android/sdk/platform-tools/</span><br><span class="line">➜  ~ ./adb reverse tcp:8081 tcp:8081</span><br></pre></td></tr></table></figure></p><p>更多adb命令可以参考<a href="https://www.cnblogs.com/bravesnail/articles/5850335.html" target="_blank" rel="noopener">Android常用的adb命令总结</a></p><ol start="9"><li>配置到以上映射，一般真机上会自动启动应用，启动后摇一摇，弹出菜单，查看最新的修改。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-ba74e29aa69bb628.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="手机摇一摇"></li></ol><p>可以先来个reload试试。<br>可以看到手机上开始reload<br><img src="https://upload-images.jianshu.io/upload_images/4109786-f33d82d21bb3666d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="reload"></p><p>再看看服务端：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-d8dc5fcad1a88b0f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="reload"></p><ol start="10"><li>开始调试<br>在刚才手机摇一摇出来的菜单中选择<code>Debug JS Remotely</code>，应用重启，同时看到server端启动的Dev Tools<br><img src="https://upload-images.jianshu.io/upload_images/4109786-7e71927678c45375.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="debug"><br>默认的浏览器也打开了一个新的tab，如下：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-221aa944e71dd2bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></li></ol><p>默认不会打开开发者模式，需要手动打开。我们清除一下默认的log，加载下首页，看到如下效果：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-fb3679d573a40a1d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-4faeb1152bdcd1ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800" alt="debug log"><br>调试配置成功。</p><ol start="11"><li>有时候一边撸代码，改两行还要拿起手机看看效果，确实不便，于是有了安卓手机投屏这种神一样的工具。也许工具很多，不过我这里就用过一种<a href="http://www.vysor.io/" target="_blank" rel="noopener">vysor</a>，我用了谷歌浏览器的vysor插件。<br>手机USB调试设置好以后会自己检测<br><img src="https://upload-images.jianshu.io/upload_images/4109786-389ee3883c725ee7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="vysor"><br>同时第一次会提示手机安装该软件，安装完成后打开，效果如下，与手机同步。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-9750e07d8078e721.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="image.png"></li></ol><p>效果还是不错的，就是没有[摇一摇]这个功能，美中不足亦。</p><ol start="12"><li>模拟器操作<br>如果在模拟器上调试react native代码，也可以有摇一摇，或者配置hot loading这些，如下：</li></ol><ul><li>shift + r 连续2 次 模拟器reload 界面</li><li>Command⌘ + M快捷键来快速打开Developer Menu。也可以通过模拟器上的菜单键来打开。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react-native </tag>
            
            <tag> android </tag>
            
            <tag> package </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ant Design Pro 学习之table使用</title>
      <link href="/2019/04/24/Ant%20Design%20Pro%20%E5%AD%A6%E4%B9%A0%E4%B9%8Btable%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/04/24/Ant%20Design%20Pro%20%E5%AD%A6%E4%B9%A0%E4%B9%8Btable%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>阿里粑粑开源的管理框架<a href="https://pro.ant.design/index-cn" target="_blank" rel="noopener">Ant Design Pro</a>使用记录之列表的灵活使用。</p><p><a href="https://www.jianshu.com/p/181773ed614d" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="在table的行render时常用的操作"><a href="#在table的行render时常用的操作" class="headerlink" title="在table的行render时常用的操作"></a>在table的行render时常用的操作</h2><h4 id="1、时间格式化，指定时区"><a href="#1、时间格式化，指定时区" class="headerlink" title="1、时间格式化，指定时区"></a>1、时间格式化，指定时区</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line"></span><br><span class="line">​      title: &apos;更新时间&apos;,</span><br><span class="line"></span><br><span class="line">​      dataIndex: &apos;updateTime&apos;,</span><br><span class="line"></span><br><span class="line">​      sorter: true,</span><br><span class="line"></span><br><span class="line">​      render: val =&gt; &lt;span&gt;&#123;moment(val).utc().format(&apos;YYYY-MM-DD HH:mm:ss&apos;)&#125;&lt;/span&gt;,</span><br><span class="line"></span><br><span class="line">​    &#125;,</span><br></pre></td></tr></table></figure><h4 id="2、列表上显示图片"><a href="#2、列表上显示图片" class="headerlink" title="2、列表上显示图片"></a>2、列表上显示图片</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  title: &apos;肺功能报告&apos;,</span><br><span class="line">  dataIndex: &apos;url&apos;,</span><br><span class="line">  render: text =&gt; &lt;img alt=&quot;商品图片&quot; style=&#123;&#123; width: 100, height: 50 &#125;&#125; src=&#123;text&#125; /&gt;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/4109786-97385a7bc7c790ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"><br>这个图片不能在当前页放大，或者直接在浏览器访问。<br>如果需要点击后在当前页面放大，这样的效果<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a365751fe9ab65fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="放大"><br>可以这么干，先撸一个imageView组件放在src/pages/Common下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; PureComponent &#125; from &apos;react&apos;;</span><br><span class="line">import &#123; Spin, Modal &#125; from &apos;antd&apos;;</span><br><span class="line"></span><br><span class="line">const defaultStyle = &#123;</span><br><span class="line">  borderRadius: 5,</span><br><span class="line">  borderWidth: 1,</span><br><span class="line">  borderStyle: &apos;solid&apos;,</span><br><span class="line">  borderColor: &apos;#d9d9d9&apos;,</span><br><span class="line">  width: 70,</span><br><span class="line">  height: 70,</span><br><span class="line">  padding: 5,</span><br><span class="line">  cursor: &apos;pointer&apos;,</span><br><span class="line">  display: &apos;inline-flex&apos;,</span><br><span class="line">  justifyContent: &apos;center&apos;,</span><br><span class="line">  alignItems: &apos;center&apos;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">class ImageView extends PureComponent &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    loading: true,</span><br><span class="line">    visible: false,</span><br><span class="line">    imgWidth: 0,</span><br><span class="line">    imgHeight: 0,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    this.init();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillReceiveProps(nextProps) &#123;</span><br><span class="line">    const &#123; url &#125; = this.props;</span><br><span class="line">    if (url !== nextProps.url) &#123;</span><br><span class="line">      this.init();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init = () =&gt; &#123;</span><br><span class="line">    const &#123; url &#125; = this.props;</span><br><span class="line">    if (url) &#123;</span><br><span class="line">      this.setState(&#123; loading: true &#125;);</span><br><span class="line">      const image = new Image();</span><br><span class="line">      image.src = url;</span><br><span class="line">      if (image.complete) &#123;</span><br><span class="line">        const size = this.getImageSize(image.width, image.height);</span><br><span class="line">        this.setState(&#123; loading: false, imgWidth: size.width, imgHeight: size.height &#125;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        image.onload = () =&gt; &#123;</span><br><span class="line">          const size = this.getImageSize(image.width, image.height);</span><br><span class="line">          this.setState(&#123; loading: false, imgWidth: size.width, imgHeight: size.height &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  getImageSize = (originImgWidth, originImgHeight) =&gt; &#123;</span><br><span class="line">    const &#123; width, height &#125; = this.props;</span><br><span class="line">    const divWidth = (width || defaultStyle.width) - 2 * defaultStyle.padding;</span><br><span class="line">    const divHeight = (height || defaultStyle.height) - 2 * defaultStyle.padding;</span><br><span class="line">    const ratio = this.getRatio(originImgWidth, originImgHeight);</span><br><span class="line">    const imgWidth = originImgWidth &gt; originImgHeight ? divWidth : divWidth * ratio;</span><br><span class="line">    const imgHeight = originImgHeight &gt; originImgWidth ? divHeight : divHeight * ratio;</span><br><span class="line">    return &#123; width: imgWidth, height: imgHeight &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  getRatio = (width, height) =&gt; (width &lt; height ? width / height : height / width);</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; url, style &#125; = this.props;</span><br><span class="line">    const &#123; loading, visible, imgWidth, imgHeight &#125; = this.state;</span><br><span class="line">    return (</span><br><span class="line">      &lt;span&gt;</span><br><span class="line">        &#123;url ? (</span><br><span class="line">          &lt;span style=&#123;&#123; ...defaultStyle, ...style &#125;&#125;&gt;</span><br><span class="line">            &#123;loading ? (</span><br><span class="line">              &lt;Spin /&gt;</span><br><span class="line">            ) : (</span><br><span class="line">              &lt;img</span><br><span class="line">                style=&#123;&#123; width: imgWidth, height: imgHeight &#125;&#125;</span><br><span class="line">                alt=&quot;点击预览图片&quot;</span><br><span class="line">                src=&#123;url&#125;</span><br><span class="line">                onClick=&#123;() =&gt; &#123;</span><br><span class="line">                  this.setState(&#123; visible: true &#125;);</span><br><span class="line">                &#125;&#125;</span><br><span class="line">              /&gt;</span><br><span class="line">            )&#125;</span><br><span class="line">            &lt;Modal</span><br><span class="line">              style=&#123;&#123; top: 20 &#125;&#125;</span><br><span class="line">              visible=&#123;visible&#125;</span><br><span class="line">              footer=&#123;null&#125;</span><br><span class="line">              onCancel=&#123;() =&gt; &#123;</span><br><span class="line">                this.setState(&#123; visible: false &#125;);</span><br><span class="line">              &#125;&#125;</span><br><span class="line">            &gt;</span><br><span class="line">              &lt;img alt=&quot;&quot; style=&#123;&#123; width: &apos;100%&apos; &#125;&#125; src=&#123;url&#125; /&gt;</span><br><span class="line">            &lt;/Modal&gt;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">        ) : (</span><br><span class="line">          &apos;无&apos;</span><br><span class="line">        )&#125;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default ImageView;</span><br></pre></td></tr></table></figure></p><p>然后table上这么用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  title: &apos;图片&apos;,</span><br><span class="line">  dataIndex: &apos;itemImage&apos;,</span><br><span class="line">  key: &apos;itemImage&apos;,</span><br><span class="line">  render: (text, record) =&gt; &lt;ImageView alt=&#123;record.title&#125; url=&#123;text&#125; /&gt;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><h4 id="3、长文本使用省略号"><a href="#3、长文本使用省略号" class="headerlink" title="3、长文本使用省略号"></a>3、长文本使用省略号</h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-6e38501d095f5a99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Ellipsis"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  title: &apos;接收详情&apos;,</span><br><span class="line">  dataIndex: &apos;receiveDesc&apos;,</span><br><span class="line">  render: value =&gt; (</span><br><span class="line">    &lt;Ellipsis length=&#123;5&#125; tooltip&gt;</span><br><span class="line">      &#123;value&#125;</span><br><span class="line">    &lt;/Ellipsis&gt;</span><br><span class="line">  ),</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>用到的Ellipsis是官网在components提供的通用组件。</p><h4 id="4、可折叠table"><a href="#4、可折叠table" class="headerlink" title="4、可折叠table"></a>4、可折叠table</h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-d3948dbcc8657f45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">handleTableExpand = record =&gt; &#123;</span><br><span class="line">  const toTags = items =&gt; items.map((value, index) =&gt; &lt;Tag key=&#123;index&#125;&gt;&#123;value&#125;&lt;/Tag&gt;);</span><br><span class="line">  return (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;DescriptionList size=&quot;small&quot; col=&#123;1&#125;&gt;</span><br><span class="line">        &lt;Description term=&quot;资源IDS&quot;&gt;&#123;toTags(getResources(record.resourceIds))&#125;&lt;/Description&gt;</span><br><span class="line">      &lt;/DescriptionList&gt;</span><br><span class="line">      &lt;DescriptionList style=&#123;&#123; marginTop: 15 &#125;&#125; size=&quot;small&quot;&gt;</span><br><span class="line">        &lt;Description term=&quot;短信验证码长度&quot;&gt;&#123;record.smsCodeLength&#125;&lt;/Description&gt;</span><br><span class="line">        &lt;Description term=&quot;短信验证码有效期&quot;&gt;</span><br><span class="line">          &#123;record.smsCodeLength ? `$&#123;record.smsCodeExpire&#125;分钟` : &apos;&apos;&#125;</span><br><span class="line">        &lt;/Description&gt;</span><br><span class="line">        &lt;Description term=&quot;短信验证码签名&quot;&gt;&#123;record.smsCodeSign&#125;&lt;/Description&gt;</span><br><span class="line">      &lt;/DescriptionList&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>然后在table上指定<code>expandedRowRender={this.handleTableExpand}</code>即可。</p><h4 id="5、table显示总条数"><a href="#5、table显示总条数" class="headerlink" title="5、table显示总条数"></a>5、table显示总条数</h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-962768c7f8b97e3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="total"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">  state: &#123;</span><br><span class="line">    query: &#123; ...defaultQuery &#125;,</span><br><span class="line">    list: &#123;</span><br><span class="line">      data: [],</span><br><span class="line">      pagination: &#123;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    exporting: false,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  effects: &#123;</span><br><span class="line">    *fetch(&#123; payload &#125;, &#123; call, put, select &#125;) &#123;</span><br><span class="line">      yield put(&#123; type: &apos;query&apos;, payload &#125;);</span><br><span class="line">      const query = yield select(state =&gt; state.smsLog.query);</span><br><span class="line">      const &#123; data &#125; = yield call(page, query);</span><br><span class="line">      yield put(&#123;</span><br><span class="line">        type: &apos;list&apos;,</span><br><span class="line">        payload: &#123;</span><br><span class="line">          data: data.content,</span><br><span class="line">          pagination: &#123;</span><br><span class="line">            current: data.number + 1,</span><br><span class="line">            pageSize: data.size,</span><br><span class="line">            total: Number(data.totalElements),</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>渲染时指定pagination的包括了total字段，所以就会显示出总条数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;PageTable</span><br><span class="line">            columns=&#123;this.columns&#125;</span><br><span class="line">              loading=&#123;loading&#125;</span><br><span class="line">              dataSource=&#123;list.data&#125;</span><br><span class="line">              pagination=&#123;list.pagination&#125;</span><br><span class="line">              onChange=&#123;this.handleTableChange&#125;</span><br><span class="line">            /&gt;</span><br></pre></td></tr></table></figure></p><p>list就是从接口获取的数据，</p><h4 id="6、表头支持筛选"><a href="#6、表头支持筛选" class="headerlink" title="6、表头支持筛选"></a>6、表头支持筛选</h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f86fbe0644d4b380.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="筛选"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">       title: &apos;人员状态&apos;,</span><br><span class="line">       dataIndex: &apos;jobStatus&apos;,</span><br><span class="line">       render:(text)=&gt;&#123;</span><br><span class="line">           const filters = options.jobStatus.filter(s =&gt; s.value === text);</span><br><span class="line">           return filters.length ? filters[0].text : &apos;&apos;;</span><br><span class="line">        &#125;,</span><br><span class="line">       filters: options.jobStatus,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>页面加载时加载个数据字典的值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">componentDidMount() &#123;</span><br><span class="line">    this.props.dispatch(&#123;type: &apos;rwUserOption/init&apos;&#125;).then(() =&gt; &#123;</span><br><span class="line">        this.props.dispatch(&#123;type: &apos;rwUserList/reload&apos;&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>请求字典数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import dict from &apos;../../services/api-dict&apos;</span><br><span class="line"></span><br><span class="line">const optionKeys = [</span><br><span class="line">    &quot;RWGH-USER-XIAOWEI&quot;,</span><br><span class="line">    &quot;RWGH-USER-STATUS&quot;,</span><br><span class="line">    &apos;RWGH-TRAIN-ATTENDANCE&apos;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    namespace: &apos;rwUserOption&apos;,</span><br><span class="line">    state: &#123;</span><br><span class="line">        sex:[</span><br><span class="line">            &#123;text: &apos;男&apos;, value: &apos;0&apos;&#125;,</span><br><span class="line">            &#123;text: &apos;女&apos;, value: &apos;1&apos;&#125;</span><br><span class="line">        ],</span><br><span class="line">        //小微</span><br><span class="line">        xiaowei: [],</span><br><span class="line">        //工作状态</span><br><span class="line">        jobStatus: [],</span><br><span class="line">        attendances: []</span><br><span class="line">    &#125;,</span><br><span class="line">    effects: &#123;</span><br><span class="line">        * init(&#123;payload&#125;, &#123;put, call&#125;) &#123;</span><br><span class="line">            const [xiaowei, jobStatus, attendances] = yield call(dict.many, optionKeys);</span><br><span class="line">            const mapper = (items) =&gt; &#123;</span><br><span class="line">                return items.map(item =&gt; &#123;</span><br><span class="line">                    const &#123;dictValueName, dictValueCode&#125; = item;</span><br><span class="line">                    return &#123;text: dictValueName, value: dictValueCode&#125;;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;;</span><br><span class="line">            yield put(&#123;type: &apos;changeXiaoWei&apos;, payload: mapper(xiaowei)&#125;);</span><br><span class="line">            yield put(&#123;type: &apos;changeJobStatus&apos;, payload: mapper(jobStatus)&#125;);</span><br><span class="line">            yield put(&#123;type: &apos;changeAttendances&apos;, payload: mapper(attendances)&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    reducers: &#123;</span><br><span class="line">        changeXiaoWei(state, &#123;payload: xiaowei&#125;) &#123;</span><br><span class="line">            return &#123;...state, xiaowei&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        changeJobStatus(state, &#123;payload: jobStatus&#125;) &#123;</span><br><span class="line">            return &#123;...state, jobStatus&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        changeAttendances(state, &#123;payload: attendances&#125;)&#123;</span><br><span class="line">            return &#123;...state, attendances&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>dict.many是这样定义的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import req from &apos;./api-base&apos;;</span><br><span class="line"></span><br><span class="line">const dict = &#123;</span><br><span class="line">    one: (indexCode, cache = true) =&gt; &#123;</span><br><span class="line">        return new Promise(resolve =&gt; &#123;</span><br><span class="line">            const dict = sessionStorage.getItem(indexCode);</span><br><span class="line">            if (cache &amp;&amp; dict) &#123;</span><br><span class="line">                resolve(dict);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                req.get(&quot;/questionnaire/admin/sys/dict/values&quot;, &#123;indexCode&#125;).then(data =&gt; &#123;</span><br><span class="line">                    sessionStorage.setItem(dict, data.data);</span><br><span class="line">                    resolve(data.data)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    many: (indexCodes, cache = true) =&gt; &#123;</span><br><span class="line">        return Promise.all(indexCodes.map(code =&gt; dict.one(code, cache)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default dict;</span><br></pre></td></tr></table></figure></p><p>其中人员状态的数据结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 0,</span><br><span class="line">    &quot;message&quot;: &quot;操作成功&quot;,</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;dictValueId&quot;: 162,</span><br><span class="line">            &quot;dictIndexId&quot;: 148,</span><br><span class="line">            &quot;dictValueCode&quot;: &quot;0&quot;,</span><br><span class="line">            &quot;dictValueName&quot;: &quot;在职&quot;,</span><br><span class="line">            &quot;deleteFlag&quot;: &quot;0&quot;,</span><br><span class="line">            &quot;dictValueSort&quot;: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;dictValueId&quot;: 163,</span><br><span class="line">            &quot;dictIndexId&quot;: 148,</span><br><span class="line">            &quot;dictValueCode&quot;: &quot;1&quot;,</span><br><span class="line">            &quot;dictValueName&quot;: &quot;产假&quot;,</span><br><span class="line">            &quot;deleteFlag&quot;: &quot;0&quot;,</span><br><span class="line">            &quot;dictValueSort&quot;: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;dictValueId&quot;: 164,</span><br><span class="line">            &quot;dictIndexId&quot;: 148,</span><br><span class="line">            &quot;dictValueCode&quot;: &quot;2&quot;,</span><br><span class="line">            &quot;dictValueName&quot;: &quot;离职&quot;,</span><br><span class="line">            &quot;deleteFlag&quot;: &quot;0&quot;,</span><br><span class="line">            &quot;dictValueSort&quot;: 2</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;dictValueId&quot;: 165,</span><br><span class="line">            &quot;dictIndexId&quot;: 148,</span><br><span class="line">            &quot;dictValueCode&quot;: &quot;3&quot;,</span><br><span class="line">            &quot;dictValueName&quot;: &quot;退休&quot;,</span><br><span class="line">            &quot;deleteFlag&quot;: &quot;0&quot;,</span><br><span class="line">            &quot;dictValueSort&quot;: 3</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;dictValueId&quot;: 167,</span><br><span class="line">            &quot;dictIndexId&quot;: 148,</span><br><span class="line">            &quot;dictValueCode&quot;: &quot;4&quot;,</span><br><span class="line">            &quot;dictValueName&quot;: &quot;转岗&quot;,</span><br><span class="line">            &quot;deleteFlag&quot;: &quot;0&quot;,</span><br><span class="line">            &quot;dictValueSort&quot;: 4</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;dictValueId&quot;: 168,</span><br><span class="line">            &quot;dictIndexId&quot;: 148,</span><br><span class="line">            &quot;dictValueCode&quot;: &quot;5&quot;,</span><br><span class="line">            &quot;dictValueName&quot;: &quot;病假&quot;,</span><br><span class="line">            &quot;deleteFlag&quot;: &quot;0&quot;,</span><br><span class="line">            &quot;dictValueSort&quot;: 5</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个筛选是多选的，选中后点击确定会触发查询，参数会xiaoweis=XSJDXW%2CXHYXW像这样拼接到url里。</p><h4 id="7、结果转enum显示文本，如订单状态等。"><a href="#7、结果转enum显示文本，如订单状态等。" class="headerlink" title="7、结果转enum显示文本，如订单状态等。"></a>7、结果转enum显示文本，如订单状态等。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const sendResultDom = &#123;</span><br><span class="line">  success: &lt;Badge status=&quot;success&quot; text=&quot;成功&quot; /&gt;,</span><br><span class="line">  error: &lt;Badge status=&quot;error&quot; text=&quot;失败&quot; /&gt;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  title: &apos;发送结果&apos;,</span><br><span class="line">  dataIndex: &apos;sendResult&apos;,</span><br><span class="line">  render: test =&gt; (test === &apos;0&apos; ? sendResultDom.success : sendResultDom.error),</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>这种适合于这个对应值比较稳定变动较小的情况，如果是经常修改或者适配新增，又不改代码的话，就需要以数据字典的形式提供给页面字典数据，然后用组件去适配显示内容。</p><p>比如数据字典的sysDict/value/code/list?indexCode=sms_receive_result数据结构如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 0,</span><br><span class="line">    &quot;message&quot;: &quot;操作成功&quot;,</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: &quot;88685502718279680&quot;,</span><br><span class="line">            &quot;isDelete&quot;: false,</span><br><span class="line">            &quot;createTime&quot;: 1553756821000,</span><br><span class="line">            &quot;updateTime&quot;: 1553756821000,</span><br><span class="line">            &quot;parentId&quot;: &quot;88685399781670912&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;成功&quot;,</span><br><span class="line">            &quot;code&quot;: &quot;0&quot;,</span><br><span class="line">            &quot;sort&quot;: 0,</span><br><span class="line">            &quot;type&quot;: 1,</span><br><span class="line">            &quot;remark&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: &quot;88685542446727168&quot;,</span><br><span class="line">            &quot;isDelete&quot;: false,</span><br><span class="line">            &quot;createTime&quot;: 1553756830000,</span><br><span class="line">            &quot;updateTime&quot;: 1553756830000,</span><br><span class="line">            &quot;parentId&quot;: &quot;88685399781670912&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;失败&quot;,</span><br><span class="line">            &quot;code&quot;: &quot;1&quot;,</span><br><span class="line">            &quot;sort&quot;: 1,</span><br><span class="line">            &quot;type&quot;: 1,</span><br><span class="line">            &quot;remark&quot;: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: &quot;88685595827634176&quot;,</span><br><span class="line">            &quot;isDelete&quot;: false,</span><br><span class="line">            &quot;createTime&quot;: 1553756843000,</span><br><span class="line">            &quot;updateTime&quot;: 1553756843000,</span><br><span class="line">            &quot;parentId&quot;: &quot;88685399781670912&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;等待&quot;,</span><br><span class="line">            &quot;code&quot;: &quot;-1&quot;,</span><br><span class="line">            &quot;sort&quot;: 2,</span><br><span class="line">            &quot;type&quot;: 1,</span><br><span class="line">            &quot;remark&quot;: &quot;&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后写一个DictValue的组件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">/* eslint-disable */</span><br><span class="line">import React, &#123; PureComponent &#125; from &apos;react&apos;;</span><br><span class="line">import &#123; Spin, Select &#125; from &apos;antd&apos;;</span><br><span class="line">import _ from &apos;lodash&apos;;</span><br><span class="line">import memoizeOne from &apos;memoize-one&apos;;</span><br><span class="line">import &#123; valueListByIndexCode &#125; from &apos;@/services/dict&apos;;</span><br><span class="line"></span><br><span class="line">const dictCache = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">const filterValue = (dicts, value) =&gt; _.find(dicts, d =&gt; d.code === value);</span><br><span class="line">const memoizeGetValue = memoizeOne(filterValue);</span><br><span class="line"></span><br><span class="line">async function getIndexValues(index) &#123;</span><br><span class="line">  const values = dictCache[index];</span><br><span class="line">  if (values) return values;</span><br><span class="line">  const &#123; data &#125; = await valueListByIndexCode(&#123; indexCode: index &#125;);</span><br><span class="line">  const newValues = data.map(d =&gt; (&#123; name: d.name, code: d.code, remark: d.remark &#125;));</span><br><span class="line">  dictCache[index] = newValues;</span><br><span class="line">  return newValues;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export async function getValue(index, value) &#123;</span><br><span class="line">  const indexValues = await getIndexValues(index);</span><br><span class="line">  return memoizeGetValue(indexValues, value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function getValueName(index, value) &#123;</span><br><span class="line">  const indexValue = await getValue(index, value);</span><br><span class="line">  return indexValue ? indexValue.name : value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export class DictValue extends PureComponent &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    loading: false,</span><br><span class="line">    text: &apos;&apos;,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    const &#123; index, value &#125; = this.props;</span><br><span class="line">    this.loadDate(index, value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillReceiveProps(nextProps) &#123;</span><br><span class="line">    const &#123; index, value &#125; = nextProps;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.index !== index || props.value !== value) &#123;</span><br><span class="line">      this.loadDate(index, value);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  loadDate = (index, value) =&gt; &#123;</span><br><span class="line">    if (!value) &#123;</span><br><span class="line">      this.setState(&#123; text: &apos;&apos;, loading: false &#125;);</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    this.setState(&#123; loading: true &#125;);</span><br><span class="line">    getValueName(index, value).then(text =&gt; &#123;</span><br><span class="line">      this.setState(&#123; text, loading: false &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; loading, text &#125; = this.state;</span><br><span class="line">    return &lt;span&gt;&#123;loading ? &lt;Spin size=&quot;small&quot; /&gt; : `$&#123;text&#125;`&#125;&lt;/span&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const &#123; Option &#125; = Select;</span><br><span class="line"></span><br><span class="line">export class DictSelect extends PureComponent &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    data: [],</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    const &#123; index &#125; = this.props;</span><br><span class="line">    getIndexValues(index).then(data =&gt; &#123;</span><br><span class="line">      this.setState(&#123; data &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    const &#123; data &#125; = this.state;</span><br><span class="line">    return (</span><br><span class="line">      &lt;Select placeholder=&quot;请选择&quot; &#123;...props&#125;&gt;</span><br><span class="line">        &#123;data.map(item =&gt; (</span><br><span class="line">          &lt;Option key=&#123;item.code&#125; value=&#123;item.code&#125;&gt;</span><br><span class="line">            &#123;item.name&#125;</span><br><span class="line">          &lt;/Option&gt;</span><br><span class="line">        ))&#125;</span><br><span class="line">      &lt;/Select&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中<code>valueListByIndexCode</code>就是获取到上面结构数据的api，不用特殊说明了。<br>这个类包含了两个方法，一个是DictValue，用来从key获取value，一个是DictSelect提供一下该字典值得下拉选项。<br>DictValue的用法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      title: &apos;接收结果&apos;,</span><br><span class="line">      dataIndex: &apos;receiveResult&apos;,</span><br><span class="line">      render: value =&gt; &lt;DictValue index=&quot;sms_receive_result&quot; value=&#123;value&#125; /&gt;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>DictSelect的用法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;FormItem label=&quot;接收结果&quot;&gt;</span><br><span class="line">    &lt;DictSelect</span><br><span class="line">       allowClear</span><br><span class="line">       index=&quot;sms_receive_result&quot;</span><br><span class="line">       value=&#123;query.receiveResult&#125;</span><br><span class="line">       onChange=&#123;receiveResult =&gt; this.handleSearch(&#123; receiveResult &#125;)&#125;</span><br><span class="line">    /&gt;</span><br><span class="line">&lt;/FormItem&gt;</span><br></pre></td></tr></table></figure></p><p>8、等待。。。</p><h2 id="官方API"><a href="#官方API" class="headerlink" title="官方API"></a><a href="https://ant.design/components/table-cn/" target="_blank" rel="noopener">官方API</a></h2>]]></content>
      
      
      <categories>
          
          <category> 后台管理系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antd Pro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ant Design Pro 使用点点滴滴</title>
      <link href="/2019/04/09/Ant%20Design%20Pro%20%E4%BD%BF%E7%94%A8%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/"/>
      <url>/2019/04/09/Ant%20Design%20Pro%20%E4%BD%BF%E7%94%A8%E7%82%B9%E7%82%B9%E6%BB%B4%E6%BB%B4/</url>
      
        <content type="html"><![CDATA[<p>阿里粑粑开源的管理框架<a href="https://pro.ant.design/index-cn" target="_blank" rel="noopener">Ant Design Pro</a>使用记录之mock。</p><p><a href="https://www.jianshu.com/p/bc2e95e05cc9" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="1、有用的Mock"><a href="#1、有用的Mock" class="headerlink" title="1、有用的Mock"></a>1、有用的Mock</h3><p>antd pro在本地开发环境下start时就提供了mock环境了，在根目录的mock里可以定义自己需要mock的方法和出入参数，非常的方便。</p><blockquote><p>2019-06-03补充：<br>在我的尝试之前推荐下<a href="https://github.com/typicode/json-server" target="_blank" rel="noopener">json-server</a>，我下面没有使用，但是在别的地方用过，确实还是很方便的。</p></blockquote><p>接下来介绍下我怎么之前怎么用的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">import Mock from &apos;mockjs&apos;;</span><br><span class="line"></span><br><span class="line">const &#123; Random &#125; = Mock;</span><br><span class="line"></span><br><span class="line">const userListLength = Random.integer(10, 100);</span><br><span class="line">const userList = [];</span><br><span class="line">// 生成表格mock数据</span><br><span class="line">for (let i = 0; i &lt; userListLength; i += 1) &#123;</span><br><span class="line">  userList.push(&#123;</span><br><span class="line">    id: i,</span><br><span class="line">    love: Math.random(0, 1) &gt; 0.5,</span><br><span class="line">    taxNo: Random.integer(4e14, 5e14),</span><br><span class="line">    taxtype: i % 3 === 0 ? &apos;small&apos; : i % 2 === 0 ? &apos;personal&apos; : &apos;normal&apos;,</span><br><span class="line">    name: `深圳市丝悦化妆品有限公司$&#123;i + 1&#125;`,</span><br><span class="line">    no: i % 2 === 0 ? `B$&#123;i&#125;` : `T$&#123;i&#125;`,</span><br><span class="line">    taxZone: Math.random(0, 1) &gt; 0.5 ? &apos;广东&apos; : &apos;深圳&apos;,</span><br><span class="line">    key: Math.random(0, 1) &gt; 0.5,</span><br><span class="line">    sysVerify: Math.random(0, 1) &gt; 0.5,</span><br><span class="line">    taxManager: &apos;lane&apos;,</span><br><span class="line">    accountManager: &apos;lane&apos;,</span><br><span class="line">    date: Random.datetime(&apos;yyyy-MM-dd HH:mm:ss&apos;),</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  [`POST /api/biz/md/bizMdClient/search`](req, res, u, b) &#123; // 分页查询处理</span><br><span class="line">    const body = (b &amp;&amp; b.body) || req.body;</span><br><span class="line">    const &#123; skip, limit &#125; = body;</span><br><span class="line">    const start = skip * limit; // 数据开始索引</span><br><span class="line">    const end = start + (limit * 1); // 数据结束索引</span><br><span class="line">    const dataSource = userList.slice(start, end); // 要返回的数据</span><br><span class="line">    const result = &#123;</span><br><span class="line">      code: 200,</span><br><span class="line">      data: dataSource,</span><br><span class="line">      // 分页信息</span><br><span class="line">      pageinfo: &#123;</span><br><span class="line">        &quot;total&quot;: userList.length,</span><br><span class="line">        &quot;pageindex&quot;: skip,</span><br><span class="line">        &quot;pagesize&quot;: limit,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    if (res &amp;&amp; res.json) &#123;</span><br><span class="line">      res.json(result);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return result;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  [`POST /api/biz/md/bizMdClient/love`](req, res) &#123;</span><br><span class="line">    const &#123; client &#125; = req.body</span><br><span class="line">    for (let i = 0, length = userList.length; i &lt; length; i += 1) &#123;</span><br><span class="line">      if (client.id === userList[i].id) &#123;</span><br><span class="line">        userList[i].love = !userList[i].love;</span><br><span class="line">        break;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    res.send(&#123; code: 200 &#125;).end()</span><br><span class="line">  &#125;,</span><br><span class="line">  [`POST /api/biz/md/bizMdClient/queryFilterOptions`](req, res) &#123;</span><br><span class="line">    const dataSource = [</span><br><span class="line">      &#123;</span><br><span class="line">        title: &apos;全部&apos;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: &apos;一般&apos;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: &apos;小规模&apos;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: &apos;税务待分配&apos;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: &apos;账务待分配&apos;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        title: &apos;我的关注&apos;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ];</span><br><span class="line">    const result = &#123;</span><br><span class="line">      code: 200,</span><br><span class="line">      data: dataSource,</span><br><span class="line">    &#125;;</span><br><span class="line">    if (res &amp;&amp; res.json) &#123;</span><br><span class="line">      res.json(result);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return result;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面的mock是基于本地<code>npm start</code> 时启动的mock服务说的，但是代码撸完了，总要在服务器上提供服务，不能再本地自己玩吧，也就是说npm build后，生成的dist的目录的文件要在服务器上跑的，一般是用nginx作为服务器。测试mock就没有了，这时候怎么办，有两种办法解决，其实就算是本地我个人也比较推荐下面这种方式。<br>将一个json格式的文本复制到比如test.json中，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;list&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;callNo&quot;: &quot;11101&quot;,</span><br><span class="line">            &quot;desc&quot;: &quot;20ml&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;1号脱敏针&quot;,</span><br><span class="line">            &quot;updatedAt&quot;: &quot;2019-04-12T14:00:00.000Z&quot;,</span><br><span class="line">            &quot;pingHao&quot;: 1,</span><br><span class="line">            &quot;fenZhen&quot;: &quot;是&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;callNo&quot;: &quot;11102&quot;,</span><br><span class="line">            &quot;desc&quot;: &quot;20ml&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;2号脱敏针&quot;,</span><br><span class="line">            &quot;updatedAt&quot;: &quot;2019-04-12T14:00:00.000Z&quot;,</span><br><span class="line">            &quot;pingHao&quot;: 2,</span><br><span class="line">            &quot;fenZhen&quot;: &quot;是&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;callNo&quot;: &quot;11103&quot;,</span><br><span class="line">            &quot;desc&quot;: &quot;30ml&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;3号脱敏针&quot;,</span><br><span class="line">            &quot;updatedAt&quot;: &quot;2019-04-12T14:00:00.000Z&quot;,</span><br><span class="line">            &quot;pingHao&quot;: 3,</span><br><span class="line">            &quot;fenZhen&quot;: &quot;是&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;callNo&quot;: &quot;11104&quot;,</span><br><span class="line">            &quot;desc&quot;: &quot;30ml&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;4号脱敏针&quot;,</span><br><span class="line">            &quot;updatedAt&quot;: &quot;2019-04-12T14:00:00.000Z&quot;,</span><br><span class="line">            &quot;pingHao&quot;: 4,</span><br><span class="line">            &quot;fenZhen&quot;: &quot;是&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;callNo&quot;: &quot;11105&quot;,</span><br><span class="line">            &quot;desc&quot;: &quot;40ml&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;5号脱敏针&quot;,</span><br><span class="line">            &quot;updatedAt&quot;: &quot;2019-04-12T14:00:00.000Z&quot;,</span><br><span class="line">            &quot;pingHao&quot;: 5,</span><br><span class="line">            &quot;fenZhen&quot;: &quot;是&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;callNo&quot;: &quot;11106&quot;,</span><br><span class="line">            &quot;desc&quot;: &quot;40ml&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;6号脱敏针&quot;,</span><br><span class="line">            &quot;updatedAt&quot;: &quot;2019-04-12T14:00:00.000Z&quot;,</span><br><span class="line">            &quot;pingHao&quot;: 6,</span><br><span class="line">            &quot;fenZhen&quot;: &quot;是&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;callNo&quot;: &quot;111017&quot;,</span><br><span class="line">            &quot;desc&quot;: &quot;60ml&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;7号脱敏针&quot;,</span><br><span class="line">            &quot;updatedAt&quot;: &quot;2019-04-12T14:00:00.000Z&quot;,</span><br><span class="line">            &quot;pingHao&quot;: 7,</span><br><span class="line">            &quot;fenZhen&quot;: &quot;是&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;callNo&quot;: &quot;11108&quot;,</span><br><span class="line">            &quot;desc&quot;: &quot;60ml&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;8号脱敏针&quot;,</span><br><span class="line">            &quot;updatedAt&quot;: &quot;2019-04-12T14:00:00.000Z&quot;,</span><br><span class="line">            &quot;pingHao&quot;: 8,</span><br><span class="line">            &quot;fenZhen&quot;: &quot;是&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;pagination&quot;: &#123;</span><br><span class="line">        &quot;total&quot;: 8,</span><br><span class="line">        &quot;pageSize&quot;: 10,</span><br><span class="line">        &quot;current&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后把这个文件上传到任何一个有网就可以下载的服务器上，比如七牛啊，百度啊，什么的提供存储的地方，比如<a href="http://cdn.imgs.3vyd.com/xh/admin/test.json" target="_blank" rel="noopener">我的</a></p><p>models里还是一样的调用services的js文件里提供的接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*fetchTuoMinZhen(&#123; payload &#125;, &#123; call, put &#125;) &#123;</span><br><span class="line">  const response = yield call(queryTuoMinZhen, payload);</span><br><span class="line">  yield put(&#123;</span><br><span class="line">    type: &apos;save&apos;,</span><br><span class="line">    payload: response,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>重点来了，本来services里的接口是这样的:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export async function queryTuoMinZhen(params) &#123;</span><br><span class="line">  return request(`/api/tuominzhen?$&#123;stringify(params)&#125;`);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>也安装mock-server专门提供服务，具体可以google试试。</p><h3 id="2、在table的行render时常用的操作"><a href="#2、在table的行render时常用的操作" class="headerlink" title="2、在table的行render时常用的操作"></a>2、在table的行render时常用的操作</h3><p>1、时间格式化，指定时区<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line"></span><br><span class="line">​      title: &apos;更新时间&apos;,</span><br><span class="line"></span><br><span class="line">​      dataIndex: &apos;updateTime&apos;,</span><br><span class="line"></span><br><span class="line">​      sorter: true,</span><br><span class="line"></span><br><span class="line">​      render: val =&gt; &lt;span&gt;&#123;moment(val).utc().format(&apos;YYYY-MM-DD HH:mm:ss&apos;)&#125;&lt;/span&gt;,</span><br><span class="line"></span><br><span class="line">​    &#125;,</span><br></pre></td></tr></table></figure></p><p>2、显示图片<br>3、长文本使用省略号<br>4、可折叠table<br>5、显示总条数<br>6、表头支持筛选和排序</p><h3 id="3、修改antd默认的样式"><a href="#3、修改antd默认的样式" class="headerlink" title="3、修改antd默认的样式"></a>3、修改antd默认的样式</h3><p>在自定义的class中加入<code>:global</code>关键字的样式:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><a href="https://www.jianshu.com/p/b8d45314a495" target="_blank" rel="noopener">怎么修改antd默认样式及遇到的问题</a></p><h3 id="推荐网站"><a href="#推荐网站" class="headerlink" title="推荐网站"></a>推荐网站</h3><p><a href="https://www.colabug.com/4550241.html" target="_blank" rel="noopener">Ant Design Pro总结篇</a><br><a href="https://www.jianshu.com/p/4c54ae2bc925" target="_blank" rel="noopener">经典 –  Ant Design Pro 学习笔记</a><br><a href="http://javascript.ruanyifeng.com/nodejs/packagejson.html" target="_blank" rel="noopener">package.json配置文件</a></p>]]></content>
      
      
      <categories>
          
          <category> 后台管理系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antd Pro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ant Design Pro学习之组件化</title>
      <link href="/2019/03/28/Ant%20Design%20Pro%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
      <url>/2019/03/28/Ant%20Design%20Pro%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%BB%84%E4%BB%B6%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>阿里粑粑开源的管理框架<a href="https://pro.ant.design/index-cn" target="_blank" rel="noopener">Ant Design Pro</a>使用记录之规范学习，组件化。</p><p><a href="https://www.jianshu.com/p/cd656c78b293" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a><br>同事写了一个我目前看着比较正规化的组件式页面，在此作为学习标准贴一下，先看个效果图：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-af4087c803907fca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="列表"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-dfb3d27571e5637a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="编辑1"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-68596138c4ea781d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="编辑2"></p><p>这是一个oauth的client管理的页面，主要代码如下：<br>api列表数据结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;code&quot;: 0,</span><br><span class="line">    &quot;message&quot;: &quot;操作成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;content&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;clientId&quot;: &quot;usercenter-manage&quot;,</span><br><span class="line">                &quot;clientName&quot;: &quot;测试app&quot;,</span><br><span class="line">                &quot;resourceIds&quot;: &quot;usercenter/manage,smscenter/api&quot;,</span><br><span class="line">                &quot;clientSecret&quot;: &quot;&quot;,</span><br><span class="line">                &quot;scope&quot;: &quot;read,write,trust&quot;,</span><br><span class="line">                &quot;authorizedGrantTypes&quot;: &quot;password,refresh_token&quot;,</span><br><span class="line">                &quot;webServerRedirectUri&quot;: null,</span><br><span class="line">                &quot;authorities&quot;: null,</span><br><span class="line">                &quot;accessTokenValidity&quot;: 7200,</span><br><span class="line">                &quot;refreshTokenValidity&quot;: null,</span><br><span class="line">                &quot;additionalInformation&quot;: null,</span><br><span class="line">                &quot;autoapprove&quot;: null,</span><br><span class="line">                &quot;smsCodeLength&quot;: 4,</span><br><span class="line">                &quot;smsCodeExpire&quot;: 10,</span><br><span class="line">                &quot;smsCodeSign&quot;: &quot;【xxxxxx】&quot;,</span><br><span class="line">                &quot;platformCode&quot;: null,</span><br><span class="line">                &quot;updateTime&quot;: &quot;2019-03-25T14:27:26.000+0000&quot;,</span><br><span class="line">                &quot;createTime&quot;: null</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;pageable&quot;: &#123;</span><br><span class="line">            &quot;sort&quot;: &#123;</span><br><span class="line">                &quot;sorted&quot;: true,</span><br><span class="line">                &quot;unsorted&quot;: false,</span><br><span class="line">                &quot;empty&quot;: false</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;offset&quot;: 0,</span><br><span class="line">            &quot;pageSize&quot;: 10,</span><br><span class="line">            &quot;pageNumber&quot;: 0,</span><br><span class="line">            &quot;paged&quot;: true,</span><br><span class="line">            &quot;unpaged&quot;: false</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;totalPages&quot;: 1,</span><br><span class="line">        &quot;totalElements&quot;: 9,</span><br><span class="line">        &quot;last&quot;: true,</span><br><span class="line">        &quot;size&quot;: 10,</span><br><span class="line">        &quot;number&quot;: 0,</span><br><span class="line">        &quot;first&quot;: true,</span><br><span class="line">        &quot;numberOfElements&quot;: 9,</span><br><span class="line">        &quot;sort&quot;: &#123;</span><br><span class="line">            &quot;sorted&quot;: true,</span><br><span class="line">            &quot;unsorted&quot;: false,</span><br><span class="line">            &quot;empty&quot;: false</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;empty&quot;: false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>组件化嘛，文件自然比较多，打个标识</p><h3 id="1、ClientList：页面渲染js"><a href="#1、ClientList：页面渲染js" class="headerlink" title="1、ClientList：页面渲染js"></a>1、ClientList：页面渲染js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; PureComponent &#125; from &apos;react&apos;;</span><br><span class="line">import &#123; connect &#125; from &apos;dva&apos;;</span><br><span class="line">import &#123; Popconfirm, Card, Table, Button, Divider, Tag, message &#125; from &apos;antd&apos;;</span><br><span class="line">import PageHeaderWrapper from &apos;@/components/PageHeaderWrapper&apos;;</span><br><span class="line">import DescriptionList from &apos;@/components/DescriptionList&apos;;</span><br><span class="line">import ClientForm from &apos;./ClientForm&apos;;</span><br><span class="line">import &#123; humanizeTime, getOAuthTypeNames &#125; from &apos;./ClientUtil&apos;;</span><br><span class="line">import styles from &apos;../Common/TableList.less&apos;;</span><br><span class="line"></span><br><span class="line">const &#123; Description &#125; = DescriptionList;</span><br><span class="line"></span><br><span class="line">@connect((&#123; client, loading &#125;) =&gt; (&#123;</span><br><span class="line">  client,</span><br><span class="line">  loading: loading.effects[&apos;client/fetch&apos;],</span><br><span class="line">  submitting: loading.effects[&apos;client/update&apos;],</span><br><span class="line">&#125;))</span><br><span class="line">class ClientList extends PureComponent &#123;</span><br><span class="line">  columns = [</span><br><span class="line">    &#123;</span><br><span class="line">      title: &apos;应用ID&apos;,</span><br><span class="line">      dataIndex: &apos;clientId&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: &apos;应用名称&apos;,</span><br><span class="line">      dataIndex: &apos;clientName&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: (</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          Token</span><br><span class="line">          &lt;br /&gt;</span><br><span class="line">          有效期</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      ),</span><br><span class="line">      dataIndex: &apos;accessTokenValidity&apos;,</span><br><span class="line">      render: value =&gt; humanizeTime(value),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: (</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          RefreshToken</span><br><span class="line">          &lt;br /&gt;</span><br><span class="line">          有效期</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      ),</span><br><span class="line">      dataIndex: &apos;refreshTokenValidity&apos;,</span><br><span class="line">      render: value =&gt; humanizeTime(value),</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      title: &apos;操作&apos;,</span><br><span class="line">      dataIndex: &apos;action&apos;,</span><br><span class="line">      render: (text, record) =&gt; (</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">          &lt;a</span><br><span class="line">            onClick=&#123;() =&gt; &#123;</span><br><span class="line">              this.handleOpenForm(record);</span><br><span class="line">            &#125;&#125;</span><br><span class="line">          &gt;</span><br><span class="line">            编辑</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">          &lt;Divider type=&quot;vertical&quot; /&gt;</span><br><span class="line">          &lt;Popconfirm</span><br><span class="line">            title=&quot;确认删除？&quot;</span><br><span class="line">            onConfirm=&#123;() =&gt; &#123;</span><br><span class="line">              this.handleRemove(record);</span><br><span class="line">            &#125;&#125;</span><br><span class="line">            okText=&quot;确认&quot;</span><br><span class="line">            cancelText=&quot;取消&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;a href=&quot;#&quot;&gt;删除&lt;/a&gt;</span><br><span class="line">          &lt;/Popconfirm&gt;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">      ),</span><br><span class="line">    &#125;,</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    const &#123; dispatch &#125; = this.props;</span><br><span class="line">    dispatch(&#123; type: &apos;client/fetch&apos; &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleTableChange = pagination =&gt; &#123;</span><br><span class="line">    const &#123; current, pageSize &#125; = pagination;</span><br><span class="line">    const &#123; dispatch &#125; = this.props;</span><br><span class="line">    dispatch(&#123; type: &apos;client/fetch&apos;, payload: &#123; page: current - 1, size: pageSize &#125; &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  handleTableExpand = record =&gt; &#123;</span><br><span class="line">    const toTags = items =&gt; items.map((value, index) =&gt; &lt;Tag key=&#123;index&#125;&gt;&#123;value&#125;&lt;/Tag&gt;);</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;DescriptionList size=&quot;small&quot;&gt;</span><br><span class="line">          &lt;Description term=&quot;授权模式&quot;&gt;</span><br><span class="line">            &#123;toTags(getOAuthTypeNames(record.authorizedGrantTypes))&#125;</span><br><span class="line">          &lt;/Description&gt;</span><br><span class="line">          &lt;Description term=&quot;平台编码&quot;&gt;&#123;record.platformCode&#125;&lt;/Description&gt;</span><br><span class="line">          &lt;Description term=&quot;资源IDS&quot;&gt;&#123;record.resourceIds&#125;&lt;/Description&gt;</span><br><span class="line">        &lt;/DescriptionList&gt;</span><br><span class="line">        &lt;DescriptionList style=&#123;&#123; marginTop: 15 &#125;&#125; size=&quot;small&quot;&gt;</span><br><span class="line">          &lt;Description term=&quot;短信验证码长度&quot;&gt;&#123;record.smsCodeLength&#125;&lt;/Description&gt;</span><br><span class="line">          &lt;Description term=&quot;短信验证码有效期&quot;&gt;</span><br><span class="line">            &#123;record.smsCodeLength ? `$&#123;record.smsCodeLength&#125;分钟` : &apos;&apos;&#125;</span><br><span class="line">          &lt;/Description&gt;</span><br><span class="line">          &lt;Description term=&quot;短信验证码签名&quot;&gt;&#123;record.smsCodeSign&#125;&lt;/Description&gt;</span><br><span class="line">        &lt;/DescriptionList&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  handleOpenForm = formData =&gt; &#123;</span><br><span class="line">    const &#123; dispatch &#125; = this.props;</span><br><span class="line">    dispatch(&#123; type: &apos;client/openForm&apos;, payload: formData &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  handleCloseForm = () =&gt; &#123;</span><br><span class="line">    const &#123; dispatch &#125; = this.props;</span><br><span class="line">    dispatch(&#123; type: &apos;client/closeForm&apos; &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  handleAdd = values =&gt; &#123;</span><br><span class="line">    const &#123; dispatch &#125; = this.props;</span><br><span class="line">    dispatch(&#123; type: &apos;client/update&apos;, payload: values &#125;).then(() =&gt; &#123;</span><br><span class="line">      message.success(&apos;操作成功&apos;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  handleRemove = record =&gt; &#123;</span><br><span class="line">    const &#123; dispatch &#125; = this.props;</span><br><span class="line">    dispatch(&#123; type: &apos;client/remove&apos;, payload: record.clientId &#125;).then(() =&gt; &#123;</span><br><span class="line">      message.success(&apos;删除成功&apos;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123;</span><br><span class="line">      client: &#123; list, form &#125;,</span><br><span class="line">      loading,</span><br><span class="line">      submitting,</span><br><span class="line">    &#125; = this.props;</span><br><span class="line">    const paginationProps = &#123;</span><br><span class="line">      showSizeChanger: true,</span><br><span class="line">      showQuickJumper: true,</span><br><span class="line">      ...list.pagination,</span><br><span class="line">    &#125;;</span><br><span class="line">    return (</span><br><span class="line">      &lt;PageHeaderWrapper title=&quot;应用列表&quot;&gt;</span><br><span class="line">        &lt;Card bordered=&#123;false&#125;&gt;</span><br><span class="line">          &lt;div className=&#123;styles.tableList&#125;&gt;</span><br><span class="line">            &lt;div className=&#123;styles.tableListForm&#125; /&gt;</span><br><span class="line">            &lt;div className=&#123;styles.tableListOperator&#125;&gt;</span><br><span class="line">              &lt;Button icon=&quot;plus&quot; type=&quot;primary&quot; onClick=&#123;this.handleOpenForm&#125;&gt;</span><br><span class="line">                新建</span><br><span class="line">              &lt;/Button&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;Table</span><br><span class="line">              rowKey=&quot;clientId&quot;</span><br><span class="line">              size=&quot;middle&quot;</span><br><span class="line">              columns=&#123;this.columns&#125;</span><br><span class="line">              loading=&#123;loading&#125;</span><br><span class="line">              dataSource=&#123;list.data&#125;</span><br><span class="line">              pagination=&#123;paginationProps&#125;</span><br><span class="line">              onChange=&#123;this.handleTableChange&#125;</span><br><span class="line">              expandedRowRender=&#123;this.handleTableExpand&#125;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/Card&gt;</span><br><span class="line">        &lt;ClientForm</span><br><span class="line">          data=&#123;form.data&#125;</span><br><span class="line">          visible=&#123;form.visible&#125;</span><br><span class="line">          submitting=&#123;submitting&#125;</span><br><span class="line">          onClose=&#123;this.handleCloseForm&#125;</span><br><span class="line">          onSave=&#123;this.handleAdd&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/PageHeaderWrapper&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default ClientList;</span><br></pre></td></tr></table></figure><h3 id="2、ClientForm：添加编辑单条数据的Form"><a href="#2、ClientForm：添加编辑单条数据的Form" class="headerlink" title="2、ClientForm：添加编辑单条数据的Form"></a>2、ClientForm：添加编辑单条数据的Form</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; PureComponent &#125; from &apos;react&apos;;</span><br><span class="line">import &#123; Modal, Form, Input, Tabs, InputNumber &#125; from &apos;antd&apos;;</span><br><span class="line">import SecretInput from &apos;./SecretInput&apos;;</span><br><span class="line">import PeriodInput from &apos;./PeriodInput&apos;;</span><br><span class="line">import GrantTypeInput from &apos;./GrantTypeInput&apos;;</span><br><span class="line">import SmsSignInput from &apos;./SmsSignInput&apos;;</span><br><span class="line"></span><br><span class="line">const &#123; Item: FormItem &#125; = Form;</span><br><span class="line">const &#123; TabPane &#125; = Tabs;</span><br><span class="line"></span><br><span class="line">@Form.create()</span><br><span class="line">class ClientForm extends PureComponent &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    tabKey: &apos;1&apos;,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  reset = () =&gt; &#123;</span><br><span class="line">    const &#123; form &#125; = this.props;</span><br><span class="line">    form.resetFields();</span><br><span class="line">    this.setState(&#123; tabKey: &apos;1&apos; &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; data, visible, submitting, onSave, onClose, form &#125; = this.props;</span><br><span class="line">    const &#123; tabKey &#125; = this.state;</span><br><span class="line">    const formItemLayout = &#123;</span><br><span class="line">      labelCol: &#123; span: 5 &#125;,</span><br><span class="line">      wrapperCol: &#123; span: 15 &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    const title = data.clientId ? &apos;更新应用&apos; : &apos;添加应用&apos;;</span><br><span class="line">    return (</span><br><span class="line">      &lt;Modal</span><br><span class="line">        style=&#123;&#123; top: 10 &#125;&#125;</span><br><span class="line">        width=&#123;800&#125;</span><br><span class="line">        title=&#123;title&#125;</span><br><span class="line">        visible=&#123;visible&#125;</span><br><span class="line">        confirmLoading=&#123;submitting&#125;</span><br><span class="line">        onCancel=&#123;() =&gt; &#123;</span><br><span class="line">          this.reset();</span><br><span class="line">          onClose();</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        onOk=&#123;() =&gt; &#123;</span><br><span class="line">          form.validateFields((err, values) =&gt; &#123;</span><br><span class="line">            if (!err) onSave(values);</span><br><span class="line">            else this.setState(&#123; tabKey: &apos;1&apos; &#125;);</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;Form&gt;</span><br><span class="line">          &lt;Tabs</span><br><span class="line">            tabPosition=&quot;left&quot;</span><br><span class="line">            activeKey=&#123;tabKey&#125;</span><br><span class="line">            onChange=&#123;activeKey =&gt; this.setState(&#123; tabKey: activeKey &#125;)&#125;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;TabPane tab=&quot;授权设置&quot; key=&quot;1&quot;&gt;</span><br><span class="line">              &lt;FormItem label=&quot;应用ID&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;clientId&apos;, &#123;</span><br><span class="line">                  rules: [</span><br><span class="line">                    &#123;</span><br><span class="line">                      type: &apos;string&apos;,</span><br><span class="line">                      required: true,</span><br><span class="line">                      message: &apos;应用ID不能为空！&apos;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                  ],</span><br><span class="line">                  initialValue: data.clientId,</span><br><span class="line">                &#125;)(&lt;Input disabled=&#123;!!data.clientId&#125; /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">              &lt;FormItem label=&quot;应用名称&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;clientName&apos;, &#123;</span><br><span class="line">                  rules: [</span><br><span class="line">                    &#123;</span><br><span class="line">                      type: &apos;string&apos;,</span><br><span class="line">                      required: true,</span><br><span class="line">                      message: &apos;应用名称不能为空！&apos;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                  ],</span><br><span class="line">                  initialValue: data.clientName,</span><br><span class="line">                &#125;)(&lt;Input /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">              &lt;FormItem label=&quot;资源IDs&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;resourceIds&apos;, &#123;</span><br><span class="line">                  rules: [</span><br><span class="line">                    &#123;</span><br><span class="line">                      type: &apos;string&apos;,</span><br><span class="line">                      required: true,</span><br><span class="line">                      message: &apos;资源IDs不能为空！&apos;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                  ],</span><br><span class="line">                  initialValue: data.resourceIds,</span><br><span class="line">                &#125;)(&lt;Input /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">              &lt;FormItem label=&quot;授权类型&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;authorizedGrantTypes&apos;, &#123;</span><br><span class="line">                  rules: [</span><br><span class="line">                    &#123;</span><br><span class="line">                      type: &apos;string&apos;,</span><br><span class="line">                      required: true,</span><br><span class="line">                      message: &apos;请选择授权类型！&apos;,</span><br><span class="line">                    &#125;,</span><br><span class="line">                  ],</span><br><span class="line">                  initialValue: data.authorizedGrantTypes,</span><br><span class="line">                &#125;)(&lt;GrantTypeInput /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">              &lt;FormItem label=&quot;Token有效期&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;accessTokenValidity&apos;, &#123;</span><br><span class="line">                  initialValue: _.defaultTo(data.accessTokenValidity, &apos;&apos;),</span><br><span class="line">                &#125;)(&lt;PeriodInput /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">              &lt;FormItem label=&quot;Refresh有效期&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;refreshTokenValidity&apos;, &#123;</span><br><span class="line">                  initialValue: _.defaultTo(data.refreshTokenValidity, &apos;&apos;),</span><br><span class="line">                &#125;)(&lt;PeriodInput /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">              &lt;FormItem label=&quot;秘钥&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;clientSecret&apos;, &#123;</span><br><span class="line">                  initialValue: _.defaultTo(data.clientSecret, &apos;&apos;),</span><br><span class="line">                &#125;)(&lt;SecretInput /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">            &lt;/TabPane&gt;</span><br><span class="line">            &lt;TabPane tab=&quot;短信设置&quot; key=&quot;2&quot;&gt;</span><br><span class="line">              &lt;FormItem label=&quot;验证码长度&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;smsCodeLength&apos;, &#123;</span><br><span class="line">                  initialValue: data.smsCodeLength,</span><br><span class="line">                &#125;)(&lt;InputNumber min=&#123;1&#125; style=&#123;&#123; width: 300 &#125;&#125; /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">              &lt;FormItem label=&quot;验证码有效期(分钟)&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;smsCodeExpire&apos;, &#123;</span><br><span class="line">                  initialValue: data.smsCodeExpire,</span><br><span class="line">                &#125;)(&lt;InputNumber min=&#123;1&#125; style=&#123;&#123; width: 300 &#125;&#125; /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">             &lt;FormItem label=&quot;验证码签名&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;smsCodeSign&apos;, &#123;</span><br><span class="line">                  initialValue: data.smsCodeSign,</span><br><span class="line">                &#125;)(&lt;SmsSignInput /&gt;)&#125;</span><br><span class="line">              &lt;/FormItem&gt;</span><br><span class="line">            &lt;/TabPane&gt;</span><br><span class="line">          &lt;/Tabs&gt;</span><br><span class="line">        &lt;/Form&gt;</span><br><span class="line">      &lt;/Modal&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default ClientForm;</span><br></pre></td></tr></table></figure><h3 id="3、ClientUtil-js"><a href="#3、ClientUtil-js" class="headerlink" title="3、ClientUtil.js"></a>3、ClientUtil.js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import _ from &apos;lodash&apos;;</span><br><span class="line">import moment from &apos;moment&apos;;</span><br><span class="line">export const authTypes = [</span><br><span class="line">  &#123; name: &apos;授权码模式&apos;, value: &apos;authorization_code&apos; &#125;,</span><br><span class="line">  &#123; name: &apos;简化模式&apos;, value: &apos;implicit&apos; &#125;,</span><br><span class="line">  &#123; name: &apos;密码模式&apos;, value: &apos;password&apos; &#125;,</span><br><span class="line">  &#123; name: &apos;客户端模式&apos;, value: &apos;client_credentials&apos; &#125;,</span><br><span class="line">  &#123; name: &apos;刷新模式&apos;, value: &apos;refresh_token&apos; &#125;,</span><br><span class="line">];</span><br><span class="line">export function getOAuthTypeNames(str) &#123;</span><br><span class="line">  if (!str) return [];</span><br><span class="line">  const values = str.split(&apos;,&apos;);</span><br><span class="line">  return values.map(value =&gt; _.find(authTypes, t =&gt; t.value === value).name);</span><br><span class="line">&#125;</span><br><span class="line">export function getResources(str) &#123;</span><br><span class="line">  if (!str) return [];</span><br><span class="line">  return str.split(&apos;,&apos;);</span><br><span class="line">&#125;</span><br><span class="line">export function humanizeTime(value) &#123;</span><br><span class="line">  let timeText = &apos;&apos;;</span><br><span class="line">  if (value) &#123;</span><br><span class="line">    timeText = moment.duration(value, &apos;seconds&apos;).humanize();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    timeText = &apos;未设置&apos;;</span><br><span class="line">  &#125;</span><br><span class="line">  return timeText;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、GrantTypeInput组件GrantTypeInput-js"><a href="#4、GrantTypeInput组件GrantTypeInput-js" class="headerlink" title="4、GrantTypeInput组件GrantTypeInput.js"></a>4、GrantTypeInput组件GrantTypeInput.js</h3><p><img src="https://upload-images.jianshu.io/upload_images/4109786-ad99e0860894e6be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="GrantTypeInput"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; PureComponent &#125; from &apos;react&apos;;</span><br><span class="line">import &#123; Select &#125; from &apos;antd&apos;;</span><br><span class="line">import &#123; authTypes &#125; from &apos;./ClientUtil&apos;;</span><br><span class="line"></span><br><span class="line">const &#123; Option &#125; = Select;</span><br><span class="line"></span><br><span class="line">class GrantTypeInput extends PureComponent &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    value: [],</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.value) &#123;</span><br><span class="line">      const value = props.value ? props.value.split(&apos;,&apos;) : [];</span><br><span class="line">      this.setState(&#123; value &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillReceiveProps(nextProps) &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.value !== nextProps.value &amp;&amp; !nextProps.value) &#123;</span><br><span class="line">      this.setState(&#123; value: [] &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      const value = nextProps.value ? nextProps.value.split(&apos;,&apos;) : [];</span><br><span class="line">      this.setState(&#123; value &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleSelectChange = value =&gt; &#123;</span><br><span class="line">    const &#123; onChange &#125; = this.props;</span><br><span class="line">    this.setState(&#123; value &#125;);</span><br><span class="line">    if (onChange) onChange(value.join(&apos;,&apos;));</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; value &#125; = this.state;</span><br><span class="line">    return (</span><br><span class="line">      &lt;Select</span><br><span class="line">        style=&#123;&#123; width: &apos;100%&apos; &#125;&#125;</span><br><span class="line">        mode=&quot;multiple&quot;</span><br><span class="line">        value=&#123;value&#125;</span><br><span class="line">        onChange=&#123;this.handleSelectChange&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        &#123;authTypes.map((type, index) =&gt; (</span><br><span class="line">          &lt;Option key=&#123;index&#125; value=&#123;type.value&#125;&gt;</span><br><span class="line">            &#123;type.name&#125;</span><br><span class="line">          &lt;/Option&gt;</span><br><span class="line">        ))&#125;</span><br><span class="line">      &lt;/Select&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default GrantTypeInput;</span><br></pre></td></tr></table></figure><h3 id="5、token有效期输入组件PeriodInput-js"><a href="#5、token有效期输入组件PeriodInput-js" class="headerlink" title="5、token有效期输入组件PeriodInput.js"></a>5、token有效期输入组件PeriodInput.js</h3><p><img src="https://upload-images.jianshu.io/upload_images/4109786-ecfedd5b3bc402f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PeriodInput.js"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; PureComponent &#125; from &apos;react&apos;;</span><br><span class="line">import moment from &apos;moment&apos;;</span><br><span class="line"></span><br><span class="line">import &#123; Input, Select &#125; from &apos;antd&apos;;</span><br><span class="line"></span><br><span class="line">const &#123; Option &#125; = Select;</span><br><span class="line"></span><br><span class="line">const getTime = (time, fromUnit, toUnit) =&gt; moment.duration(Number(time), fromUnit).as(toUnit);</span><br><span class="line"></span><br><span class="line">export const timeUnits = [</span><br><span class="line">  &#123; name: &apos;秒&apos;, value: &apos;seconds&apos; &#125;,</span><br><span class="line">  &#123; name: &apos;分钟&apos;, value: &apos;minutes&apos; &#125;,</span><br><span class="line">  &#123; name: &apos;小时&apos;, value: &apos;hours&apos; &#125;,</span><br><span class="line">  &#123; name: &apos;天&apos;, value: &apos;days&apos; &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">class PeriodInput extends PureComponent &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    value: &apos;&apos;,</span><br><span class="line">    unit: &apos;seconds&apos;,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.value) &#123;</span><br><span class="line">      this.setState(&#123;</span><br><span class="line">        unit: &apos;seconds&apos;,</span><br><span class="line">        value: props.value,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillReceiveProps(nextProps) &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.value !== nextProps.value &amp;&amp; !nextProps.value) &#123;</span><br><span class="line">      this.setState(&#123;</span><br><span class="line">        unit: &apos;seconds&apos;,</span><br><span class="line">        value: &apos;&apos;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      this.setState(&#123;</span><br><span class="line">        unit: &apos;seconds&apos;,</span><br><span class="line">        value: nextProps.value,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleSelectChange = unitValue =&gt; &#123;</span><br><span class="line">    const &#123; unit, value &#125; = this.state;</span><br><span class="line">    const newValue = value ? getTime(value, unit, unitValue) : &apos;&apos;;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      unit: unitValue,</span><br><span class="line">      value: newValue,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  onChangeValue = e =&gt; &#123;</span><br><span class="line">    const &#123; value &#125; = e.target;</span><br><span class="line">    const &#123; unit &#125; = this.state;</span><br><span class="line">    const &#123; onChange &#125; = this.props;</span><br><span class="line">    const seconds = getTime(value, unit, &apos;seconds&apos;);</span><br><span class="line">    this.setState(&#123; value &#125;);</span><br><span class="line">    if (onChange) onChange(seconds);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; unit, value &#125; = this.state;</span><br><span class="line">    return (</span><br><span class="line">      &lt;Input</span><br><span class="line">        value=&#123;value&#125;</span><br><span class="line">        onChange=&#123;this.onChangeValue&#125;</span><br><span class="line">        addonAfter=&#123;</span><br><span class="line">          &lt;Select style=&#123;&#123; width: 80 &#125;&#125; value=&#123;unit&#125; onChange=&#123;this.handleSelectChange&#125;&gt;</span><br><span class="line">            &#123;timeUnits.map(t =&gt; (</span><br><span class="line">              &lt;Option key=&#123;t.value&#125; value=&#123;t.value&#125;&gt;</span><br><span class="line">                &#123;t.name&#125;</span><br><span class="line">              &lt;/Option&gt;</span><br><span class="line">            ))&#125;</span><br><span class="line">          &lt;/Select&gt;</span><br><span class="line">        &#125;</span><br><span class="line">      /&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default PeriodInput;</span><br></pre></td></tr></table></figure><h3 id="6、秘钥生成组件SecretInput-js"><a href="#6、秘钥生成组件SecretInput-js" class="headerlink" title="6、秘钥生成组件SecretInput.js"></a>6、秘钥生成组件SecretInput.js</h3><p><img src="https://upload-images.jianshu.io/upload_images/4109786-1c10f576260959fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="SecretInput"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; PureComponent &#125; from &apos;react&apos;;</span><br><span class="line">import &#123; Row, Col, Slider, Input &#125; from &apos;antd&apos;;</span><br><span class="line">import random from &apos;@/utils/random&apos;;</span><br><span class="line"></span><br><span class="line">const minValue = 10;</span><br><span class="line">const maxValue = 30;</span><br><span class="line">const defaultState = &#123;</span><br><span class="line">  visible: false,</span><br><span class="line">  value: &apos;&apos;,</span><br><span class="line">  length: 10,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">class SecretInput extends PureComponent &#123;</span><br><span class="line">  state = &#123; ...defaultState &#125;;</span><br><span class="line"></span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.value) &#123;</span><br><span class="line">      this.setState(&#123; value: props.value &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillReceiveProps(nextProps) &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.value !== nextProps.value &amp;&amp; !nextProps.value) &#123;</span><br><span class="line">      this.setState(&#123; ...defaultState &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      this.setState(&#123; value: nextProps.value &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleCreatePwd = () =&gt; &#123;</span><br><span class="line">    const &#123; length &#125; = this.state;</span><br><span class="line">    this.setState(&#123; visible: true &#125;);</span><br><span class="line">    this.handleChangeLength(length);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  handleChangeLength = length =&gt; &#123;</span><br><span class="line">    const value = random.generate(length);</span><br><span class="line">    this.setState(&#123; length &#125;);</span><br><span class="line">    this.handleChangeValue(value);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  handleChangeValue = value =&gt; &#123;</span><br><span class="line">    const &#123; onChange &#125; = this.props;</span><br><span class="line">    this.setState(&#123; value &#125;);</span><br><span class="line">    if (onChange) onChange(value);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; visible, value, length &#125; = this.state;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;Row gutter=&#123;8&#125;&gt;</span><br><span class="line">          &lt;Col span=&#123;20&#125;&gt;</span><br><span class="line">            &lt;Input value=&#123;value&#125; onChange=&#123;this.handleChangeValue&#125; /&gt;</span><br><span class="line">          &lt;/Col&gt;</span><br><span class="line">          &lt;Col span=&#123;4&#125;&gt;</span><br><span class="line">            &lt;a onClick=&#123;this.handleCreatePwd&#125;&gt;随机生成&lt;/a&gt;</span><br><span class="line">          &lt;/Col&gt;</span><br><span class="line">        &lt;/Row&gt;</span><br><span class="line">        &#123;visible ? (</span><br><span class="line">          &lt;Row&gt;</span><br><span class="line">            &lt;Col span=&#123;20&#125;&gt;</span><br><span class="line">              &lt;Slider</span><br><span class="line">                min=&#123;minValue&#125;</span><br><span class="line">                max=&#123;maxValue&#125;</span><br><span class="line">                value=&#123;length&#125;</span><br><span class="line">                onChange=&#123;this.handleChangeLength&#125;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/Col&gt;</span><br><span class="line">          &lt;/Row&gt;</span><br><span class="line">        ) : null&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default SecretInput;</span><br></pre></td></tr></table></figure></p><h3 id="7、短信签名：输入内容与数据库保存不一致，前端正则加减括号"><a href="#7、短信签名：输入内容与数据库保存不一致，前端正则加减括号" class="headerlink" title="7、短信签名：输入内容与数据库保存不一致，前端正则加减括号"></a>7、短信签名：输入内容与数据库保存不一致，前端正则加减括号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; PureComponent &#125; from &apos;react&apos;;</span><br><span class="line">import &#123; Input &#125; from &apos;antd&apos;;</span><br><span class="line"></span><br><span class="line">const removeBrackets = value =&gt; (value ? value.replace(/[【】]/g, &apos;&apos;) : &apos;&apos;);</span><br><span class="line">const addBrackets = value =&gt; (value ? `【$&#123;value&#125;】` : &apos;&apos;);</span><br><span class="line"></span><br><span class="line">class SmsSignInput extends PureComponent &#123;</span><br><span class="line">  state = &#123;</span><br><span class="line">    value: &apos;&apos;,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.value) this.setStateValue(props.value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillReceiveProps(nextProps) &#123;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    if (props.value !== nextProps.value &amp;&amp; !nextProps.value) &#123;</span><br><span class="line">      this.setStateValue(&apos;&apos;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      this.setStateValue(nextProps.value);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  setStateValue = value =&gt; &#123;</span><br><span class="line">    this.setState(&#123; value: removeBrackets(value) &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  handleChangeValue = e =&gt; &#123;</span><br><span class="line">    const &#123; value &#125; = e.target;</span><br><span class="line">    const &#123; onChange &#125; = this.props;</span><br><span class="line">    this.setState(&#123; value &#125;);</span><br><span class="line">    if (onChange) onChange(addBrackets(value));</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    const &#123; value &#125; = this.state;</span><br><span class="line">    const &#123; props &#125; = this;</span><br><span class="line">    return &lt;Input &#123;...props&#125; value=&#123;value&#125; onChange=&#123;this.handleChangeValue&#125; /&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default SmsSignInput;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后台管理系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antd Pro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Spring Data Jpa 使用备忘</title>
      <link href="/2019/03/24/Spring%20Data%20Jpa%20%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/"/>
      <url>/2019/03/24/Spring%20Data%20Jpa%20%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98/</url>
      
        <content type="html"><![CDATA[<p>好记性不如烂笔头,springboot+SpringDataJpa用了很久了,用到了应该记录一下。<br><a href="https://www.jianshu.com/p/b0bfd76c6389" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a><br>springboot+SpringDataJpa用了很久了，有些东西不用时间长了也还是会忘。<br>好记性不如烂笔头，这话是有道理的，所以用到什么就简单记录下，还是有好处的。</p><h4 id="1、Qquery不能使用limit关键字"><a href="#1、Qquery不能使用limit关键字" class="headerlink" title="1、Qquery不能使用limit关键字"></a>1、Qquery不能使用limit关键字</h4><p>第一种方式：使用nativeQuery<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Query(&quot;SELECT * FROM t_misaka m WHERE m.id&gt;4 limit 0,2&quot;, nativeQuery=true) </span><br><span class="line">  Page&lt;Misaka&gt; search(Pageable pageable);</span><br></pre></td></tr></table></figure></p><p>第二种方式:使用Page实现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Pageable pageable = new PageRequest(1, 2, Direction.ASC, &quot;name&quot;); </span><br><span class="line">Page&lt;Misaka&gt; misakaPage = misakaDao.search(pageable); </span><br><span class="line">List&lt;Misaka&gt; misakaList = misakaPage.getContent();</span><br></pre></td></tr></table></figure></p><p>查询接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Query(&quot;SELECT m FROM Misaka m WHERE m.id&gt;4&quot;) </span><br><span class="line">  Page&lt;Misaka&gt; search(Pageable pageable);</span><br></pre></td></tr></table></figure></p><p>注意：如果使用springboot2.x，上面的<code>Pageable pageable = new PageRequest</code>需要改成<code>Pageable pageable = PageRequest.of();</code>，里面参数一样。</p><h4 id="2、Jpa-Repository里用-Query的查询结果集自定义接受实体"><a href="#2、Jpa-Repository里用-Query的查询结果集自定义接受实体" class="headerlink" title="2、Jpa Repository里用@Query的查询结果集自定义接受实体"></a>2、Jpa Repository里用@Query的查询结果集自定义接受实体</h4><p>直接上查询代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@Query(&quot;SELECT d.smsDate AS smsDate , SUM(d.smsSendCount) AS smsSendCount , SUM(d.smsSendFailureCount) AS  smsSendFailureCount &quot; +</span><br><span class="line">        &quot; FROM DashboardSms d&quot; +</span><br><span class="line">        &quot; WHERE d.smsDate between :startDate AND :endDate &quot; +</span><br><span class="line">        &quot; GROUP BY d.smsDate &quot; +</span><br><span class="line">        &quot; ORDER BY d.smsDate ASC &quot;)</span><br><span class="line">List&lt;SmsCountSum&gt; findAllBySmsDate(Date startDate, Date endDate);</span><br><span class="line"></span><br><span class="line">interface SmsCountSum &#123;</span><br><span class="line">    Date getSmsDate();</span><br><span class="line">    Integer getSmsSendCount();</span><br><span class="line">    Integer getSmsSendFailureCount();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调用处：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">List&lt;SlaveDashboardSmsRepository.SmsCountSum&gt; list = slaveDashboardSmsRepository.findAllBySmsDate(startDate, entDate);</span><br><span class="line">List&lt;DashboardXYVo&gt; smsChartData = list.stream().map(this::smsDataToVo).collect(Collectors.toList());</span><br><span class="line">private DashboardXYVo smsDataToVo(SlaveDashboardSmsRepository.SmsCountSum sms) &#123;</span><br><span class="line">    DashboardXYVo vo = new DashboardXYVo();</span><br><span class="line">    vo.setX(DateUtil.date2str(sms.getSmsDate(), DateUtil.MONTH_DAY_FORMAT));</span><br><span class="line">    vo.setY(String.valueOf(sms.getSmsSendCount()));</span><br><span class="line">    return vo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="3、使用Specification查询"><a href="#3、使用Specification查询" class="headerlink" title="3、使用Specification查询"></a>3、使用Specification查询</h4><p>一个常写的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public static Specification&lt;DashboardAppSmsLogin&gt; build(Date startDate, Date endDate) &#123;</span><br><span class="line">    return (root, criteriaQuery, builder) -&gt; &#123;</span><br><span class="line"></span><br><span class="line">        Predicate predicate = builder.conjunction();</span><br><span class="line">        try &#123;</span><br><span class="line">            if (startDate != null) &#123;</span><br><span class="line">                Predicate graterStartTime = null;</span><br><span class="line">                graterStartTime = builder.greaterThanOrEqualTo(root.get(&quot;smsDate&quot;), DateUtil.formateData(startDate, DateUtil.DATE_FORMAT));</span><br><span class="line">                predicate = builder.and(predicate, graterStartTime);</span><br><span class="line">            &#125;</span><br><span class="line">            if (endDate != null) &#123;</span><br><span class="line">                Predicate lessEndTime = builder.lessThanOrEqualTo(root.get(&quot;smsDate&quot;), DateUtil.formateData(endDate, DateUtil.DATE_FORMAT));</span><br><span class="line">                predicate = builder.and(predicate, lessEndTime);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        criteriaQuery.orderBy(builder.desc(root.get(&quot;appName&quot;)));</span><br><span class="line">        return predicate;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Date yesterday = DateUtil.pastDate(new Date, 1);</span><br><span class="line">Specification&lt;DashboardAppSmsLogin&gt; spec = DashboardAppSmsSpecs.build(yesterday, new Date);</span><br><span class="line">List&lt;DashboardAppSmsLogin&gt; appSmsLogin = slaveDashboardAppSmsLoginRepository.findAll(spec);</span><br></pre></td></tr></table></figure></p><p>封装一层条件查的例子：<br>包括equal、like、大于等于、小于等于、时间等条件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 登录成功构建</span><br><span class="line"> * @param query</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public static Specification&lt;UserLoginLog&gt; loginBuild(UserLoginLogQuery query) &#123;</span><br><span class="line">    return (root, criteriaQuery, builder) -&gt; buildPredicate(root, builder, query);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 登录失败构建</span><br><span class="line"> * @param query</span><br><span class="line"> * @return</span><br><span class="line"> */</span><br><span class="line">public static Specification&lt;UserLoginFailureLog&gt; loginFailureBuild(UserLoginLogQuery query) &#123;</span><br><span class="line">    return (root, criteriaQuery, builder) -&gt; buildPredicate(root, builder, query);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">private static Predicate buildPredicate(Root root, CriteriaBuilder builder, UserLoginLogQuery query)&#123;</span><br><span class="line">    Predicate predicate = builder.conjunction();</span><br><span class="line">    if (!StringUtils.isEmpty(query.getAppId())) &#123;</span><br><span class="line">        Predicate equalMenuValue = builder.equal(root.get(&quot;appId&quot;), query.getAppId());</span><br><span class="line">        predicate = builder.and(predicate, equalMenuValue);</span><br><span class="line">    &#125;</span><br><span class="line">    if (!StringUtils.isEmpty(query.getMobile())) &#123;</span><br><span class="line">        String likeMobile = &quot;%&quot; + query.getMobile() + &quot;%&quot;;</span><br><span class="line">        Predicate equalMenuValue = builder.like(root.get(&quot;mobile&quot;), likeMobile);</span><br><span class="line">        predicate = builder.and(predicate, equalMenuValue);</span><br><span class="line">    &#125;</span><br><span class="line">    if (query.getStartLoginTime() != null) &#123;</span><br><span class="line">        Predicate graterStartTime = builder.greaterThanOrEqualTo(root.get(&quot;loginTime&quot;), query.getStartLoginTime());</span><br><span class="line">        predicate = builder.and(predicate, graterStartTime);</span><br><span class="line">    &#125;</span><br><span class="line">    if (query.getEndLoginTime() != null) &#123;</span><br><span class="line">        Predicate lessEndTime = builder.lessThanOrEqualTo(root.get(&quot;loginTime&quot;), query.getEndLoginTime());</span><br><span class="line">        predicate = builder.and(predicate, lessEndTime);</span><br><span class="line">    &#125;</span><br><span class="line">    return predicate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调用就一样了。</p><h4 id="4、用-Modifying进行更新操作"><a href="#4、用-Modifying进行更新操作" class="headerlink" title="4、用@Modifying进行更新操作"></a>4、用@Modifying进行更新操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@Modifying</span><br><span class="line">@Query(&quot;update YhTask t set t.deleteFlag = &apos;1&apos; where t.taskId = :taskId&quot;)</span><br><span class="line">int logicDeleteTask(@Param(&quot;taskId&quot;) String taskId);</span><br></pre></td></tr></table></figure><h4 id="5、JPA的Query里进行条件为空容错，时间格式化"><a href="#5、JPA的Query里进行条件为空容错，时间格式化" class="headerlink" title="5、JPA的Query里进行条件为空容错，时间格式化"></a>5、JPA的Query里进行条件为空容错，时间格式化</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Query(&quot;select u from YhUser u &quot; +</span><br><span class="line">            &quot;where u.deleteFlag = &apos;0&apos; and u.leaderFlag = &apos;0&apos; &quot; +</span><br><span class="line">            &quot;and u.fullName like concat(&apos;%&apos;,:createUserName,&apos;%&apos;) &quot; +</span><br><span class="line">            &quot;and (:platformId is null or :platformId is not null and u.platformId = :platformId) &quot; +</span><br><span class="line">            &quot;and (:areaId is null or :areaId is not null and u.areaId = :areaId) &quot; +</span><br><span class="line">            &quot; and DATE_FORMAT(s.firstLoginTime,&apos;%Y-%m-%d&apos;)&gt;=str_to_date(:startTime,&apos;%Y-%m-%d&apos;) &quot; +</span><br><span class="line">            &quot; and DATE_FORMAT(s.firstLoginTime,&apos;%Y-%m-%d&apos;)&lt;=str_to_date(:endTime,&apos;%Y-%m-%d&apos;)&quot; +</span><br><span class="line">            &quot;and u.haierUserId not in (&quot; +</span><br><span class="line">            &quot;select t.createUserId from YhTask t where t.deleteFlag = &apos;0&apos; &quot; +</span><br><span class="line">            &quot;and t.createTime between :startTime and :endTime)&quot;)</span><br><span class="line">    List&lt;YhUser&gt; findUnsubmitedUserByTime(@Param(&quot;createUserName&quot;) String createUserName, @Param(&quot;platformId&quot;) String platformId, @Param(&quot;areaId&quot;) String areaId, @Param(&quot;startTime&quot;) Date startTime, @Param(&quot;endTime&quot;) Date endTime);</span><br></pre></td></tr></table></figure><h4 id="6、多表级联的情况，条件查询示例"><a href="#6、多表级联的情况，条件查询示例" class="headerlink" title="6、多表级联的情况，条件查询示例"></a>6、多表级联的情况，条件查询示例</h4><p>比如，部门实体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">@Entity</span><br><span class="line">@Table(name = &quot;t_user&quot;)</span><br><span class="line">public class User implements Serializable &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = 3046056270962780761L;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 用户id</span><br><span class="line">     */</span><br><span class="line">    @Id</span><br><span class="line">    @GenericGenerator(name = &quot;idGenerator&quot;, strategy = &quot;uuid&quot;)</span><br><span class="line">    @GeneratedValue(generator = &quot;idGenerator&quot;)</span><br><span class="line">    private String userId;</span><br><span class="line"></span><br><span class="line">    @ManyToOne</span><br><span class="line">    @JoinColumn(name = &quot;dept_id&quot;)</span><br><span class="line">    @NotFound(action = NotFoundAction.IGNORE)</span><br><span class="line">    private Department department;</span><br></pre></td></tr></table></figure></p><p>部门实体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">@Entity</span><br><span class="line">@Table(name = &quot;t_department&quot;)</span><br><span class="line">public class Department implements Serializable &#123;</span><br><span class="line"></span><br><span class="line">    private static final long serialVersionUID = 5415593855586815943L;</span><br><span class="line"></span><br><span class="line">    @Id</span><br><span class="line">    @GenericGenerator(name = &quot;idGenerator&quot;, strategy = &quot;uuid&quot;)</span><br><span class="line">    @GeneratedValue(generator = &quot;idGenerator&quot;)</span><br><span class="line">    @Column(name = &quot;dept_id&quot;)</span><br><span class="line">    private String deptId;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 部门们称</span><br><span class="line">     */</span><br><span class="line">    private String deptName;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 部门代码</span><br><span class="line">     */</span><br><span class="line">    private String deptCode;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 父节点</span><br><span class="line">     */</span><br><span class="line">    private String parentId;</span><br></pre></td></tr></table></figure></p><p>根据多个部门id查询用户列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; allDeptIds = findDeptIds(deptId);</span><br><span class="line">Page&lt;HaierUser&gt; users = haierUserRepository.findByDepartment_DeptIdIn(allDeptIds, pageable);</span><br></pre></td></tr></table></figure></p><p>findByDepartment_DeptIdIn方法呢？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * 通过部门ID查询用户</span><br><span class="line">     *</span><br><span class="line">     * @param deptIds</span><br><span class="line">     * @param pageable</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    Page&lt;HaierUser&gt; findByDepartment_DeptIdIn(List&lt;String&gt; deptIds, Pageable pageable);</span><br></pre></td></tr></table></figure></p><p>中间一个下划线链接，就是这么简单。</p><h3 id="7、创建时间和更新时间自动处理"><a href="#7、创建时间和更新时间自动处理" class="headerlink" title="7、创建时间和更新时间自动处理"></a>7、创建时间和更新时间自动处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@Entity  </span><br><span class="line">@Table(name=&quot;t_login_log&quot;)  </span><br><span class="line">@Data</span><br><span class="line">public class LoginLog &#123;  </span><br><span class="line">  @Id  </span><br><span class="line">  @GenericGenerator(name=&quot;UUIDGENERATE&quot;,strategy=&quot;uuid2&quot;)  </span><br><span class="line">  @GeneratedValue(generator=&quot;UUIDGENERATE&quot;)  </span><br><span class="line">  @Column(name=&quot;id&quot;,length=36)  </span><br><span class="line">  private String id;</span><br><span class="line">  </span><br><span class="line">  @Column(name=&quot;create_time, updatable = false)  </span><br><span class="line">  @Temporal(TemporalType.TIMESTAMP)  </span><br><span class="line">  @org.hibernate.annotations.CreationTimestamp   </span><br><span class="line">  private Date createTime;</span><br><span class="line">   </span><br><span class="line">  @Column(name=&quot;update_time&quot;)  </span><br><span class="line">  @Temporal(TemporalType.TIMESTAMP)  </span><br><span class="line">  @org.hibernate.annotations.UpdateTimestamp</span><br><span class="line">  private Date updateTime;</span><br></pre></td></tr></table></figure><h3 id="8、实体上常用的一些注解"><a href="#8、实体上常用的一些注解" class="headerlink" title="8、实体上常用的一些注解"></a>8、实体上常用的一些注解</h3><p>时间格式化<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@JsonFormat(pattern = DateUtil.TIME_FORMAT, timezone = &quot;GMT+8&quot;)</span><br><span class="line">@Column(updatable = false)</span><br><span class="line">private Date createTime;</span><br></pre></td></tr></table></figure></p><p>在json结构中忽略<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 删除标志，1：删除，0：未删除</span><br><span class="line"> */</span><br><span class="line">@JsonIgnore</span><br><span class="line">private Boolean deleteFlag = false;</span><br></pre></td></tr></table></figure></p><p>插入/更新时自动赋值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  @PrePersist</span><br><span class="line">  public void PrePersist() &#123;</span><br><span class="line">      this.createTime = new Date();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">@PreUpdate</span><br><span class="line">  public void PreUpdate() &#123;</span><br><span class="line">      this.updateTime = new Date();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>@Temporal(TemporalType.DATE)<br>在页面端取值：2016–09–28<br>@Temporal(TemporalType.TIME)<br>在页面端取值：15:50:30<br>@Temporal(TemporalType.TIMESTAMP)<br>在页面端取值：2016-09-28 15:52:32:000</p><h4 id="9、自定义Repository实现查询"><a href="#9、自定义Repository实现查询" class="headerlink" title="9、自定义Repository实现查询"></a>9、自定义Repository实现查询</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">import org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line">import javax.persistence.EntityManager;</span><br><span class="line">import javax.persistence.PersistenceContext;</span><br><span class="line">import javax.persistence.Query;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 推送类型统计</span><br><span class="line"> */</span><br><span class="line">@Repository</span><br><span class="line">public class MessageStatisticRepository &#123;</span><br><span class="line"></span><br><span class="line">    @PersistenceContext</span><br><span class="line">    private EntityManager entityManager;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 统计每个推送类型的推送消息数量</span><br><span class="line">     * @param userId</span><br><span class="line">     * @param search</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public List&lt;Object[]&gt;  findMessageTypeCont(String userId, String search)&#123;</span><br><span class="line">        String sql = &quot;SELECT t.id,t.title,t.icon,p.num FROM t_message_type AS t INNER JOIN  &quot; +</span><br><span class="line">                     &quot;(&quot; +</span><br><span class="line">                        &quot;SELECT type,COUNT(*) AS num FROM t_message_push &quot; +</span><br><span class="line">                        &quot;WHERE (title LIKE :search OR content LIKE :search) AND state &lt;&gt; 3 AND receive_user_id=:userId &quot; +</span><br><span class="line">                        &quot;GROUP BY type&quot; +</span><br><span class="line">                     &quot;) AS p &quot; +</span><br><span class="line">                     &quot; on t.id = p.type WHERE t.delete_flag=0 ORDER BY t.order ASC&quot;;</span><br><span class="line">        Query query = entityManager.createNativeQuery(sql);</span><br><span class="line">        query.setParameter(&quot;search&quot;, &apos;%&apos; +search + &apos;%&apos;);</span><br><span class="line">        query.setParameter(&quot;userId&quot;, userId);</span><br><span class="line">        return query.getResultList();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取到的结果是List的Object数组，里面的值需要解析Object获取。<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public static MessageTypeVo toMessageTypeVo(Object[] data)&#123;</span><br><span class="line">    MessageTypeVo messageType = new MessageTypeVo();</span><br><span class="line">    messageType.setId((String) data[0]);</span><br><span class="line">    messageType.setTitle((String) data[1]);</span><br><span class="line">    messageType.setIcon((String) data[2]);</span><br><span class="line">    messageType.setCount((BigInteger) data[3]);</span><br><span class="line">    return messageType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">List&lt;Object[]&gt; rows = messageStatisticRepository.findMessageTypeCont(userId, keywords);</span><br><span class="line">List&lt;MessageTypeVo&gt; messageTypes = rows.stream().map(MessageTypeVo::toMessageTypeVo).collect(Collectors.toList());</span><br></pre></td></tr></table></figure></p><p>上面的查询如果不返回Object，也可以设置返回成map，只需要在查询前设置<code>ResultTransformer</code>即可:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">query.unwrap(SQLQuery.class).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP);</span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; resultLit = query.getResultList();</span><br></pre></td></tr></table></figure></p><h4 id="10、多表级联查询自定义返回结果"><a href="#10、多表级联查询自定义返回结果" class="headerlink" title="10、多表级联查询自定义返回结果"></a>10、多表级联查询自定义返回结果</h4><p>首先定义一个结果集的接口类，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public interface HotelSummary &#123;</span><br><span class="line">    City getCity();</span><br><span class="line">    String getName();</span><br><span class="line">    Double getAverageRating();</span><br><span class="line">    default Integer getAverageRatingRounded() &#123;</span><br><span class="line">        return getAverageRating() == null ? null : (int) Math.round(getAverageRating());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>查询的方法返回类型设置为新创建的接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@Query(&quot;select h.city as city, h.name as name, avg(r.rating) as averageRating &quot;</span><br><span class="line">        - &quot;from Hotel h left outer join h.reviews r where h.city = ?1 group by h&quot;)</span><br><span class="line">Page&lt;HotelSummary&gt; findByCity(City city, Pageable pageable);</span><br><span class="line"></span><br><span class="line">@Query(&quot;select h.name as name, avg(r.rating) as averageRating &quot;</span><br><span class="line">        - &quot;from Hotel h left outer join h.reviews r  group by h&quot;)</span><br><span class="line">Page&lt;HotelSummary&gt; findByCity(Pageable pageable);</span><br></pre></td></tr></table></figure></p><p>使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Page&lt;HotelSummary&gt; hotels = this.hotelRepository.findByCity(new PageRequest(0, 10, Direction.ASC, &quot;name&quot;));</span><br><span class="line">for(HotelSummary summay:hotels) &#123;</span><br><span class="line">    System.out.println(&quot;Name&quot; +summay.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="碰到的错误"><a href="#碰到的错误" class="headerlink" title="碰到的错误"></a>碰到的错误</h1><h3 id="版本问题"><a href="#版本问题" class="headerlink" title="版本问题"></a>版本问题</h3><p>1、问题和现状<br>配置一个Hibernate的OneToMany的映射，想要达到级联保存和级联查询，查主体时将对应的many的列表页查出来，但是在如下的配置后，<br>主表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">@Entity</span><br><span class="line">@Table(name = &quot;t_patient&quot;)</span><br><span class="line">public class Patient &#123;</span><br><span class="line">    @Id</span><br><span class="line">    @GenericGenerator(name = &quot;idGenerator&quot;, strategy = &quot;uuid&quot;)</span><br><span class="line">    @GeneratedValue(generator = &quot;idGenerator&quot;)</span><br><span class="line">    @Column(name = &quot;patient_id&quot;, length = 40)</span><br><span class="line">    private String patientId;</span><br><span class="line"></span><br><span class="line">    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)</span><br><span class="line">    @JoinColumn(name = &quot;patient_id&quot;)</span><br><span class="line">    private List&lt;PatientAllergicHistory&gt; patientAllergicHistory = new LinkedList&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>子表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">@Entity</span><br><span class="line">@Table(name = &quot;t_patient_allergic_history&quot;)</span><br><span class="line">public class PatientAllergicHistory &#123;</span><br><span class="line">    @Id</span><br><span class="line">    @GenericGenerator(name = &quot;idGenerator&quot;, strategy = &quot;uuid&quot;)</span><br><span class="line">    @GeneratedValue(generator = &quot;idGenerator&quot;)</span><br><span class="line">    @Column(name = &quot;id&quot;)</span><br><span class="line">    private Long id;</span><br><span class="line"></span><br><span class="line">    /** 患者id */</span><br><span class="line">    @Column(name = &quot;patient_id&quot;)</span><br><span class="line">    private String patientId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>查询时抛出异常<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: failed to lazily initialize a collection of role: com.hczt.xhminiapp.db.entity.Patient.patientContacts, could not initialize proxy - no Session; nested exception is com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: com.hczt.xhminiapp.db.entity.Patient.patientContacts, could not initialize proxy - no Session (through reference chain: com.hczt.xhminiapp.common.bean.RtnResult[&quot;data&quot;]-&gt;com.hczt.xhminiapp.db.entity.Patient[&quot;patientContacts&quot;])</span><br><span class="line">at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:296)</span><br><span class="line">at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:103)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)</span><br><span class="line">at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)</span><br><span class="line">at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)</span><br><span class="line">at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)</span><br><span class="line">at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)</span><br><span class="line">at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)</span><br><span class="line">at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)</span><br><span class="line">at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)</span><br><span class="line">at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)</span><br><span class="line">at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)</span><br><span class="line">at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)</span><br><span class="line">at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)</span><br><span class="line">at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)</span><br><span class="line">at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)</span><br><span class="line">at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)</span><br><span class="line">at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)</span><br><span class="line">at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)</span><br><span class="line">at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)</span><br><span class="line">at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)</span><br><span class="line">at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)</span><br><span class="line">at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)</span><br><span class="line">at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)</span><br><span class="line">at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)</span><br><span class="line">at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</span><br><span class="line">at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)</span><br><span class="line">at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)</span><br><span class="line">at java.lang.Thread.run(Thread.java:748)</span><br><span class="line">Caused by: com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: com.hczt.xhminiapp.db.entity.Patient.patientContacts, could not initialize proxy - no Session (through reference chain: com.hczt.xhminiapp.common.bean.RtnResult[&quot;data&quot;]-&gt;com.hczt.xhminiapp.db.entity.Patient[&quot;patientContacts&quot;])</span><br><span class="line">at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:394)</span><br><span class="line">at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:353)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(StdSerializer.java:316)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:727)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)</span><br><span class="line">at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1396)</span><br><span class="line">at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:913)</span><br><span class="line">at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:287)</span><br><span class="line">... 47 common frames omitted</span><br><span class="line">Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.hczt.xhminiapp.db.entity.Patient.patientContacts, could not initialize proxy - no Session</span><br><span class="line">at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:597)</span><br><span class="line">at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:216)</span><br><span class="line">at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:160)</span><br><span class="line">at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:287)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:97)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)</span><br><span class="line">at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)</span><br><span class="line">... 56 common frames omitted</span><br></pre></td></tr></table></figure></p><p>2、原因和解决<br>该异常在<a href="https://stackoverflow.com/questions/4334970/hibernate-cannot-simultaneously-fetch-multiple-bags" target="_blank" rel="noopener">https://stackoverflow.com/questions/4334970/hibernate-cannot-simultaneously-fetch-multiple-bags</a>上找到了答案（staticOverFlow还是很强大的）。</p><p>I think a newer version of hibernate (supporting JPA 2.0) should handle this. But otherwise you can work it around by annotating the collection fields with:  <code>@LazyCollection(LazyCollectionOption.FALSE)</code>,Remember to remove the fetchType attribute from the @*ToMany annotation.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@OneToMany(cascade = CascadeType.ALL)</span><br><span class="line">@LazyCollection(LazyCollectionOption.FALSE)</span><br><span class="line">@JoinColumn(name = &quot;patient_id&quot;)</span><br><span class="line">private List&lt;PatientAllergicHistory&gt; patientAllergicHistory = new LinkedList&lt;&gt;();</span><br></pre></td></tr></table></figure></p><p>正常的控制台日志应该是这样的，主查询完了以后，开启子查询<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">10:26:29.920 [http-nio-8085-exec-10] INFO  p6spy - 10:26:29|1|SELECT 1 FROM DUAL</span><br><span class="line">10:26:29.932 [http-nio-8085-exec-10] INFO  p6spy - 10:26:29|4|select patient0_.patient_id as patient_1_3_0_, patient0_.create_time as create_t2_3_0_, patient0_.deleted as deleted3_3_0_, patient0_.first_diagnose_date as first_di4_3_0_, patient0_.first_injection_date as first_in5_3_0_, patient0_.gender as gender6_3_0_, patient0_.height as height7_3_0_, patient0_.mobile as mobile8_3_0_, patient0_.name as name9_3_0_, patient0_.nick_name as nick_na10_3_0_, patient0_.openid as openid11_3_0_, patient0_.passive_smoking as passive15_3_0_, patient0_.self_smoking as self_sm12_3_0_, patient0_.unionid as unionid13_3_0_, patient0_.weight as weight14_3_0_, sysdict1_.id as id1_6_1_, sysdict1_.code as code2_6_1_, sysdict1_.create_time as create_t3_6_1_, sysdict1_.deleted as deleted4_6_1_, sysdict1_.group_code as group_co5_6_1_, sysdict1_.name as name6_6_1_, sysdict1_.parent_id as parent_i7_6_1_, sysdict1_.sort as sort8_6_1_, sysdict1_.type as type9_6_1_, sysdict1_.update_time as update_10_6_1_ from t_patient patient0_ left outer join t_sys_dict sysdict1_ on patient0_.passive_smoking=sysdict1_.id where patient0_.patient_id=&apos;111&apos;</span><br><span class="line">10:26:29.940 [http-nio-8085-exec-10] INFO  p6spy - 10:26:29|2|select patientcon0_.patient_id as patient_6_5_0_, patientcon0_.id as id1_5_0_, patientcon0_.id as id1_5_1_, patientcon0_.address as address2_5_1_, patientcon0_.gender as gender3_5_1_, patientcon0_.mobile as mobile4_5_1_, patientcon0_.name as name5_5_1_, patientcon0_.patient_id as patient_6_5_1_, patientcon0_.relation as relation7_5_1_, sysdict1_.id as id1_6_2_, sysdict1_.code as code2_6_2_, sysdict1_.create_time as create_t3_6_2_, sysdict1_.deleted as deleted4_6_2_, sysdict1_.group_code as group_co5_6_2_, sysdict1_.name as name6_6_2_, sysdict1_.parent_id as parent_i7_6_2_, sysdict1_.sort as sort8_6_2_, sysdict1_.type as type9_6_2_, sysdict1_.update_time as update_10_6_2_ from t_patient_contacts patientcon0_ left outer join t_sys_dict sysdict1_ on patientcon0_.relation=sysdict1_.id where patientcon0_.patient_id=&apos;111&apos;</span><br><span class="line">10:26:29.945 [http-nio-8085-exec-10] INFO  p6spy - 10:26:29|1|select patientall0_.patient_id as patient_5_4_0_, patientall0_.id as id1_4_0_, patientall0_.id as id1_4_1_, patientall0_.gmxby as gmxby2_4_1_, patientall0_.gmxpy as gmxpy3_4_1_, patientall0_.main as main4_4_1_, patientall0_.patient_id as patient_5_4_1_, patientall0_.swgm as swgm6_4_1_, patientall0_.ybgmz as ybgmz7_4_1_, patientall0_.zqgxc as zqgxc8_4_1_ from t_patient_allergic_history patientall0_ where patientall0_.patient_id=&apos;111&apos;</span><br><span class="line">10:26:29.947 [http-nio-8085-exec-10] INFO  p6spy - 10:26:29|0|</span><br></pre></td></tr></table></figure></p><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><p><a href="[https://niocoder.com/categories/#Security](https://niocoder.com/categories/#Security">Security源码分析</a><br>)</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转--BizCharts使用采坑教程</title>
      <link href="/2019/03/19/%E8%BD%AC--BizCharts%E4%BD%BF%E7%94%A8%E9%87%87%E5%9D%91%E6%95%99%E7%A8%8B/"/>
      <url>/2019/03/19/%E8%BD%AC--BizCharts%E4%BD%BF%E7%94%A8%E9%87%87%E5%9D%91%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>最近项目的管理后台都在用阿里粑粑开源的管理框架<a href="https://pro.ant.design/index-cn" target="_blank" rel="noopener">Ant Design Pro</a>，说真话，还是比较好用的。该框架内部也封装了一些图标插件，但是在最近的一个项目中发现，这些图标可定制性还是差了点，不能满足客户需求。</p><p><a href="https://www.jianshu.com/p/9dc63b4d96dd" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>最近项目的管理后台都在用阿里粑粑开源的管理框架<a href="https://pro.ant.design/index-cn" target="_blank" rel="noopener">Ant Design Pro</a>，说真话，还是比较好用的。该框架内部也封装了一些图标插件，但是在最近的一个项目中发现，这些图标可定制性还是差了点，不能满足客户需求。</p><p>好在它的后面也介绍了自己亲生的BizChart可视化图表组件，因为定制性比较高，但是api中的介绍又不是每个都有例子，更没有组合使用的例子，经过度娘介绍，发现这片文章备受我青睐，我怕作者哪天不高兴放弃了，所以转存了一份，顺便把自己实践到的补充到后面。</p><h1 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h1><p>作为一个前端打字员，除了绿茶婊之外，最讨厌的就是图表：一个让我伤心，一个让我难过；比这更讨厌的就是文档写得不清不楚的图表库（大概率是九年义务教育期间没有学好语文），让我又爱又恨！所以本篇博文会比较枯燥，只简单描述一下使用BizCharts的过程，当然，重要的是总结遇到的坑（遵从一个坑不踩两次，一个女生不泡两次原则）。</p><p>By the way，提到BizCharts，让我们感谢一下阿里巴巴：其开源了这个好用的（虽然偶尔不那么好用，还偶得挺经常的）的react图表库供大家使用，对使用react技术栈的前端打字员来说简直就是福音。本文不会有过多的api解释，具体的接口可以看官网文档鬼门关。</p><h2 id="正经篇幅"><a href="#正经篇幅" class="headerlink" title="正经篇幅"></a>正经篇幅</h2><p>刚开始，视觉设计师哄我说：“我的要求并不高，待我从前一样好”，啊呸，说错了，“我的要求是：只要能把数据用直方图展现出来就好了”，so easy</p><p>// 引入相关的组件<br>    import { Chart, Axis, Tooltip, Geom } from ‘bizcharts’;</p><pre><code>// 随便mock一下数据const str = [&apos;we&apos;, &apos;are&apos;, &apos;the&apos;, &apos;black&apos;, &apos;gold&apos;, &apos;team&apos;];const mockData = () =&gt; {    let result = [];    for (let i = 0, len = 6; i &lt; len; i++) {        result.push({            xAxis: ticks[i],            yAxis: Math.floor(Math.random() * 100)        });    }    return result;};// 图表组件&lt;Chart    width={ 600 }    height={ 400 }    data={ mockData() }&gt;    {/* x轴，横轴，以data数据的xAxis属性值为柱子的值 */}    &lt;Axis name=&quot;xAxis&quot; /&gt;    {/* y轴，纵轴，以data数据的yAxis属性值为柱子的值 */}    &lt;Axis name=&quot;yAxis&quot; /&gt;    {/* 鼠标hover直方图柱子的时候，tooltip显示的值 */}    &lt;Tooltip /&gt;    {/* 几何标记对象，主要用以描述你要画的是什么图形（直方图、折线图、饼状图、区域图）：interval是直方图 */}    &lt;Geom        type=&quot;interval&quot;        position=&quot;xAxis*yAxis&quot;    /&gt;&lt;/Chart&gt;</code></pre><p>一波操作猛如狗，让视觉设计师看看效果：</p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-c9c57d84f1e0fd5c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>note：此直方图每一根柱子都是单点的，也就是其反映了某个横坐标点的数据情况。加入我们需要一个连续区间柱子，那么作为xAxis的数据字段值应该为一个数组，包含两个元素，表明区间的起始值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">const mockData = () =&gt; &#123;</span><br><span class="line">        let result = [];</span><br><span class="line"></span><br><span class="line">        for (let i = 0, len = 6; i &lt; len; i++) &#123;</span><br><span class="line">            result.push(&#123;</span><br><span class="line">                xAxis: [i + 0.01, i + 1 - 0.01], // 如果不加减0.01，那么第一根柱子的终点跟第二根柱子的起点是同一个，会感觉两个柱子粘在一起</span><br><span class="line">                yAxis: Math.floor(Math.random() * 100)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return result;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-0dad48ebdfaa6530.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="BizChart2.jpg"></p><p>视觉设计师：“emmmmmm，图表长宽定死了会不会有点僵硬啊，高度可以写死，宽度总得来个自适应吧？”</p><p>“毛闷台”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Chart</span><br><span class="line">        height=&#123; 400 &#125;</span><br><span class="line">        data=&#123; mockData() &#125;</span><br><span class="line">        forceFit // 我妈说了（guanfang wendang shuode），加上这个属性就可以使图表宽度自适应了，隔壁echart同学要学习一下</span><br><span class="line">    &gt;</span><br><span class="line">&lt;/Chart&gt;</span><br></pre></td></tr></table></figure></p><p>效果秀一波</p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-665f13559b2ec2c4?imageMogr2/auto-orient/strip" alt="数据可视化，BizCharts图表库入坑历程"></p><p>视觉（蜜汁微笑）：“猿子，你这玩意有bug啊”</p><p>“胡说，你这傻*不会用吧”</p><p>（理直气壮）“哼哼，放大窗口图表宽度确实会自适应，但是缩小就挂掉了（并不自适应），ahhhhhh”</p><p>（谄媚）“讨厌，再给我两分钟~~让我把bug结成冰。。。”</p><p>note: 实验表明，如果Chart组件的父组件Father采用flex布局，即Father使用flex自适应宽度，那么就会出现上述的问题；所以，如果有多个图表同行并列布局，请不要使用flex布局，给Father组件的宽度设置为百分比吧，此时的forceFit就会起作用了。同时，BizCharts对重绘设置了防抖，只有当停止缩放的时候才会重绘。</p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-43c357642c979a0d?imageMogr2/auto-orient/strip" alt="数据可视化，BizCharts图表库入坑历程"></p><p>（屌到飞起）“over，拿去用吧”</p><p>（一脸鄙视）“哇喔~好棒棒呀，敢不敢让我调一点点小细节，我保证就一点点！”</p><p>“Come on baby！”</p><p>“</p><ol><li>鼠标hover柱子的时候，为什么柱子后面有个很丑的方框，换个颜色吧！</li><li>鼠标hover柱子的时候，出现的tooltip样式丑爆了，待会我给你设计一个吧</li><li>鼠标hover柱子的时候，柱子的颜色应该有所改变，对用户比较友好！！！</li><li>…哎，你别拿刀啊~~~</li></ol><p>”</p><p>把视觉杀了之后，需求还是要做的，先解决死者的第一个遗愿。</p><p>Tooltip组件提供了一个属性crosshairs，用以设置tooltip的辅助线和辅助框；默认情况下，此属性会为’line’、‘area’、‘path’、‘areaStack’类型的Geom组件开启垂直辅助线、为‘interval’类型的Geom组件展示矩形背景框。死者说的很丑的方框就是这个！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Tooltip crosshairs=&#123; false &#125;/&gt;</span><br></pre></td></tr></table></figure><p>好的，把框去掉了！咦，我们不是说要修改它的颜色吗？好的，改一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Tooltip</span><br><span class="line">        crosshairs=&#123;&#123;</span><br><span class="line">            type: &quot;rect&quot; // 可选值：rect、x、y、cross，分别对应辅助狂、平行x轴辅助线、平行y轴辅助线，十字辅助线</span><br><span class="line">            style: &#123;</span><br><span class="line">                fill: &apos;red&apos;, // 辅助框颜色</span><br><span class="line">                shadowColor: &apos;red&apos;, // 辅助框周边阴影的颜色</span><br><span class="line">                shadowBlur: 1, // 辅助框周边阴影的透明度</span><br><span class="line">                opacity: 0 // 辅助框的透明度</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-5af64bd86b9114f7?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>note：假如开启的是辅助线，即type不是“rect”，那么上述的样式定义将不起作用。究其原因，看了此组件的源码之后才发现，描述辅助线样式的属性不是style对象，而是lineStyle对象，官方文档并未说明这一点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Tooltip</span><br><span class="line">        crosshairs=&#123;&#123;</span><br><span class="line">            type: &quot;y&quot;</span><br><span class="line">            lineStyle: &#123;</span><br><span class="line">                stroke: &apos;red&apos;, // 辅助线颜色</span><br><span class="line">                lineWidth: 4, // 辅助线宽度，单位为px</span><br><span class="line">                opacity: 1 // 辅助线透明度</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">    /&gt;</span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-339319265bdb1d38?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>看起来还是很容易就实现了死者的第一个遗愿，就这样怼死了视觉，是不是太残忍了点？事已至此，继续实现他的遗愿吧。</p><p>第二个遗愿是给tooltip换个样式。既然要修改tooltip的样式，就应该继续对Tooltip组件下手。通过阅读文档，发现其还有一个itemTpl的属性，也就是可以通过这个属性定义tooltip的模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">// 定义一个模板</span><br><span class="line">    // name-value是相关柱子的key-value值</span><br><span class="line">    const tooltipsDisplayTpl = `</span><br><span class="line">        &lt;p class=&quot;chart-tooptip&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;chart-tooptip-right&quot;&gt;&#123;name&#125;&lt;/span&gt;</span><br><span class="line">            &lt;span&gt;&#123;value&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">    `;</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">        // 重写tooltip元素的样式</span><br><span class="line">        // 因为视觉已死，样式是随便搞的，就弄点黑色背景当默哀一下吧</span><br><span class="line">        .g2-tooltip &#123;</span><br><span class="line">            background-color: rgba(44, 49, 68, 0.80) !important;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .chart-tooptip &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .chart-tooptip-right &#123;</span><br><span class="line">            margin-right: 12px;</span><br><span class="line">        &#125;</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line">    &lt;Tooltip</span><br><span class="line">        crosshairs=&#123; false &#125;</span><br><span class="line">        itemTpl=&#123; tooltipsDisplayTpl &#125;</span><br><span class="line">        showTitle=&#123; false &#125; // 去头（标题，即横轴对应的刻度），往往影响我颜值的不是我的身材，而是我的脸，所以不要脸了</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-d3445d09d0d4f9d5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>note：如果想自定义tooltip展示的内容，还需要设置Geom组件的tooltip属性，即将数据映射到Tooltip对象上；所以此属性值如果为false的话，就不会向Tooltip组件传递任何数据（此时Tooltip只会显示title）；还可设置为字符串，展示字符串对应的数据字段；But, it’s not the point，重点在于可自定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 定义数据返回的格式，name属性对应的是itemTpl里面的同名变量</span><br><span class="line">    const getTooltipData = (xAxis, yAxis) =&gt; &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            name: xAxis,</span><br><span class="line">            value: yAxis</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &lt;Geom</span><br><span class="line">        type=&quot;interval&quot;</span><br><span class="line">        position=&quot;xAxis*yAxis&quot;</span><br><span class="line">        tooltip=&#123;[&quot;xAxis*yAxis&quot;, getTooltipData]&#125;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-0dd8f81c11b9661a?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>第二个遗愿也实现了，愧疚感也多了一点！最主要是写代码的时候老是觉得后面有人站着盯着我看。</p><p>说不定实现所有遗愿就不会有这种感觉了呢，那就继续第三个遗愿吧：“改变鼠标hover柱子时候柱子的颜色”，翻遍了整个文档，发现没有关于hover的接口啊！看来视觉是要死不瞑目了，阿门。</p><p>就在我感觉到后背越发的凉飕飕的时候，我发现Geom组件有一个属性active</p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-028c6f5dac62214b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>文档就真的描述了那么两句话，也没例子。急病乱投医的我只能尝试一波，设置为true，得了，hover柱子的时候柱子颜色改变了！！！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Geom</span><br><span class="line">        type=&quot;interval&quot;</span><br><span class="line">        position=&quot;xAxis*yAxis&quot;</span><br><span class="line">        tooltip=&#123;[&quot;xAxis*yAxis&quot;, getTooltipData]&#125;</span><br><span class="line">        active=&#123; true &#125;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-a774bafa416a3232?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>那如果需要自定义鼠标hover柱子的样式呢？对照着Geom文档的select属性，又尝试了一遍</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;Geom</span><br><span class="line">        type=&quot;interval&quot;</span><br><span class="line">        position=&quot;xAxis*yAxis&quot;</span><br><span class="line">        tooltip=&#123;[&quot;xAxis*yAxis&quot;, getTooltipData]&#125;</span><br><span class="line">        style=&#123;&#123; cursor: &apos;pointer&apos; &#125;&#125; //  鼠标hover上去的时候，显示小手手，免费送的</span><br><span class="line">        active=&#123;[</span><br><span class="line">            true,</span><br><span class="line">            &#123;</span><br><span class="line">                style: &#123;</span><br><span class="line">                    fill: &apos;black&apos;,  // 柱子颜色，继续默哀</span><br><span class="line">                    shadowColor: &apos;red&apos;,  // 整体阴影颜色，包括边缘</span><br><span class="line">                    shadowBlur: 1,  // 阴影的透明度</span><br><span class="line">                    opacity: 0 // 柱子颜色透明度</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]&#125;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-1afd33ea4634fe1b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>（神气的）“狗子，别死了，老子搞定啦”</p><p>“靠，我都装死两天了，你敢不敢再慢一点”</p><p>“那官方文档就写了一行字：只可意会不可言传！我天分有限，意会了比较久”</p><p>“嘚瑟，看，又出bug了吧！你的表子一闪一闪的”</p><p>（掐着他脖子使劲晃）“那TM不是bug！！！”</p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-af7f2f907bde7e95?imageMogr2/auto-orient/strip" alt="数据可视化，BizCharts图表库入坑历程"></p><p>不过话说回来，当数据更新时，从旧数据切换到新数据，会很突兀，没有缓冲过程，看着特别不舒服。我寻思着，在数据更新的时候，加个动画呗！但是初始动画生效了，更新动画就不生效了（如看官们知道解决办法，请不吝赐教）。由于赶着下班，我决定使用DataSet：一个用于管理表格数据的神器，据说更新数据的时候，其会给我弄个动画（除此以外有方便地导入非 <a href="http://www.codercto.com/category/json.html" target="_blank" rel="noopener">json</a> 数据等等功能，下文有一些例子，具体细节我没有详细去研究，以后学习了再分享）。唔好理，总之好犀利！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 安装</span><br><span class="line">    // npm install @antv/data-set</span><br><span class="line"></span><br><span class="line">    // 引入</span><br><span class="line">    import DataSet from &apos;@antv/data-set&apos;;</span><br><span class="line"></span><br><span class="line">    // 生成一个View实例，作为类的属性，故不要在render方法里面生成这个实例</span><br><span class="line">    dv = new DataSet().createView();</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        this.dv.source(data);</span><br><span class="line"></span><br><span class="line">        &lt;Chart</span><br><span class="line">            height=&#123; 400 &#125;</span><br><span class="line">            data=&#123; this.dv &#125;</span><br><span class="line">            forceFit</span><br><span class="line">        &gt;&lt;/Chart&gt;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-4a4cae8695534afe?imageMogr2/auto-orient/strip" alt="数据可视化，BizCharts图表库入坑历程"></p><p>“猿子，6啊！吃宵夜吗？我的”</p><p>“虽然不怎么饿，但是你请就不一样了，go”</p><p>吃了一桶泡面后……</p><p>“猿子，你看，宵夜也吃了·······”</p><p>“你又想干嘛···············”</p><p>简直就是饱饭思淫欲啊！！！</p><p>”我只是觉得柱子的颜色可以渐变会显得我们公司的产品更屌一点“</p><p>”狗子，你扛揍不？“</p><p>（可怜兮兮）”揍完之后可以加个渐变吗……“</p><p>”……“</p><p>”我就知道你对我最好了，我给你捶背捏大腿吧~“</p><p>”滚一边去“</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Geom</span><br><span class="line">        type=&quot;interval&quot;</span><br><span class="line">        position=&quot;xAxis*yAxis&quot;</span><br><span class="line">        tooltip=&#123;[&quot;xAxis*yAxis&quot;, getTooltipData]&#125;</span><br><span class="line">        color=&#123;[&apos;xAxis&apos;, &apos;#3DA4FF-#FFFFFF&apos;]&#125;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-f433b41909ae67aa?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>（掐着我脖子使劲晃）”老子要的是从上往下渐变，不是从左往右渐变“</p><p>“别…..别…..掐…..我….改….改…..”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Geom</span><br><span class="line">        type=&quot;interval&quot;</span><br><span class="line">        position=&quot;xAxis*yAxis&quot;</span><br><span class="line">        tooltip=&#123;[&quot;xAxis*yAxis&quot;, getTooltipData]&#125;</span><br><span class="line">        color=&#123;[&apos;xAxis&apos;, &apos;l(90) 0:#3DA4FF 1:#FFFFFF&apos;]&#125;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-617e2a759c4b65d0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>note：l是指线性渐变，90是指旋转九十度（即从上到下渐变，看官们可以多试试几个姿势，啊呸，多试试几个角度）</p><p>0和1标定的色值标明初始色值和终止色值，注意一点，色值不可以使用颜色名字，如“red”、“blue”等</p><p>可添加多个渐变色值，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color=&quot;l(90) 0:#000000 0.5:#FFFFFF 1:#000000&quot;</span><br></pre></td></tr></table></figure><p>note：如果是area类型的Geom，那么第一种渐变方式是不起作用的，只能选用第二种</p><p>“狗子，我真要下班了”</p><p>“那个，你看都搞着渐变了，要不搞一波颜色分类”</p><p>”没得谈，goodbye！“</p><p>”宵夜我的“</p><p>”顶你个肺，又想用泡面忽悠我！！！“</p><p>”撸串，骗你我是狗“</p><p>”emmmmmm…..“</p><p>既然提到颜色分类，我们就接着提一下dv.transform 吧, dv.transform内置了一些基础的函数：filter，map，pick，rename，reverse …… 具体可自行查看文档</p><p>只需要添加 groupBy 字段，并且在传入的原始数据data中添加对应的字段classify即可轻松搞定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dv.transform(&#123;</span><br><span class="line">        groupBy: [&apos;classify&apos;],  // 以classify字段进行分组 </span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>”猿子，颜色还是要自定义的哦“</p><p>（白眼）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Geom</span><br><span class="line">        position=&#123;&apos;xAxis*yAxis&apos;&#125;</span><br><span class="line">        color=&#123;[&apos;classify&apos;, classify =&gt; &#123;</span><br><span class="line">            // 这里根据不同字段返回不同颜色</span><br><span class="line">            return classify === &apos;test&apos; ? &apos;red&apos; : &apos;yellow&apos;;</span><br><span class="line">        &#125;]&#125;</span><br><span class="line">        style=&#123;&#123; cursor: &apos;pointer&apos; &#125;&#125;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-bdfc4803cf241315?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>作为一个有责任的前端打字员，有一点即使设计不要求的，我还是需要说明的，横轴的刻度值是可以自定义的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Axis</span><br><span class="line">        name=&#123;xAxis&#125;</span><br><span class="line">        label=&#123;&#123;</span><br><span class="line">            textStyle: &#123;</span><br><span class="line">                fill: &apos;red&apos;,  // 颜色</span><br><span class="line">                textBaseline: &apos;top&apos;  // 对齐基线</span><br><span class="line">            &#125;,</span><br><span class="line">            formatter: (val) =&gt; &#123;</span><br><span class="line">                return `$&#123; val &#125;\n换行了`</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/4109786-1cbe7ec0710bd1f5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="数据可视化，BizCharts图表库入坑历程"></p><p>”狗子，撸串去！！！“</p><p>”要不还是吃个泡面？？？？“</p><p>狗子，卒！</p><hr><h1 id="以下内容来自自己的总结"><a href="#以下内容来自自己的总结" class="headerlink" title="以下内容来自自己的总结"></a>以下内容来自自己的总结</h1><hr><p>很显然，本人没有博主这枚猿有文化底蕴，辞藻上既不华丽丽，也没有故事性，纯属就是论事，记笔记的形式。</p><h4 id="1-柱状图-点图上显示文字及格式化内容"><a href="#1-柱状图-点图上显示文字及格式化内容" class="headerlink" title="1. 柱状图/点图上显示文字及格式化内容"></a>1. 柱状图/点图上显示文字及格式化内容</h4><p>该需求需要用到<code>Label</code>组件，她是Geon的子组件，上代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;Chart height=&#123;400&#125; data=&#123;dv&#125; forceFit&gt;</span><br><span class="line">    &lt;Axis name=&quot;月份&quot; /&gt;</span><br><span class="line">    &lt;Axis name=&quot;月均降雨量&quot; /&gt;</span><br><span class="line">    &lt;Legend /&gt;</span><br><span class="line">    &lt;Tooltip</span><br><span class="line">      crosshairs=&#123;&#123;</span><br><span class="line">        type: &quot;y&quot;</span><br><span class="line">      &#125;&#125;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;Geom</span><br><span class="line">      type=&quot;interval&quot;</span><br><span class="line">      position=&quot;月份*月均降雨量&quot;</span><br><span class="line">      color=&#123;&quot;name&quot;&#125;</span><br><span class="line">      adjust=&#123;[</span><br><span class="line">        &#123;</span><br><span class="line">          type: &quot;dodge&quot;,</span><br><span class="line">          marginRatio: 1 / 32</span><br><span class="line">        &#125;</span><br><span class="line">      ]&#125;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;Label</span><br><span class="line">          content=&#123;[&apos;月份*月均降雨量&apos;, (月份, 月均降雨量) =&gt; (`$&#123;月均降雨量&#125;`)]&#125;</span><br><span class="line">          textStyle=&#123;&#123;</span><br><span class="line">            textAlign: &apos;center&apos;, // 文本对齐方向，可取值为： start middle end</span><br><span class="line">            fill: &apos;#404040&apos;, // 文本的颜色</span><br><span class="line">            fontSize: &apos;14&apos;, // 文本大小</span><br><span class="line">            fontWeight: &apos;normal&apos;, // 文本粗细</span><br><span class="line">            rotate: 0, // 文字旋转</span><br><span class="line">            textBaseline: &apos;top&apos;, // 文本基准线，可取 top middle bottom，默认为middle</span><br><span class="line">          &#125;&#125;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/Geom&gt;</span><br><span class="line">  &lt;/Chart&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>效果：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-0e85d86d2f725d2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>原文地址：<br><a href="https://juejin.im/post/5c0f45edf265da61327f285c" target="_blank" rel="noopener">数据可视化，BizCharts图表库入坑历程</a></p>]]></content>
      
      
      <categories>
          
          <category> 后台管理系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antd Pro </tag>
            
            <tag> BizCharts </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ant Design Pro学习之使用upload组件并用form表单提交</title>
      <link href="/2019/03/14/Ant%20Design%20Pro%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BD%BF%E7%94%A8upload%E7%BB%84%E4%BB%B6%E5%B9%B6%E7%94%A8form%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4/"/>
      <url>/2019/03/14/Ant%20Design%20Pro%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%BD%BF%E7%94%A8upload%E7%BB%84%E4%BB%B6%E5%B9%B6%E7%94%A8form%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4/</url>
      
        <content type="html"><![CDATA[<p>阿里粑粑开源的管理框架<a href="https://pro.ant.design/index-cn" target="_blank" rel="noopener">Ant Design Pro</a>使用记录之表单提交。<br><a href="https://www.jianshu.com/p/6dddd745231b" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://upload-images.jianshu.io/upload_images/4109786-2de1763be8e2ada8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="upload view"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-2c26de282b260878.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="http network"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-61573772801123f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="api-debug"></p><h3 id="实现思路和代码"><a href="#实现思路和代码" class="headerlink" title="实现思路和代码"></a>实现思路和代码</h3><p>利用upload提供的<code>beforeUpload</code>属性，先将文件放到state里，随后和form表单一起提交。<br>先上干货，再解释一些走过的弯弯绕</p><blockquote><p>接口代码<br>接受实体类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import lombok.Data;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line">import javax.persistence.Transient;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author 红创-马海强</span><br><span class="line"> * @date 2019-02-20 14:06</span><br><span class="line"> * @description 战略报告</span><br><span class="line"> */</span><br><span class="line">@Data</span><br><span class="line">public class StrategyReportVo &#123;</span><br><span class="line"></span><br><span class="line">    private String id;</span><br><span class="line"></span><br><span class="line">    private String title;</span><br><span class="line">    private Date showTime;</span><br><span class="line">    private String periods;</span><br><span class="line">    private String fileUrl;</span><br><span class="line">    private int deleteFlag = 0;</span><br><span class="line">    private Date createTime;</span><br><span class="line">    @Transient</span><br><span class="line">    private int readCount;</span><br><span class="line">    private MultipartFile[] files;</span><br><span class="line">    private MultipartFile file;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><p>API接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@PostMapping(&quot;/reports&quot;)</span><br><span class="line">   public RtnResult update(StrategyReportVo vo) &#123;</span><br><span class="line">       StrategyReport report = new StrategyReport();</span><br><span class="line">       BeanUtils.copyProperties(vo, report);</span><br><span class="line">       return RtnResult.success(strategyReportAdminService.update(report));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><blockquote><p><strong>注意：接口使用form形式提交，因此在vo前面不能使用@RequestBody注解</strong></p></blockquote><p>前端为了方便先将fetch请求写在form页面里，规范的话应该写在model里。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123;PureComponent&#125; from &apos;react&apos;;</span><br><span class="line">import &#123;Modal, Form, Input, Spin, DatePicker, Button, Icon, Upload&#125; from &apos;antd&apos;;</span><br><span class="line">import _ from &apos;lodash&apos;;</span><br><span class="line">import FileUpload from &apos;../Common/FileUpload&apos;;</span><br><span class="line">import &#123;uploadUrl&#125; from &apos;../../services/api-base&apos;;</span><br><span class="line">import moment from &quot;moment&quot;;</span><br><span class="line">import &#123;prefix&#125; from &apos;../../services/api&apos;;</span><br><span class="line"></span><br><span class="line">const &#123;Item: FormItem&#125; = Form;</span><br><span class="line"></span><br><span class="line">@Form.create()</span><br><span class="line">export default class StrategyReportForm extends PureComponent &#123;</span><br><span class="line"></span><br><span class="line">    state = &#123;</span><br><span class="line">        fileData: [],</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /** 文件上传属性 **/</span><br><span class="line">    uploadProps = &#123;</span><br><span class="line">        accept: &apos;.pdf&apos;,</span><br><span class="line">        action: uploadUrl,</span><br><span class="line">        name: &apos;files&apos;,</span><br><span class="line">        onUpload: (fileList) =&gt; &#123;</span><br><span class="line">            this.props.onChangeFile(fileList);</span><br><span class="line">        &#125;,</span><br><span class="line">        onSuccess: (response) =&gt; &#123;</span><br><span class="line">            const &#123;name, url&#125; = response[0];</span><br><span class="line">            const file = &#123;</span><br><span class="line">                uid: -1,</span><br><span class="line">                name: name,</span><br><span class="line">                status: &apos;done&apos;,</span><br><span class="line">                url: url</span><br><span class="line">            &#125;;</span><br><span class="line">            this.props.form.setFieldsValue(&#123;fileUrl: url&#125;);</span><br><span class="line">            this.props.onChangeFile([file]);</span><br><span class="line">        &#125;,</span><br><span class="line">        onRemove: () =&gt; &#123;</span><br><span class="line">            this.props.onChangeFile([]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//这个是监听文件变化的</span><br><span class="line">fileChange=(params)=&gt;&#123;</span><br><span class="line">    const &#123;file,fileList&#125;=params;</span><br><span class="line">    if(file.status===&apos;uploading&apos;)&#123;</span><br><span class="line">        setTimeout(()=&gt;&#123;</span><br><span class="line">            this.setState(&#123;</span><br><span class="line">                percent:fileList.percent    </span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,1000)       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 拦截文件上传</span><br><span class="line">beforeUploadHandle=(file)=&gt;&#123;</span><br><span class="line">    this.setState((&#123;fileData&#125;)=&gt;(&#123;</span><br><span class="line">        fileData:[...fileData,file],</span><br><span class="line">    &#125;))</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line">// 文件列表的删除</span><br><span class="line">fileRemove=(file)=&gt;&#123;</span><br><span class="line">    this.setState((&#123;fileData&#125;)=&gt;&#123;</span><br><span class="line">        const index = fileData.indexOf(file);</span><br><span class="line">        return &#123;</span><br><span class="line">            fileData: fileData.filter((_, i) =&gt; i !== index)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        const &#123;modalVisible, formLoading, confirmLoading, data, onSave, onCancel, form, fileList&#125; = this.props;</span><br><span class="line">        const &#123;getFieldDecorator&#125; = this.props.form;</span><br><span class="line">        const title = data.id ? &apos;编辑报告&apos; : &apos;添加报告&apos;;</span><br><span class="line">        const formItemLayout = &#123;</span><br><span class="line">            labelCol: &#123;span: 5&#125;,</span><br><span class="line">            wrapperCol: &#123;span: 15&#125;,</span><br><span class="line">        &#125;;</span><br><span class="line">        const files = this.state.fileData;</span><br><span class="line">        return (</span><br><span class="line">            &lt;Modal</span><br><span class="line">                title=&#123;title&#125;</span><br><span class="line">                visible=&#123;modalVisible&#125;</span><br><span class="line">                confirmLoading=&#123;confirmLoading&#125;</span><br><span class="line">                onOk=&#123;() =&gt; &#123;</span><br><span class="line">                    form.validateFields((err, values) =&gt; &#123;</span><br><span class="line">                        if (!err) &#123;</span><br><span class="line">                          let formData = new FormData();</span><br><span class="line">                          formData.append(&quot;file&quot;, files[0]);</span><br><span class="line">                          for(let i = 0 ;i&lt;files.length;i++)&#123;</span><br><span class="line">                            //dataParament.files.fileList[i].originFileObj 这个对象是我观察 antd的Upload组件发现的里面的originFileObj 对象就是file对象</span><br><span class="line">                            formData.append(&apos;files&apos;,files[i])</span><br><span class="line">                           &#125;</span><br><span class="line">                           //file以外的对象拼接</span><br><span class="line">                           for(let item in values.length) &#123;</span><br><span class="line">                             if(item !== &apos;files&apos; &amp;&amp; values[item]) &#123;</span><br><span class="line">                                formData.append(item, values[item]);</span><br><span class="line">                             &#125;</span><br><span class="line">                           &#125;</span><br><span class="line">                          fetch(`$&#123;prefix&#125;/questionnaire/admin/strategy/reports`, &#123;</span><br><span class="line">                            method: &apos;POST&apos;,</span><br><span class="line">                            body: formData,</span><br><span class="line">                            headers: &#123;</span><br><span class="line">                                &apos;Authorization&apos;: `Bearer $&#123;sessionStorage.accessToken&#125;`,</span><br><span class="line">                            &#125;,</span><br><span class="line">                          &#125;).then((response =&gt; &#123;</span><br><span class="line">                              if (response.code === 0) &#123;</span><br><span class="line">                                  console.log(&quot;=====================&quot;, &apos;OK&apos;);</span><br><span class="line">                              &#125; else &#123;</span><br><span class="line">                                  console.log(&quot;=====================&quot;, &apos;error&apos;);</span><br><span class="line">                              &#125;</span><br><span class="line">                          &#125;));</span><br><span class="line">                          onSave(data);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;&#125;</span><br><span class="line">                onCancel=&#123;onCancel&#125;&gt;</span><br><span class="line">                &lt;Form id=&quot;postForm&quot;&gt;</span><br><span class="line">                    &lt;Spin spinning=&#123;formLoading&#125; tip=&quot;加载中...&quot;&gt;</span><br><span class="line">                        &#123;</span><br><span class="line">                            getFieldDecorator(&apos;id&apos;, &#123;initialValue: _.defaultTo(data.id, null)&#125;)</span><br><span class="line">                        &#125;</span><br><span class="line">                        &lt;FormItem label=&quot;报告标题&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                            &#123;</span><br><span class="line">                                getFieldDecorator(&apos;title&apos;, &#123;</span><br><span class="line">                                    rules: [</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            type: &apos;string&apos;,</span><br><span class="line">                                            required: true,</span><br><span class="line">                                            message: &apos;标题不能为空！&apos;,</span><br><span class="line">                                        &#125;,</span><br><span class="line">                                    ],</span><br><span class="line">                                    initialValue: _.defaultTo(data.title, &apos;&apos;),</span><br><span class="line">                                &#125;)(&lt;Input/&gt;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &lt;/FormItem&gt;</span><br><span class="line">                        &lt;FormItem label=&quot;显示时间&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                            &#123;</span><br><span class="line">                                getFieldDecorator(&apos;showTime&apos;, &#123;</span><br><span class="line">                                    rules: [</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            required: true,</span><br><span class="line">                                            message: &apos;显示时间不能为空&apos;,</span><br><span class="line">                                        &#125;,</span><br><span class="line">                                    ],</span><br><span class="line">                                    initialValue: data.showTime ? moment(moment(data.showTime).format(&apos;YYYY-MM-DD HH:mm&apos;)) : moment(),</span><br><span class="line">                                &#125;)( &lt;DatePicker showTime style=&#123;&#123;width: 280&#125;&#125; format=&quot;YYYY-MM-DD HH:mm&quot;/&gt;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &lt;/FormItem&gt;</span><br><span class="line">                        &lt;FormItem label=&quot;指定期数&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                            &#123;</span><br><span class="line">                                getFieldDecorator(&apos;periods&apos;, &#123;</span><br><span class="line">                                    rules: [</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            type: &apos;string&apos;,</span><br><span class="line">                                            required: false,</span><br><span class="line">                                            message: &apos;期数&apos;,</span><br><span class="line">                                        &#125;,</span><br><span class="line">                                    ],</span><br><span class="line">                                    initialValue: _.defaultTo(data.periods, &apos;&apos;),</span><br><span class="line">                                &#125;)(&lt;Input/&gt;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &lt;/FormItem&gt;</span><br><span class="line">                        &#123;/* &lt;FormItem label=&quot;上传附件&quot; &#123;...formItemLayout&#125;&gt;</span><br><span class="line">                            &#123;</span><br><span class="line">                                getFieldDecorator(&apos;fileUrl&apos;, &#123;</span><br><span class="line">                                    rules: [</span><br><span class="line">                                        &#123;</span><br><span class="line">                                            type: &apos;string&apos;,</span><br><span class="line">                                            required: true,</span><br><span class="line">                                            message: &apos;请上传PDF文档&apos;,</span><br><span class="line">                                        &#125;,</span><br><span class="line">                                    ],</span><br><span class="line">                                    initialValue: _.defaultTo(data.fileUrl, &apos;&apos;)</span><br><span class="line">                                &#125;)(&lt;FileUpload</span><br><span class="line">                                    uploadProps=&#123;this.uploadProps&#125;</span><br><span class="line">                                    fileList=&#123;fileList&#125;</span><br><span class="line">                                    data=&#123;&#123;&apos;objectKey&apos;: &apos;strategy/report&apos;&#125;&#125;/&gt;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &lt;/FormItem&gt; */&#125;</span><br><span class="line">                        &lt;FormItem labelCol=&#123;&#123;span:5&#125;&#125; wrapperCol=&#123;&#123;span:15&#125;&#125; label=&apos;文件上传&apos;&gt;</span><br><span class="line">                            &#123;getFieldDecorator(&apos;files&apos;)(</span><br><span class="line">                                &lt;Upload action=&apos;路径&apos; </span><br><span class="line">                                    multiple uploadList </span><br><span class="line">                                    beforeUpload=&#123;this.beforeUploadHandle&#125; </span><br><span class="line">                                    onChange=&#123;this.fileChange&#125; </span><br><span class="line">                                    onRemove=&#123;this.fileRemove&#125; </span><br><span class="line">                                    fileList=&#123;this.state.fileData&#125;&gt;</span><br><span class="line">                                    &lt;Button&gt;&lt;Icon type=&apos;upload&apos; /&gt;上传文件&lt;/Button&gt;</span><br><span class="line">                                &lt;/Upload&gt;</span><br><span class="line">                            )&#125;</span><br><span class="line">                        &lt;/FormItem&gt;</span><br><span class="line">                    &lt;/Spin&gt;</span><br><span class="line">                &lt;/Form&gt;</span><br><span class="line">            &lt;/Modal&gt;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentWillReceiveProps(nextProps) &#123;</span><br><span class="line">        if (!this.props.modalVisible &amp;&amp; nextProps.modalVisible) &#123;</span><br><span class="line">            this.props.form.resetFields();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><ul><li>1、Upload组件默认是选择文件后直接调用action上传文件，返回url。通常文件都会在form表单里跟别的参数一起，这时候form里其实没有文件，而是文件的url地址。<br>就像下面这样。<br><code>StrategyReportForm</code>是这个弹出层，而它的上层页面是<code>StrategyReportList</code>，在list中的form是这样的<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;StrategyReportForm</span><br><span class="line">        modalVisible=&#123;strategyReportForm.modalVisible&#125;</span><br><span class="line">        confirmLoading=&#123;strategyReportForm.confirmLoading&#125;</span><br><span class="line">        options=&#123;strategyReportForm.options&#125;</span><br><span class="line">        data=&#123;strategyReportForm.data&#125;</span><br><span class="line">        fileList=&#123;strategyReportForm.fileList&#125;</span><br><span class="line">        formLoading=&#123;strategyReportForm.formLoading&#125;</span><br><span class="line">        onChangeFile=&#123;(fileList)=&gt;&#123;</span><br><span class="line">          dispatch(&#123;type: &apos;strategyReportForm/fileList&apos;, payload: fileList&#125;);</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        onSave=&#123;(data)=&gt;&#123;</span><br><span class="line">          dispatch(&#123;type: &apos;strategyReportForm/update&apos;, payload: &#123;data, callback:(result)=&gt;&#123;</span><br><span class="line">              dispatch(&#123;type: &apos;strategyReportList/list&apos;, payload:&#123;&#125;&#125;);</span><br><span class="line">          &#125;&#125;&#125;);</span><br><span class="line">      &#125;&#125;</span><br><span class="line">      onCancel=&#123;()=&gt;&#123;</span><br><span class="line">          dispatch(&#123;type: &apos;strategyReportForm/close&apos;&#125;);</span><br><span class="line"> &#125;&#125;/&gt;</span><br></pre></td></tr></table></figure></li></ul><p>这段代码里的onSave回调方法的意思就是上传文件，关闭弹框，刷新列表。<br>modle里的update方法与其他的没有两样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">effects: &#123;</span><br><span class="line">    * update(&#123;payload:&#123;data, callback&#125;&#125;, &#123;call, put, select&#125;)&#123;</span><br><span class="line">        yield put(&#123;type: &apos;confirmLoading&apos;, payload: true&#125;);</span><br><span class="line">        const response = yield call(api.update, data);</span><br><span class="line">        if (response.code === 0) &#123;</span><br><span class="line">            message.success(&quot;操作成功&quot;);</span><br><span class="line">            yield put(&#123;type: &apos;close&apos;&#125;);</span><br><span class="line">            if(callback) callback(response.data)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            message.error(response.message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>api.upload这个方法在antd pro里是隔离定义再service目录下的，内容很简单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">export async function update(params) &#123;</span><br><span class="line">  fetch(`$&#123;prefix&#125;/questionnaire/admin/strategy/reports`, &#123;</span><br><span class="line">    method: &apos;POST&apos;,</span><br><span class="line">    body: params,</span><br><span class="line">    headers: &#123;</span><br><span class="line">        &apos;Authorization&apos;: `Bearer $&#123;sessionStorage.accessToken&#125;`,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>需要注意的是这里得直接使用fetch方法，不能使用框架封装的request发起请求，因为request里封装的content-type类型是application/json</strong></p><p>在and design pro2.x的版本里，request方法已经兼容了这个处理<br><img src="https://upload-images.jianshu.io/upload_images/4109786-b5ad8e0ecda860c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.x request"></p><p>在antd1.x的版本里，也可以使用reqeust里封装好的<code>postFormWithProgress</code>方法。比如这个用法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;FormItem label=&quot;安装包地址&quot; labelCol=&#123;&#123; span: 3 &#125;&#125; wrapperCol=&#123;&#123; span: 9 &#125;&#125;&gt;</span><br><span class="line">          &#123;</span><br><span class="line">            getFieldDecorator(&apos;downloadAddr&apos;, &#123;</span><br><span class="line">              rules: [</span><br><span class="line">                &#123;</span><br><span class="line">                  required: true,</span><br><span class="line">                  message: &apos;安装包地址不能为空&apos;,</span><br><span class="line">                &#125;,</span><br><span class="line">              ],</span><br><span class="line">            &#125;)(</span><br><span class="line">              &lt;Input disabled /&gt;</span><br><span class="line">            )</span><br><span class="line">          &#125;</span><br><span class="line">        &lt;/FormItem&gt;</span><br><span class="line">        &lt;FormItem wrapperCol=&#123;&#123; offset:3, span: 9 &#125;&#125;&gt;</span><br><span class="line">          &lt;Upload beforeUpload=&#123;this.uploadFile&#125;&gt;</span><br><span class="line">            &lt;Button&gt;</span><br><span class="line">              &lt;Icon type=&quot;upload&quot; /&gt;上传文件</span><br><span class="line">            &lt;/Button&gt;</span><br><span class="line">          &lt;/Upload&gt;</span><br><span class="line">          &lt;Progress size=&quot;small&quot; style=&#123;&#123; display: &apos;inline&apos; &#125;&#125; percent=&#123;~~(this.state.uploadPercent*100)&#125; /&gt;</span><br><span class="line">        &lt;/FormItem&gt;</span><br></pre></td></tr></table></figure></p><p>js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">uploadFile = (file) =&gt; &#123;</span><br><span class="line">  this.setState(&#123; uploadPercent: 0 &#125;);</span><br><span class="line">  uploadAppBinary(file, percent =&gt; this.setState(&#123; uploadPercent: percent &#125;)).then(</span><br><span class="line">    (resp) =&gt; &#123;</span><br><span class="line">      const &#123;</span><br><span class="line">        code,</span><br><span class="line">        message: msg,</span><br><span class="line">        data,</span><br><span class="line">      &#125; = resp;</span><br><span class="line">      if (code === 0) &#123;</span><br><span class="line">        const &#123; downloadAddr &#125; = data;</span><br><span class="line">        this.props.form.setFieldsValue(&#123;</span><br><span class="line">          downloadAddr,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        message.error(`上传文件失败！--$&#123;msg&#125;`);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  ).catch(e =&gt; message.error(e.message));</span><br><span class="line">  return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>service<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export async function uploadAppBinary(file, callback) &#123;</span><br><span class="line">  return postFormWithProgress(`$&#123;prefix&#125;/questionnaire/admin/app/release/uploadPackage`, &#123;</span><br><span class="line">    file,</span><br><span class="line">  &#125;, callback);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>2、但是这次不一样，我们文件先不上传，而是与form表单的其他内容一起提交到API里。解决问题是学到的东西不少，简单记录下。<blockquote><p>2.1、form里应不应该设置Content-Type属性，应该设置成什么？request里会有哪些不一样？<br>直接参考<a href="https://blog.csdn.net/u013827143/article/details/86222486" target="_blank" rel="noopener">post使用form-data和x-www-form-urlencoded的本质区别</a>即可，但是结论是不需要自己设定，程序会自己根据类型设定。</p></blockquote></li></ul><blockquote><p>2.2、调用接口时只要没有文件就没问题，但是有文件了就会400。<br>原因：多个文件的append不能直接把数组append进去，比如上面如果不用循环获取fileData里的数据，而是直接formData.append(this.state.fileData);这样的数据发送的接口，就会400，原因就是类型不对。<br>如果是单个文件，可以直接使用formData.append(files[0]);这样实现。</p></blockquote><blockquote><p>2.3、多个文件和单个文件的处理。<br>不论是单个文件或是多个文件，都可以使用循环的形式将文件append到formdata中。</p><ul><li>3、其他实现方式<br>基于2.x以后的版本实现更简单一些。<br>把json传到service的api以后，new出formData，append上参数即可。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">export async function batchImport(params)&#123;</span><br><span class="line">    const formData = new FormData();</span><br><span class="line">    for (const key in params) &#123;</span><br><span class="line">        formData.append(key, params[key]);</span><br><span class="line">    &#125;</span><br><span class="line">    return request(&apos;/customer/batchImport&apos;, &#123; </span><br><span class="line">        method: &apos;POST&apos;,</span><br><span class="line">        body: formData </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><p>不过就是在form里要利用<code>valuePropName</code>和<code>getValueFromEvent</code>属性把属性值以json的结构传递到modles里。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;Modal</span><br><span class="line">            destroyOnClose</span><br><span class="line">            title=&quot;导入量体人&quot;</span><br><span class="line">            visible=&#123;batchImportShow&#125;</span><br><span class="line">            onOk=&#123;this.handleOk&#125;</span><br><span class="line">            onCancel=&#123;() =&gt; handleImportVisible(false)&#125;&gt;</span><br><span class="line">            &lt;FormItem labelCol=&#123;&#123; span: 5 &#125;&#125; wrapperCol=&#123;&#123; span: 15 &#125;&#125; label=&quot;测量计划&quot;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;planId&apos;,&#123;</span><br><span class="line">                    rules: [&#123; required: true, message: &apos;请选择测量计划&apos;, &#125;],</span><br><span class="line">                &#125;)(&lt;Select style=&#123; &#123; width: 200 &#125;&#125; id=&apos;planSelect&apos;&gt;</span><br><span class="line">                    &lt;Select.Option key=&#123;-99&#125; value=&apos;&apos;&gt;全部&lt;/Select.Option&gt;</span><br><span class="line">                &#123; planList.map((item) =&gt; &lt;Select.Option key=&#123;item.planId&#125; value=&#123;item.planId&#125;&gt;&#123;item.planName&#125;&lt;/Select.Option&gt;) &#125;</span><br><span class="line">                &lt;/Select&gt;)&#125;</span><br><span class="line">            &lt;/FormItem&gt;</span><br><span class="line">            &lt;FormItem labelCol=&#123;&#123; span: 5 &#125;&#125; wrapperCol=&#123;&#123; span: 15 &#125;&#125; label=&quot;数据文件&quot;&gt;</span><br><span class="line">                &#123;form.getFieldDecorator(&apos;customerFile&apos;, &#123;</span><br><span class="line">                    rules: [&#123; required: true, message: &apos;请上传数据文件&apos;, &#125;],</span><br><span class="line">                    valuePropName: &apos;files&apos;,</span><br><span class="line">                    getValueFromEvent: e =&gt; e.target.files,</span><br><span class="line">                &#125;)(&lt;Input type=&apos;file&apos; name=&apos;customerFile&apos; style=&#123;&#123;height:35&#125;&#125;/&gt;)&#125;</span><br><span class="line">            &lt;/FormItem&gt;</span><br><span class="line">          &lt;/Modal&gt;</span><br></pre></td></tr></table></figure></p><h3 id="友情参考"><a href="#友情参考" class="headerlink" title="友情参考"></a>友情参考</h3><p><a href="https://blog.csdn.net/qq8241994/article/details/82857730" target="_blank" rel="noopener">将选中文件保存到页面的state中</a><br><a href="https://blog.csdn.net/a2469025185/article/details/82770762" target="_blank" rel="noopener">将文件append到新的formdata中使用post方式提交</a></p>]]></content>
      
      
      <categories>
          
          <category> 后台管理系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antd Pro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ant Design Pro 学习之跳页传参</title>
      <link href="/2019/02/06/Ant%20Design%20Pro%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%B3%E9%A1%B5%E4%BC%A0%E5%8F%82/"/>
      <url>/2019/02/06/Ant%20Design%20Pro%20%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%B3%E9%A1%B5%E4%BC%A0%E5%8F%82/</url>
      
        <content type="html"><![CDATA[<p>阿里粑粑开源的管理框架<a href="https://pro.ant.design/index-cn" target="_blank" rel="noopener">Ant Design Pro</a>使用记录之跳页传参。</p><p><a href="https://www.jianshu.com/p/71cb72f8dcfb" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>偷盗别人老动成果，要侵权了。<br>这是同事总结的跳页场景传参的形式。</p><h2 id="umi-router-link-用法"><a href="#umi-router-link-用法" class="headerlink" title="umi - router / link 用法"></a>umi - router / link 用法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import Link from &apos;umi/link&apos;;</span><br><span class="line"></span><br><span class="line">/* 普通使用 */</span><br><span class="line"></span><br><span class="line">&lt;Link to=&quot;/list&quot;&gt;Go to list page&lt;/Link&gt;</span><br><span class="line"></span><br><span class="line">/* 带参数 */</span><br><span class="line"></span><br><span class="line">&lt;Link to=&quot;/list?a=b&quot;&gt;Go to list page&lt;/Link&gt;</span><br><span class="line"></span><br><span class="line">/* 包含子组件 */</span><br><span class="line"></span><br><span class="line">&lt;Link to=&quot;/list?a=b&quot;&gt;&lt;button&gt;Go to list page&lt;/button&gt;&lt;/Link&gt;</span><br></pre></td></tr></table></figure><h3 id="umi-router"><a href="#umi-router" class="headerlink" title="umi/router"></a>umi/router</h3><h4 id="router-push-path"><a href="#router-push-path" class="headerlink" title="router.push(path)"></a>router.push(path)</h4><p>推一个新的页面到 history 里。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import router from &apos;umi/router&apos;;</span><br><span class="line"></span><br><span class="line">// 普通跳转，不带参数</span><br><span class="line"></span><br><span class="line">router.push(&apos;/list&apos;);</span><br><span class="line"></span><br><span class="line">// 带参数</span><br><span class="line"></span><br><span class="line">router.push(&apos;/list?a=b&apos;);</span><br><span class="line"></span><br><span class="line">// 带参数，并且参数会显示在url中</span><br><span class="line"></span><br><span class="line">router.push(&#123;</span><br><span class="line"></span><br><span class="line">  pathname: &apos;/list&apos;,</span><br><span class="line"></span><br><span class="line">  query: &#123;</span><br><span class="line"></span><br><span class="line">    a: &apos;b&apos;,</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 带参数，但是参数不会显示在url中</span><br><span class="line"></span><br><span class="line">router.push(&#123;</span><br><span class="line"></span><br><span class="line">  pathname: &apos;/list&apos;,</span><br><span class="line"></span><br><span class="line">  state: &#123; // state字段可以自定义，如用params等也可以</span><br><span class="line"></span><br><span class="line">    a: &apos;b&apos;,</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>list页面对参数的接收取值：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const &#123; location: &#123; query, state &#125; &#125; = this.props;**</span><br><span class="line"></span><br><span class="line">console.log(query.a, state.a);**</span><br></pre></td></tr></table></figure><h4 id="router-replace-path"><a href="#router-replace-path" class="headerlink" title="router.replace(path)"></a>router.replace(path)</h4><p>替换当前页面，参数和 <a href="https://umijs.org/zh/api/#router.push(path" target="_blank" rel="noopener">router.push()</a>) 相同。</p><h4 id="router-go-n"><a href="#router-go-n" class="headerlink" title="router.go(n)"></a>router.go(n)</h4><p>往前或往后跳指定页数。</p><h4 id="router-goBack"><a href="#router-goBack" class="headerlink" title="router.goBack()"></a>router.goBack()</h4><p>后退一页。</p>]]></content>
      
      
      <categories>
          
          <category> 后台管理系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antd Pro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>“SpringBoot2.0不容错过的新特性 WebFlux响应式编程”学习笔记(一)</title>
      <link href="/2019/01/12/springboot2.0-webflux-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
      <url>/2019/01/12/springboot2.0-webflux-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<p>WebFlux响应式编程好记性不如烂笔头<br><a href="https://www.jianshu.com/p/2a484e7bbce3" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="第五节-webflux服务端开发讲解"><a href="#第五节-webflux服务端开发讲解" class="headerlink" title="第五节  webflux服务端开发讲解"></a>第五节  webflux服务端开发讲解</h2><ul><li>5.1 异步servlet<br>1、为什么要使用 异步servlet？<br>回答：同步servlet一直占用服务器tomcat的线程数，是tomcat无暇接受更多的请求。因此有必要使用异步servlet。<br>2、同步servlet阻塞了什么？<br>也就是说同步servlet其实是阻塞了tomcat的servlet线程。<br>3、异步servlet是怎么工作的？<br>先看一个同步servlet的例子:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Servlet implementation class SyncServlet</span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/SyncServlet&quot;)</span><br><span class="line">public class SyncServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#HttpServlet()</span><br><span class="line"> */</span><br><span class="line">public SyncServlet() &#123;</span><br><span class="line">super();</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse</span><br><span class="line"> *      response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request,</span><br><span class="line">HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">long t1 = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">// 执行业务代码</span><br><span class="line">doSomeThing(request, response);</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;sync use:&quot; + (System.currentTimeMillis() - t1));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void doSomeThing(HttpServletRequest request,</span><br><span class="line">HttpServletResponse response) throws IOException &#123;</span><br><span class="line"></span><br><span class="line">// 模拟耗时操作</span><br><span class="line">try &#123;</span><br><span class="line">TimeUnit.SECONDS.sleep(5);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">response.getWriter().append(&quot;done&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse</span><br><span class="line"> *      response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request,</span><br><span class="line">HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>再模拟一个异步servlet的例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.concurrent.CompletableFuture;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">import javax.servlet.AsyncContext;</span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.ServletRequest;</span><br><span class="line">import javax.servlet.ServletResponse;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Servlet implementation class AsyncServlet</span><br><span class="line"> */</span><br><span class="line">@WebServlet(asyncSupported = true, urlPatterns = &#123; &quot;/AsyncServlet&quot; &#125;)</span><br><span class="line">public class AsyncServlet extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#HttpServlet()</span><br><span class="line"> */</span><br><span class="line">public AsyncServlet() &#123;</span><br><span class="line">super();</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse</span><br><span class="line"> *      response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request,</span><br><span class="line">HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">long t1 = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">// 开启异步</span><br><span class="line">AsyncContext asyncContext = request.startAsync();</span><br><span class="line"></span><br><span class="line">// 执行业务代码</span><br><span class="line">CompletableFuture.runAsync(() -&gt; doSomeThing(asyncContext,</span><br><span class="line">asyncContext.getRequest(), asyncContext.getResponse()));</span><br><span class="line"></span><br><span class="line">System.out.println(&quot;async use:&quot; + (System.currentTimeMillis() - t1));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void doSomeThing(AsyncContext asyncContext,</span><br><span class="line">ServletRequest servletRequest, ServletResponse servletResponse) &#123;</span><br><span class="line"></span><br><span class="line">// 模拟耗时操作</span><br><span class="line">try &#123;</span><br><span class="line">TimeUnit.SECONDS.sleep(5);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">try &#123;</span><br><span class="line">servletResponse.getWriter().append(&quot;done&quot;);</span><br><span class="line">&#125; catch (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 业务代码处理完毕, 通知结束</span><br><span class="line">asyncContext.complete();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse</span><br><span class="line"> *      response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request,</span><br><span class="line">HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>前后两次在浏览器上访问<a href="http://localhost:8080/SyncServlet和http://localhost:8080/AsyncServlet，在前台看都是大约5s返回。" target="_blank" rel="noopener">http://localhost:8080/SyncServlet和http://localhost:8080/AsyncServlet，在前台看都是大约5s返回。</a><br>但是查看服务端控制台：</p><blockquote><p>sync use:5002<br>async use:16</p></blockquote><p>可以看到，同步是5s，异步的是16ms返回了，这样tomcat就又有时间处理别的业务了，也就是提高了服务器的并发。</p><ul><li><p>5.2 Mono和Flux返回流接口<br>reactor = java8的流 + java9的响应式流</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">import org.reactivestreams.Subscriber;</span><br><span class="line">import org.reactivestreams.Subscription;</span><br><span class="line"></span><br><span class="line">import reactor.core.publisher.Flux;</span><br><span class="line"></span><br><span class="line">public class ReactorDemo &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// reactor = jdk8 stream + jdk9 reactive stream</span><br><span class="line">// Mono 0-1个元素</span><br><span class="line">// Flux 0-N个元素</span><br><span class="line">String[] strs = &#123; &quot;1&quot;, &quot;2&quot;, &quot;3&quot; &#125;;</span><br><span class="line"></span><br><span class="line">// 2. 定义订阅者</span><br><span class="line">Subscriber&lt;Integer&gt; subscriber = new Subscriber&lt;Integer&gt;() &#123;</span><br><span class="line"></span><br><span class="line">private Subscription subscription;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void onSubscribe(Subscription subscription) &#123;</span><br><span class="line">// 保存订阅关系, 需要用它来给发布者响应</span><br><span class="line">this.subscription = subscription;</span><br><span class="line"></span><br><span class="line">// 请求一个数据</span><br><span class="line">this.subscription.request(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void onNext(Integer item) &#123;</span><br><span class="line">// 接受到一个数据, 处理</span><br><span class="line">System.out.println(&quot;接受到数据: &quot; + item);</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">TimeUnit.SECONDS.sleep(3);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 处理完调用request再请求一个数据</span><br><span class="line">this.subscription.request(1);</span><br><span class="line"></span><br><span class="line">// 或者 已经达到了目标, 调用cancel告诉发布者不再接受数据了</span><br><span class="line">// this.subscription.cancel();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void onError(Throwable throwable) &#123;</span><br><span class="line">// 出现了异常(例如处理数据的时候产生了异常)</span><br><span class="line">throwable.printStackTrace();</span><br><span class="line"></span><br><span class="line">// 我们可以告诉发布者, 后面不接受数据了</span><br><span class="line">this.subscription.cancel();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void onComplete() &#123;</span><br><span class="line">// 全部数据处理完了(发布者关闭了)</span><br><span class="line">System.out.println(&quot;处理完了!&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// 这里就是jdk8的stream</span><br><span class="line">Flux.fromArray(strs).map(s -&gt; Integer.parseInt(s))</span><br><span class="line">// 最终操作</span><br><span class="line">// 这里就是jdk9的reactive stream</span><br><span class="line">.subscribe(subscriber);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>5.2  完整的fluxweb<br>步骤：<br>1、添加依赖<br>在<a href="https://start.spring.io/上选择Reactive" target="_blank" rel="noopener">https://start.spring.io/上选择Reactive</a> MongoDB这个dependencies，按下【Genarate Project】按钮，下载demo.zip,查看mongodb的依赖，加入到pom文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-mongodb-reactive&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- lombok --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line"> &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line"> &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line"> &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></li></ul><p>2、启动类application上添加mongodb支持注解<code>@EnableReactiveMongoRepositories</code><br>3、定义对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@Document(collection = &quot;user&quot;)</span><br><span class="line">@Data</span><br><span class="line">public class User &#123;</span><br><span class="line">    @Id</span><br><span class="line">    private String id;</span><br><span class="line">    private String name;</span><br><span class="line">    private int age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4、定义仓库repository<br>创建UserRepository接口，继承<code>ReactiveMongoRepository</code>，并使用<code>@Repository</code>注解。<br>5、定义controller<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/user&quot;)</span><br><span class="line">public class UserController &#123;</span><br><span class="line"></span><br><span class="line">    private final UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    //官方推荐使用构造函数的方式注入依赖的bean</span><br><span class="line">    public UserController(UserRepository userRepository) &#123;</span><br><span class="line">        this.userRepository = userRepository;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/&quot;)</span><br><span class="line">    public Flux&lt;User&gt; findAll() &#123;</span><br><span class="line">        return userRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(value = &quot;/stream/all&quot;, produces = MediaType.TEXT_EVENT_STREAM_VALUE)</span><br><span class="line">    public Flux&lt;User&gt; findAllByStream() &#123;</span><br><span class="line">        return userRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>6、本地安装配置mongodb<br>先<a href="https://www.mongodb.com/download-center#enterprise" target="_blank" rel="noopener">下载</a>mongodb，安装配置，根据平台自行查询，我的windows平台，参考的<a href="https://www.cnblogs.com/weschen/p/8213746.html" target="_blank" rel="noopener">https://www.cnblogs.com/weschen/p/8213746.html</a></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f984ac856546d930.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择custom修改安装位置"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f024c2720a7e7be6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选择数据库和log位置"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-c87c9001a06477e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="next"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f3dba18c0d0d6dec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="next"></p><p>执行<code>mongod --dbpath D:\MongoDB\data\db --logpath=D:\MongoDB\log\mongodb.log --logappend</code>启动mongodb<br><img src="https://upload-images.jianshu.io/upload_images/4109786-fada44b9b12421d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="启动mongodb"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-821aa889fc283570.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="命令行链接"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-1b7dc632ce4dd25a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测试启动"></p><p>7、mongodb数据库配置mongodb，在application.properties里添加如下配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.data.mongodb.uri=mongodb://localhost:27017/webflux</span><br></pre></td></tr></table></figure></p><p>8、启动项目并用客户端访问验证<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5d7ea8a8a0bec5f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="http://127.0.0.1:8080/user"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f41e88b6cc1d8857.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="http://127.0.0.1:8080/user/stream/all"></p><p>后续加入CURD的普通接口和stream接口。<br>添加validation<br>参数check，统一exception抛出及切面拦截。<br>具体代码参考<a href=""></a><br>全局异常：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">import lombok.Data;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-10 22:54</span><br><span class="line"> * @desc $&#123;DESCRIPTION&#125;</span><br><span class="line"> **/</span><br><span class="line">@Data</span><br><span class="line">public class CheckException extends RuntimeException &#123;</span><br><span class="line">    private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 出错字段的名字</span><br><span class="line">     */</span><br><span class="line">    private String fieldName;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 出错字段的值</span><br><span class="line">     */</span><br><span class="line">    private String fieldValue;</span><br><span class="line"></span><br><span class="line">    public CheckException() &#123;</span><br><span class="line">        super();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public CheckException(String message, Throwable cause,</span><br><span class="line">            boolean enableSuppression, boolean writableStackTrace) &#123;</span><br><span class="line">        super(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public CheckException(String message, Throwable cause) &#123;</span><br><span class="line">        super(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public CheckException(String message) &#123;</span><br><span class="line">        super(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public CheckException(Throwable cause) &#123;</span><br><span class="line">        super(cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public CheckException(String fieldName, String fieldValue) &#123;</span><br><span class="line">        super();</span><br><span class="line">        this.fieldName = fieldName;</span><br><span class="line">        this.fieldValue = fieldValue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>参数检查公用方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import com.marvin.springboot.webflux.demo.exception.CheckException;</span><br><span class="line"></span><br><span class="line">import java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-10 22:53</span><br><span class="line"> * @desc tool</span><br><span class="line"> **/</span><br><span class="line">public class CheckUtil &#123;</span><br><span class="line"></span><br><span class="line">    private static final String[] INVALID_NAMES = &#123;&quot;admin&quot;, &quot;guanliyuan&quot;&#125;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 用户名校验，不成功时抛出异常</span><br><span class="line">     * @param value</span><br><span class="line">     */</span><br><span class="line">    public static void checkUserName(String value) &#123;</span><br><span class="line">        Stream.of(INVALID_NAMES).filter(name -&gt; name.equalsIgnoreCase(value))</span><br><span class="line">                .findAny().ifPresent(name -&gt; &#123;</span><br><span class="line">                    throw new CheckException(name, value);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>异常拦截切面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">import com.marvin.springboot.webflux.demo.exception.CheckException;</span><br><span class="line">import org.springframework.http.HttpStatus;</span><br><span class="line">import org.springframework.http.ResponseEntity;</span><br><span class="line">import org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line">import org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line">import org.springframework.web.bind.support.WebExchangeBindException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-10 22:43</span><br><span class="line"> * @desc 异常处理切面</span><br><span class="line"> **/</span><br><span class="line">@ControllerAdvice</span><br><span class="line">public class CheckAdvice &#123;</span><br><span class="line"></span><br><span class="line">    @ExceptionHandler(WebExchangeBindException.class)</span><br><span class="line">    public ResponseEntity handleBindException(WebExchangeBindException e) &#123;</span><br><span class="line">        return new ResponseEntity&lt;String&gt;(toStr(e), HttpStatus.BAD_REQUEST);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ExceptionHandler(CheckException.class)</span><br><span class="line">    public ResponseEntity handleBindException(CheckException e) &#123;</span><br><span class="line">        return new ResponseEntity&lt;String&gt;(toStr(e), HttpStatus.BAD_REQUEST);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 把校验异常转换成字符串</span><br><span class="line">     * @param ex</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private String toStr(WebExchangeBindException ex) &#123;</span><br><span class="line">        return ex.getFieldErrors().stream().map(e -&gt; e.getField() + &quot;:&quot; + e.getDefaultMessage()).reduce(&quot;&quot;, (s1, s2) -&gt; s1 + &quot;\n&quot; + s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 把校验异常转换成字符串</span><br><span class="line">     * @param ex</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private String toStr(CheckException ex) &#123;</span><br><span class="line">        return ex.getFieldName() + &quot;:错误的值 &quot; + ex.getFieldValue();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>controller层加校验：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">    * 修改数据</span><br><span class="line">    * 存在的时候返回200，数据不存在的话返回404</span><br><span class="line">    */</span><br><span class="line">   @PutMapping(&quot;/&#123;id&#125;&quot;)</span><br><span class="line">   public Mono&lt;ResponseEntity&lt;User&gt;&gt; updateUser(@PathVariable(&quot;id&quot;) String id, @Valid @RequestBody User user) &#123;</span><br><span class="line">       CheckUtil.checkUserName(user.getName());</span><br><span class="line">       return this.userRepository.findById(id)</span><br><span class="line">               //flatMat： 操作数据</span><br><span class="line">           .flatMap(u -&gt; &#123;</span><br><span class="line">               u.setAge(user.getAge());</span><br><span class="line">               u.setName(user.getName());</span><br><span class="line">               return this.userRepository.save(u);</span><br><span class="line">           &#125;)</span><br><span class="line">               //map：转换数据</span><br><span class="line">           .map(u -&gt; new ResponseEntity&lt;&gt;(u, HttpStatus.OK)).defaultIfEmpty(new ResponseEntity&lt;&gt;(HttpStatus.NOT_FOUND));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>测试：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5798865b82c0013d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="参数校验"></p><ul><li>5.3 RouterFunction模式<br><strong>实现基本的增删改查</strong><br>除了上一节的User实体类，和UserRepository接口类两个，新建一个UserHandler类，内容如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">import com.marvin.springboot.webfluxrouter.router.domain.User;</span><br><span class="line">import com.marvin.springboot.webfluxrouter.router.repository.UserRepository;</span><br><span class="line">import org.springframework.http.MediaType;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.reactive.function.server.ServerRequest;</span><br><span class="line">import org.springframework.web.reactive.function.server.ServerResponse;</span><br><span class="line">import reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line">import javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-26 22:32</span><br><span class="line"> * @desc UserHandler </span><br><span class="line"> **/</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class UserHandler &#123;</span><br><span class="line"></span><br><span class="line">    @Resource</span><br><span class="line">    private UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 得到所有用户</span><br><span class="line">     * @param request</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public Mono&lt;ServerResponse&gt; getAllUser(ServerRequest request) &#123;</span><br><span class="line">        return ServerResponse.ok().contentType(MediaType.APPLICATION_JSON_UTF8).body(userRepository.findAll(), User.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 创建用户</span><br><span class="line">     * @param request</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public Mono&lt;ServerResponse&gt; createUser(ServerRequest request) &#123;</span><br><span class="line">        Mono&lt;User&gt; user = request.bodyToMono(User.class);</span><br><span class="line">        return ServerResponse.ok().contentType(MediaType.APPLICATION_JSON_UTF8).body(userRepository.saveAll(user), User.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据id删除用户</span><br><span class="line">     * @param request</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public Mono&lt;ServerResponse&gt; deleteUserById(ServerRequest request) &#123;</span><br><span class="line">        String id = request.pathVariable(&quot;id&quot;);</span><br><span class="line">        return this.userRepository.findById(id).flatMap(user -&gt;</span><br><span class="line">            this.userRepository.delete(user).then(ServerResponse.ok().build())).switchIfEmpty(ServerResponse.notFound().build());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>在创建一个AllRouters类，并且类似通常写的RequestMapping，处理URL路由，内容如下：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import com.marvin.springboot.webfluxrouter.router.handler.UserHandler;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.http.MediaType;</span><br><span class="line">import org.springframework.web.reactive.function.server.RequestPredicates;</span><br><span class="line">import org.springframework.web.reactive.function.server.RouterFunction;</span><br><span class="line">import org.springframework.web.reactive.function.server.RouterFunctions;</span><br><span class="line">import org.springframework.web.reactive.function.server.ServerResponse;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-26 22:45</span><br><span class="line"> * @desc 路由</span><br><span class="line"> **/</span><br><span class="line">@Configuration</span><br><span class="line">public class AllRouters &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    RouterFunction&lt;ServerResponse&gt; userRouter(UserHandler handler) &#123;</span><br><span class="line">        return RouterFunctions.nest(</span><br><span class="line">          //相当于类上面的@RequestMapping(&quot;/user&quot;)</span><br><span class="line">          RequestPredicates.path(&quot;/user&quot;),</span><br><span class="line">                //相当于方法上面的@RequestMapping，获取所有用户</span><br><span class="line">                RouterFunctions.route(RequestPredicates.GET(&quot;&quot;), handler::getAllUser)</span><br><span class="line">                //添加用户</span><br><span class="line">                .andRoute(RequestPredicates.POST(&quot;&quot;).and(RequestPredicates.accept(MediaType.APPLICATION_JSON_UTF8)), handler::createUser)</span><br><span class="line">                //删除用户</span><br><span class="line">                .andRoute(RequestPredicates.DELETE(&quot;/&#123;id&#125;&quot;), handler::deleteUserById)</span><br><span class="line"></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行程序，并且添加，列表，删除接口，完美~~~</p><p>  <strong>实现数据校验功能</strong><br>仍然使用上一节中的<code>CheckException</code>和<code>CheckUtil</code>两个类。<br>修改UserHander：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> webflux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux 上我常用的几种nginx配置</title>
      <link href="/2019/01/08/Linux%20%E4%B8%8A%E6%88%91%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E7%A7%8Dnginx%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/01/08/Linux%20%E4%B8%8A%E6%88%91%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E7%A7%8Dnginx%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>工作中常用的nginx配置备忘录<br><a href="https://www.jianshu.com/p/a6472181e6be" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>nginx作为用烂了的反向代理服务器，这两年经手的项目也是各种配置，各种学习，再次记录下还能想的起来或者有据可查的nginx配置，以防哪天掉坑里时还有一根救命稻草。</p><h3 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h3><p>个人爱好的原因，我的nginx一般安装在<code>/usr/local/nginx</code>这个目录，主配置文件<code>/usr/local/nginx/conf/nginx.conf</code>，其他配置文件则是在<code>/usr/local/nginx/conf/conf.d/*.conf</code>这些单独的文件上。<br>这些conf.d目录下的配置文件要在nginx.conf中被引入，因此nginx.conf文件最后一行有这么一句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include conf.d/*.conf;</span><br></pre></td></tr></table></figure></p><h3 id="1、一个域名，多个端口，多个项目"><a href="#1、一个域名，多个端口，多个项目" class="headerlink" title="1、一个域名，多个端口，多个项目"></a>1、一个域名，多个端口，多个项目</h3><p>这种情况是最理想，最好配置的，但是也是最没有啥可说的一种，不过我还的是copy一个记录一下吧。<br>比如conf.d下有几个配置文件，大概这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[haieradmin@1169CKT2 conf.d]$ ll</span><br><span class="line">total 20</span><br><span class="line">-rw-r--r-- 1 haieradmin haieradmin  828 Mar  7  2018 hrsj.15386.conf</span><br><span class="line">-rw-r--r-- 1 haieradmin haieradmin  827 Mar  7  2018 hryh.10386.conf</span><br><span class="line">-rw-r--r-- 1 haieradmin haieradmin 1166 Nov 22 13:49 html.8880.conf</span><br><span class="line">-rw-r--r-- 1 haieradmin haieradmin 1022 Jul 16 13:50 portal.8886.conf</span><br><span class="line">-rw-r--r-- 1 haieradmin haieradmin  846 Jul 13  2018 questionnaire.8081.conf</span><br><span class="line">[haieradmin@1169CKT2 conf.d]$ pwd</span><br><span class="line">/usr/local/nginx/conf/conf.d</span><br><span class="line">[haieradmin@1169CKT2 conf.d]$</span><br></pre></td></tr></table></figure></p><p>查看其中一个文件的内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[haieradmin@1169CKT2 conf.d]$ cat hrsj.15386.conf </span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen       15386;</span><br><span class="line">        #server_name  tech.haier.net;</span><br><span class="line"></span><br><span class="line">        #ssl                  on;</span><br><span class="line">        #ssl_certificate      /usr/local/nginx/key/server.crt;</span><br><span class="line">        #ssl_certificate_key  /usr/local/nginx/key/server.key;</span><br><span class="line">        index index.html;</span><br><span class="line">        root /opt/chuangke/website/hrsj;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            client_max_body_size    100M;</span><br><span class="line">            try_files $uri $uri/ /index.html;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /\.</span><br><span class="line">        &#123;</span><br><span class="line">            deny all;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line">        access_log  /usr/local/nginx/logs/hrsj.host.access.log;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">[haieradmin@1169CKT2 conf.d]$</span><br></pre></td></tr></table></figure></p><p>其他几个配置文件知识里面listen的端口和root目录不一样。</p><h3 id="2、一个域名，一个端口，多个项目，访问时用二级目录名称区分"><a href="#2、一个域名，一个端口，多个项目，访问时用二级目录名称区分" class="headerlink" title="2、一个域名，一个端口，多个项目，访问时用二级目录名称区分"></a>2、一个域名，一个端口，多个项目，访问时用二级目录名称区分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[haieradmin@1169CKT conf.d]$ ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root 1594 Jun 26  2018 nginx_8086_to_5601.conf</span><br><span class="line">-rw-r--r-- 1 root root 1592 Jun 28  2018 nginx_8888_gitstats.conf</span><br><span class="line">[haieradmin@1169CKT conf.d]$</span><br></pre></td></tr></table></figure><p>查看配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[haieradmin@1169CKT conf.d]$ cat nginx_8888_gitstats.conf </span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8888;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        #location / &#123;</span><br><span class="line">        #    root   html;</span><br><span class="line">        #    index  index.html index.htm;</span><br><span class="line">        #&#125;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line"></span><br><span class="line">        client_max_body_size    100m;</span><br><span class="line">    </span><br><span class="line">        location /questionnaire &#123;</span><br><span class="line">            alias  /opt/chuangke/gitstats/result/questionnaire;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /portal &#123;</span><br><span class="line">            alias  /opt/chuangke/gitstats/result/Portal;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /portalmanage &#123;</span><br><span class="line">            alias  /opt/chuangke/gitstats/result/portalmanage;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">        # concurs with nginx&apos;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line">[haieradmin@1169CKT conf.d]$</span><br></pre></td></tr></table></figure></p><p>访问的时候如：<br><code>http://localhost:8888/portalmanage</code>和<code>http://localhost:8888/portal</code>等。</p><h3 id="3、多个域名，一个端口，多个项目"><a href="#3、多个域名，一个端口，多个项目" class="headerlink" title="3、多个域名，一个端口，多个项目"></a>3、多个域名，一个端口，多个项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">[root@im-test-cpr-1 nginx]# cat nginx.conf</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user root;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"># Load dynamic modules. See /usr/share/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    upstream server1 &#123;</span><br><span class="line">        server 127.0.0.1:8890;</span><br><span class="line">    &#125;</span><br><span class="line">    upstream server2 &#123;</span><br><span class="line">        server 127.0.0.1:5151;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       5050 default_server ssl;</span><br><span class="line">        listen       [::]:5050 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line">        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">        ssl_session_cache shared:SSL:1m;</span><br><span class="line">        ssl_session_timeout  10m;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_set_header Host $host:$server_port;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_connect_timeout 90;</span><br><span class="line">            add_header Access-Control-Allow-Origin $http_origin;</span><br><span class="line">            add_header Access-Control-Allow-Methods &apos;GET, POST, PUT, DELETE, OPTIONS&apos;;</span><br><span class="line">            add_header Access-Control-Allow-Credentials &apos;true&apos;;</span><br><span class="line">            add_header Access-Control-Allow-Headers &apos;Accept, Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&apos;;</span><br><span class="line">            if ($request_method = &apos;OPTIONS&apos;) &#123;</span><br><span class="line">               add_header &apos;Access-Control-Max-Age&apos; 1728000;</span><br><span class="line">               add_header &apos;Content-Type&apos; &apos;text/plain charset=UTF-8&apos;;</span><br><span class="line">               add_header &apos;Content-Length&apos; 0;</span><br><span class="line">               add_header Access-Control-Allow-Origin $http_origin;</span><br><span class="line">               add_header Access-Control-Allow-Methods &apos;GET, POST, PUT, DELETE, OPTIONS&apos;;</span><br><span class="line">               add_header Access-Control-Allow-Credentials &apos;true&apos;;</span><br><span class="line">               add_header Access-Control-Allow-Headers &apos;Accept, Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&apos;;</span><br><span class="line">               return 204;</span><br><span class="line">           &#125;</span><br><span class="line">                proxy_pass http://server2;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8443 ssl;</span><br><span class="line">        server_name  sysadmint.rrs.com;</span><br><span class="line">        root         /usr/share/nginx/html/sysadmin/;</span><br><span class="line"></span><br><span class="line">        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">        ssl_session_cache shared:SSL:1m;</span><br><span class="line">        ssl_session_timeout  10m;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$ &#123;</span><br><span class="line">                add_header Cache-Control no-store;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            try_files $uri /index.html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8443 ssl;</span><br><span class="line">        server_name  opadmint.rrs.com;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$ &#123;</span><br><span class="line">                add_header Cache-Control no-store;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        root         /usr/share/nginx/html/opadmin/;</span><br><span class="line">        location / &#123;</span><br><span class="line">            try_files $uri /index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">        ssl_session_cache shared:SSL:1m;</span><br><span class="line">        ssl_session_timeout  10m;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8443 ssl;</span><br><span class="line">        server_name  shopadmint.rrs.com;</span><br><span class="line">        root         /usr/share/nginx/html/shopadmin/;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$ &#123;</span><br><span class="line">                add_header Cache-Control no-store;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            try_files $uri /index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ssl_certificate &quot;/etc/pki/nginx/server.crt&quot;;</span><br><span class="line">        ssl_certificate_key &quot;/etc/pki/nginx/private/server.key&quot;;</span><br><span class="line">        ssl_session_cache shared:SSL:1m;</span><br><span class="line">        ssl_session_timeout  10m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">[root@im-test-cpr-1 nginx]#</span><br></pre></td></tr></table></figure><p>访问：host name+8443端口号</p><h3 id="4、将收到的服务转发给别的服务"><a href="#4、将收到的服务转发给别的服务" class="headerlink" title="4、将收到的服务转发给别的服务"></a>4、将收到的服务转发给别的服务</h3><p>比如接受端口接受的端口是8086，但是映射后访问5601的资源。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[haieradmin@1169CKT conf.d]$ cat nginx_8086_to_5601.conf </span><br><span class="line">server &#123;</span><br><span class="line">        listen      8086;</span><br><span class="line">        server_name  office.haier.net;</span><br><span class="line">        access_log  logs/5601.host.access.log  main;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://127.0.0.1:5601/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~.*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">            proxy_pass http://127.0.0.1:5601;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~.*\.(js|css)?$ &#123;</span><br><span class="line">            proxy_pass http://127.0.0.1:5601;</span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">[haieradmin@1169CKT conf.d]$</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo+next使用Valine评论系统</title>
      <link href="/2018/11/24/hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
      <url>/2018/11/24/hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>博客评论系统从韩国产来必力换成国产Valine<br><a href="https://www.jianshu.com/p/728a9594bb6c" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>原文地址：<a href="https://qdhaiqiang.github.io/2018/11/24/hexo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8Valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/">hexo+next使用Valine评论系</a></p><h3 id="来必力"><a href="#来必力" class="headerlink" title="来必力"></a>来必力</h3><p>博主原来的博客使用的来必力系统，确实卡顿太厉害。作为一枚程序猿岂能允许这么磨磨唧唧的东西一直存在，甲方说优化，优化掉。因为我最不喜欢在评论系统里看到还需要登录这样的步骤。</p><p>先展示下现在的东东<br><img src="https://upload-images.jianshu.io/upload_images/4109786-8bbfdc31c8fe5b0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="载入"></p><p>终于出来了，评论试试<br><img src="https://upload-images.jianshu.io/upload_images/4109786-89529b6f4439b64e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="发布一条评论试试"></p><p>咦，还得登陆一下，输个邮箱试试</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-6171614c1d02db25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="提示登录.png"></p><p>什么鬼，那就登录吧！！！<br><img src="https://upload-images.jianshu.io/upload_images/4109786-6a9b65b3a40593d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="支持很多第三方登录"></p><p>看到了吧，你可以登陆了。噗噗噗~<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a9e84ed55b362852.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录窗口"></p><p>还没有放弃的真是我崇拜的大哥啊。<br>当然，吐槽归吐槽，也不是一无是处，当时选择一是没有其他可选的，而是看了看有些截图，还不错。比如下面这样的（我用github第三方登录的）：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-c6b414797355e81e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="评论"></p><p>输入框右上角还有个小铃铛，点点试试<br><img src="https://upload-images.jianshu.io/upload_images/4109786-63e3cfdbcbcfae28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="所有评论"></p><p>是吧，还不错吧。哈哈哈。</p><p>再来看看来必力的<a href="https://www.livere.com" target="_blank" rel="noopener">后台</a>吧（我可以跳过墙，所以速度还可以）<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5186f6088c6b5874.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>毕竟是国际化的，能选中文。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-ab5863f7d457873e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="分析"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-f9ae176e9cd0d3d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="评论管理"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-9de4129c6003a848.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="设置"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-46f7804e846b641f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="通知提醒"></p><p>到此为止吧。</p><h3 id="给hexo添加Valine评论功能"><a href="#给hexo添加Valine评论功能" class="headerlink" title="给hexo添加Valine评论功能"></a>给hexo添加Valine评论功能</h3><p>后面了解到一款国人开发的评论系统叫Valine用的是LeanCloud作为数据库，洁面很简洁，不像来必力那样花哨只是单纯的评论，简洁到没有后台！！！删除和管理评论只能直接操作数据库。<br>这里写下为Hexo-Next模板添加Valine的过程和坑点。<br>1.Next模板要5.14（免去自己手动修改的麻烦）。不是这个版本的可以考虑升级或者自己手动修改，修改教程在 <a href="https://github.com/iissnan/hexo-theme-next/pull/1983" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next/pull/1983</a><br>2.注册LeanCloud并创建一个开发版应用（免费）</p><p><a href="https://nobige.cn/post/20180725-forHexoAddValine/xiao_2018-07-25_15-26-18.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/4109786-db52b8ea81a285e0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></a><br>3.在LeanCloud -&gt; 存储 -&gt; 创建Class -&gt; 无限制的Class（坑点1）<br>class名称为：Comment<br><a href="https://nobige.cn/post/20180725-forHexoAddValine/xiao_2018-07-25_15-27-46.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/4109786-6846e60c8f4f72e3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="LeanCloud创建Class"></a> </p><p>4.在LeanCloud-设置-把除数据存储其他选项都关闭。<br><a href="https://nobige.cn/post/20180725-forHexoAddValine/xiao_2018-07-25_15-28-53.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/4109786-9a3440a275690e77.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="LeanCloud设置"></a><br>安全域名中添加域名，一定要注意格式（坑点2）</p><p>例如：<a href="https://www.nobige.cn/" target="_blank" rel="noopener">https://www.nobige.cn:443</a></p><p><a href="https://nobige.cn/post/20180725-forHexoAddValine/xiao_2018-07-25_15-31-23.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/4109786-0e25334bd0b284a2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="LeanCloud设置"></a> </p><p>5.在Next模板下的<em>_config.yml</em>搜索<em>Valine</em>进行填写appid和appkey</p><p><a href="https://nobige.cn/post/20180725-forHexoAddValine/xiao_2018-07-25_15-34-38.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/4109786-ae3a0c2b1ab9c561.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Next _config.yml"></a> </p><p>功能展示</p><p><a href="https://nobige.cn/post/20180725-forHexoAddValine/xiao_2018-07-25_15-40-20.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/4109786-1cd8b53f81853e88.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Valine功能展示"></a> </p><p>下面说下各个选项的含义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Valine.</span><br><span class="line"># You can get your appid and appkey from https://leancloud.cn</span><br><span class="line"># more info please open https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid:    # your leancloud application appid</span><br><span class="line">  appkey:    # your leancloud application appkey</span><br><span class="line">  notify: true # mail notifier , https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: ヾﾉ≧∀≦)o 来呀！吐槽一番吧！ # comment box placeholder</span><br><span class="line">  avatar: mm # gravatar style</span><br><span class="line">  guest_info: nick,mail,link # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br></pre></td></tr></table></figure></p><p>一般改动的为appid和appkey其他默认即可，如果要开启email通知除了修改<em>_config.yml</em>文件之外还要将LeanCloud -&gt; 设置邮件模板 -&gt; <em>用于重置密码的邮件主题</em>进行修改</p><p><a href="https://nobige.cn/post/20180725-forHexoAddValine/xiao_2018-07-25_15-57-49.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/4109786-8bd8a493cd24ae3e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="LeanCloud设置邮件模板"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">你在&#123;&#123;appname&#125;&#125; 的评论收到了新的回复</span><br><span class="line"></span><br><span class="line">&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;&lt;a href=&quot;你的网址首页链接&quot; style=&quot;display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;&quot;&gt;马上查看&lt;/a&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><h3 id="CDN修改"><a href="#CDN修改" class="headerlink" title="CDN修改"></a>CDN修改</h3><p>建议将自带的CDN改成第三方CDN，为啥？？？10+s的加载那酸爽是在是过瘾。<br>文件目录：next/layout/_third-party/comments/valine.swig</p><blockquote><p>//cdn.jsdelivr.net/npm/valine/dist/Valine.min.js</p></blockquote><p>官方的CDN是</p><blockquote><p>//unpkg.com/valine/dist/Valine.min.js</p></blockquote><p><em>更多高级用法请到官网查看 <a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></em></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo,Valine </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows 上搭建clojure开发环境</title>
      <link href="/2018/11/05/Window%E4%B8%8A%E6%90%AD%E5%BB%BAClojure%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/11/05/Window%E4%B8%8A%E6%90%AD%E5%BB%BAClojure%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>Windows上Clojure环境搭建<br><a href="https://www.jianshu.com/p/27e1fa8fc5cc" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h4 id="1、安装JDK"><a href="#1、安装JDK" class="headerlink" title="1、安装JDK"></a>1、安装JDK</h4><p>我本地已经装好了jdk9，没装好的自己百度下，文章多到烂了。<br>使用<code>java -version</code>查看是否安装妥当。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\marvin&gt;java -version</span><br><span class="line">java version &quot;9.0.4&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 9.0.4+11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 9.0.4+11, mixed mode)</span><br><span class="line"></span><br><span class="line">C:\Users\marvin&gt;</span><br></pre></td></tr></table></figure></p><h4 id="2、安装leiningen-win-installer"><a href="#2、安装leiningen-win-installer" class="headerlink" title="2、安装leiningen-win-installer"></a>2、安装leiningen-win-installer</h4><p><a href="https://djpowell.github.io/leiningen-win-installer/" target="_blank" rel="noopener">点我进入下载页</a>，或者直接<a href="https://bitbucket.org/djpowell/leiningen-win-installer/downloads/leiningen-installer-1.0.exe" target="_blank" rel="noopener">点我下载</a>下载一个.exe的windows可执行文件，安装时使用默认配置，不然可能缺少self-installs文件夹。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-09a81b57b43dda3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="leiningen-win-installer.png"></p><h4 id="3、运行安装好的clojure-REPL，不出意外的话会闪退，闪退的话去cmd运行-lein-version-会提示你要先安装，安装命令看提示，但该命令因为有墙基本上都执行不了，按照下一步安装。"><a href="#3、运行安装好的clojure-REPL，不出意外的话会闪退，闪退的话去cmd运行-lein-version-会提示你要先安装，安装命令看提示，但该命令因为有墙基本上都执行不了，按照下一步安装。" class="headerlink" title="3、运行安装好的clojure REPL，不出意外的话会闪退，闪退的话去cmd运行 lein -version 会提示你要先安装，安装命令看提示，但该命令因为有墙基本上都执行不了，按照下一步安装。"></a>3、运行安装好的clojure REPL，不出意外的话会闪退，闪退的话去cmd运行 lein -version 会提示你要先安装，安装命令看提示，但该命令因为有墙基本上都执行不了，按照下一步安装。</h4><h4 id="4、手动配置leiningen"><a href="#4、手动配置leiningen" class="headerlink" title="4、手动配置leiningen"></a>4、手动配置leiningen</h4><p>去<a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Ftechnomancy%2Fleiningen%2Freleases" target="_blank" rel="noopener">https://github.com/technomancy/leiningen/releases</a>下载[<strong>leiningen-2.8.1-standalone.zip</strong>]，找到上一步安装lein安装目录，放在self-install文件夹下（C:\Users\marvin.lein\self-installs），把文件后缀名改成.jar。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-671c9a315513e5b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="手动配置leiningen"></p><h4 id="5、在cmd中执行lein-repl即可进入clojure命令行，执行lein-repl"><a href="#5、在cmd中执行lein-repl即可进入clojure命令行，执行lein-repl" class="headerlink" title="5、在cmd中执行lein repl即可进入clojure命令行，执行lein repl"></a>5、在cmd中执行lein repl即可进入clojure命令行，执行<code>lein repl</code></h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-20ffd9b9bad4482b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>或者可以直接在windows开始栏搜索安装的程序，点击打开。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5f895343c37b9180.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="lein"></p><p>更进一步，输出个Hello World吧</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-cde910d31fbbe374.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h4 id="6、使用Intellij-Idea作为开发IED"><a href="#6、使用Intellij-Idea作为开发IED" class="headerlink" title="6、使用Intellij Idea作为开发IED"></a>6、使用Intellij Idea作为开发IED</h4><p>需要安装<a href="https://plugins.jetbrains.com/plugin/8090-cursive" target="_blank" rel="noopener">Cursive插件</a></p><p>注意：如果在线安装安装不上的话，可以<a href="https://plugins.jetbrains.com/plugin/8090-cursive" target="_blank" rel="noopener">下载</a>你的IDE对应版本插件的zip包，进行本地导入安装。</p><p>如图是本地新建的一个demo工程，可以在.clj文件上直接右击运行。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-9970d54533aa214b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Hello world"></p><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(ns firstclojure.core)</span><br><span class="line"></span><br><span class="line">(defn foo</span><br><span class="line">  &quot;I don&apos;t do a whole lot.&quot;</span><br><span class="line">  [x]</span><br><span class="line">  (println x &quot;Hello, World!&quot;))</span><br><span class="line"></span><br><span class="line">(println (foo &quot;Hello Clojure \n&quot;))</span><br></pre></td></tr></table></figure></p><p>通过lein run的方式也可以很方便的执行代码，但是如果要将我们的代码share出去，就需要生成一个jar文件了，我们使用lein uberjar来生成jar，生成的jar文件为target/uberjar/clojure-noob-0.1.0-SNAPSHOT-standalone.jar，我们可以在java里面直接运行了。</p><p>java -jar target/uberjar/clojure-noob-0.1.0-SNAPSHOT-standalone.jar<br>Hello, Clojure!</p><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://blog.3vyd.com/blog/posts-output/2018-10-31-Clojure-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/" target="_blank" rel="noopener">Mac 下 Clojure 环境搭建</a></p>]]></content>
      
      
      <categories>
          
          <category> clojure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clojure </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>海尔创客汇笔记----安卓测试环境检测不到热更</title>
      <link href="/2018/11/01/%E6%B5%B7%E5%B0%94%E5%88%9B%E5%AE%A2%E6%B1%87%E7%AC%94%E8%AE%B0----%E5%AE%89%E5%8D%93%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E6%A3%80%E6%B5%8B%E4%B8%8D%E5%88%B0%E7%83%AD%E6%9B%B4/"/>
      <url>/2018/11/01/%E6%B5%B7%E5%B0%94%E5%88%9B%E5%AE%A2%E6%B1%87%E7%AC%94%E8%AE%B0----%E5%AE%89%E5%8D%93%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E6%A3%80%E6%B5%8B%E4%B8%8D%E5%88%B0%E7%83%AD%E6%9B%B4/</url>
      
        <content type="html"><![CDATA[<p>安卓测试环境检测不到热更，问题发现、排查思路及解决<br><a href="https://www.jianshu.com/p/b374a782ec1c" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="怕啥来啥"><a href="#怕啥来啥" class="headerlink" title="怕啥来啥"></a>怕啥来啥</h2><p>昨天晚上约定的晚上11点发布测试环境的热更，小杨同学说了：“怕啥来啥”，果然，安卓测试的app周一就扔出去了，约定好的今天晚上热更，结果发了热更移动端却检测不到。</p><p>晚上跟ios前端同事折腾了两次，但是无果而终，甲方粑粑不乐意了。</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-193e5a0a2cb2ac76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="客户有意见了哈.png"></p><p>今天开始解决这个问题。</p><h2 id="解决方案过程讨论"><a href="#解决方案过程讨论" class="headerlink" title="解决方案过程讨论"></a>解决方案过程讨论</h2><ul><li><p>背景：</p><blockquote><p>1、发出去之前确实做过热更测试，不过现在看来，当时测是测了，但是测试的环境一直停留在debug环境。<br>2、如果本地代码和服务器上最新的热更包是一样的话，推送热更是不会成功的。</p></blockquote></li><li><p>第一步，热更是否推送成功？<br>1、小杨同学在他的环境下发了ios的推送，测试完美以后，又发了android的热更。遗憾的是手机上启动检测不到更新。<br>后来再更新代码，发了几次，无果。</p></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4109786-d4fe04039ff8a48f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>第二步，app检查逻辑是否正常？<br>app启动时做了检查日志处理：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 热更-检查更新</span><br><span class="line"> codePushCheckForUpdate = () =&gt; &#123;</span><br><span class="line">   CodePush.checkForUpdate().then((update) =&gt; &#123;</span><br><span class="line">     if (!update) &#123;</span><br><span class="line">       console.log(&apos;已是最新版本...&apos;);</span><br><span class="line">     &#125; else &#123;</span><br><span class="line">       console.log(&apos;有新版本-------&apos;, update);</span><br><span class="line">       const packageSize = parseFloat(update.packageSize / 1024 / 1024).toFixed(2);</span><br><span class="line">       console.log(&apos;packageSize&apos;, packageSize);</span><br><span class="line">       this.setState(&#123; totalSize: packageSize &#125;);</span><br><span class="line">       this.showUpdateInfoAlert(update);</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul><p>安卓手机启动查看log，结果确实是匹配的<br><img src="https://upload-images.jianshu.io/upload_images/4109786-ad35e21cbd77976c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>第三步，发送推送的环境和已有app的原生代码有区别导致的？<br>把本地所有代码暂存，直接发布热更。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-1d03ea70c655f1ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><p>结果是一样的。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-444058d3a56932ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>第四步，把代码切换到打包时的commit，然后发热更。<br>怀疑是如下的这种代码有区别导致的。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-b00c9e9bb5f1620f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><p>切换到当时打包的那次commit，重新发热更。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-3d402ffac39e6a5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>很遗憾，结论是一样的。</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-1e3e5866e4f81a91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>告诉甲方粑粑，然后用最新的代码打个包，这就睡觉了。</p><h2 id="热更记录硬删除测试"><a href="#热更记录硬删除测试" class="headerlink" title="热更记录硬删除测试"></a>热更记录硬删除测试</h2><p>在热更数据库强制删除热更记录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM codepush.deployments_historyWHERE  id=192;</span><br><span class="line">DELETE FROM codepush.deployments_historyWHERE  id=193;</span><br><span class="line">DELETE FROM codepush.deployments_historyWHERE  id=194;</span><br><span class="line">DELETE FROM codepush.deployments_history WHERE  id=195;</span><br><span class="line"></span><br><span class="line">DELETE FROM codepush.packages WHERE  id=192;</span><br><span class="line">DELETE FROM codepush.packages WHERE  id=193;</span><br><span class="line">DELETE FROM codepush.packages WHERE  id=194;</span><br><span class="line">DELETE FROM codepush.packages WHERE  id=195;</span><br><span class="line"></span><br><span class="line">DELETE FROM codepush.packages_metrics WHERE  id=192;</span><br><span class="line">DELETE FROM codepush.packages_metrics WHERE  id=193;</span><br><span class="line">DELETE FROM codepush.packages_metrics WHERE  id=194;</span><br><span class="line">DELETE FROM codepush.packages_metrics WHERE  id=195;</span><br><span class="line"></span><br><span class="line">DELETE FROM codepush.packages_diff WHERE  id=450;</span><br><span class="line">DELETE FROM codepush.packages_diff WHERE  id=451;</span><br><span class="line">DELETE FROM codepush.packages_diff WHERE  id=452;</span><br><span class="line">DELETE FROM codepush.packages_diff WHERE  id=453;</span><br><span class="line">DELETE FROM codepush.packages_diff WHERE  id=454;</span><br><span class="line">DELETE FROM codepush.packages_diff WHERE  id=455;</span><br><span class="line"></span><br><span class="line">DELETE FROM codepush.deployments_versions WHERE  id=43;</span><br></pre></td></tr></table></figure></p><p>删除4次1.5.1的code-push后<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a181962baaa60483.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>重新发起热更<br><img src="https://upload-images.jianshu.io/upload_images/4109786-adc01ed9bc8ae368.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>很遗憾仍然没有生效。此时本地的debug环境一个app启动后，发现居然提示更新。</p><p><strong>问题来了，可能是热更和检查热更不在一个频道上</strong></p><p>检查安卓热更配置，果然验证了这一猜测。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">    debug &#123;</span><br><span class="line">        ext.alwaysUpdateBuildId = false // 避免 crashLytics 的alwaysUpdateBuildId每次编译都重新生成 加快编译速度</span><br><span class="line">        buildConfigField &quot;String&quot;, &quot;CODEPUSH_KEY&quot;, &apos;&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;&apos; // Staging</span><br><span class="line">    &#125;</span><br><span class="line">    release &#123;</span><br><span class="line">        signingConfig signingConfigs.release</span><br><span class="line">        minifyEnabled enableProguardInReleaseBuilds</span><br><span class="line">        proguardFiles getDefaultProguardFile(&quot;proguard-android.txt&quot;), &quot;proguard-rules.pro&quot;</span><br><span class="line">        buildConfigField &quot;String&quot;, &quot;CODEPUSH_KEY&quot;, &apos;&quot;pppppppppppppppppppppppppppppp&quot;&apos; //Production</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="一个解释：配置里只有debug（Staging）和release（Production）的配置-配置了不同的deployment"><a href="#一个解释：配置里只有debug（Staging）和release（Production）的配置-配置了不同的deployment" class="headerlink" title="一个解释：配置里只有debug（Staging）和release（Production）的配置,配置了不同的deployment"></a>一个解释：配置里只有debug（Staging）和release（Production）的配置,配置了不同的deployment</h5><p> key，但因为打测试环境的app时，选择的是release，所以，按照这个配置，只有发在Production的上的热更，app启动时才能检查到，而现在一直在用Staging发。</p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">    debug &#123;</span><br><span class="line">        ext.alwaysUpdateBuildId = false // 避免 crashLytics 的alwaysUpdateBuildId每次编译都重新生成 加快编译速度</span><br><span class="line">        buildConfigField &quot;String&quot;, &quot;CODEPUSH_KEY&quot;, &apos;&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;&apos; // Staging</span><br><span class="line">    &#125;</span><br><span class="line">    beta &#123;</span><br><span class="line">        signingConfig signingConfigs.release</span><br><span class="line">        minifyEnabled enableProguardInReleaseBuilds</span><br><span class="line">        buildConfigField &quot;String&quot;, &quot;CODEPUSH_KEY&quot;, &apos;&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;&apos; //Staging</span><br><span class="line">    &#125;</span><br><span class="line">    release &#123;</span><br><span class="line">        signingConfig signingConfigs.release</span><br><span class="line">        minifyEnabled enableProguardInReleaseBuilds</span><br><span class="line">        proguardFiles getDefaultProguardFile(&quot;proguard-android.txt&quot;), &quot;proguard-rules.pro&quot;</span><br><span class="line">        buildConfigField &quot;String&quot;, &quot;CODEPUSH_KEY&quot;, &apos;&quot;pppppppppppppppppppppppppppppp&quot;&apos; //Production</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sync时报错，所有的库都找不到，错误信息如下：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5437b9111c4fc5ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>参考<a href="https://stackoverflow.com/questions/47001656/unable-to-resolve-dependency-android-studio-3-0/47021147" target="_blank" rel="noopener">本文提示</a>，发现配置少了一项<code>matchingFallbacks = [&#39;release&#39;, &#39;debug&#39;]</code>，添加到beta配置后，build成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">beta &#123;</span><br><span class="line">    signingConfig signingConfigs.release</span><br><span class="line">    minifyEnabled enableProguardInReleaseBuilds</span><br><span class="line">    buildConfigField &quot;String&quot;, &quot;CODEPUSH_KEY&quot;, &apos;&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;&apos; //Staging</span><br><span class="line">   matchingFallbacks = [&apos;release&apos;, &apos;debug&apos;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>build后，重新打包，选择beta包，<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5b90e2e5d7b74ae0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>首页菜单改成【专属应用】，发热更，而且强更。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-aa67873a475b3bfd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="code-push.png"></p><p>app启动测试：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-1daf4b5c2e362d34.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="suceess"></p><p>检查应用更新数，果然有更新（此处我截图时已经成功了两次）<br><img src="https://upload-images.jianshu.io/upload_images/4109786-701334f8f694fc75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>success！！！</p><p>前端路漫漫，且采坑且记录~~~~</p><h2 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h2><ul><li><a href="https://stackoverflow.com/questions/47001656/unable-to-resolve-dependency-android-studio-3-0" target="_blank" rel="noopener">Unable to resolve dependency Android Studio 3.0</a></li><li><a href="https://blog.csdn.net/monkin2011/article/details/78427598" target="_blank" rel="noopener">升级AndroidStudio3.0 Unable to resolve dependency for ‘:app@betaUnitTest/compileClasspath’: Could not resolve project</a></li><li><a href="https://www.jianshu.com/p/6bbb8020c29e" target="_blank" rel="noopener">code-push热更新配置（命令整理）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react-native </tag>
            
            <tag> android </tag>
            
            <tag> code-push </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows10 上浅尝vue js好记性不如烂笔头之三</title>
      <link href="/2018/10/31/windows-vuejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/"/>
      <url>/2018/10/31/windows-vuejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/</url>
      
        <content type="html"><![CDATA[<p>vuejs学习笔记—-父子组件传值、动态组件、自定义组件、vue-router、vue-link、state<br><a href="https://www.jianshu.com/p/ac1ebafd755f" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>本节开始实战项目。<br>布局layout.vue<br>首页index.vue<br>引入vue-resource<br>引入json-server<br>config/index.js 中proxyTable使用<br><img src="https://upload-images.jianshu.io/upload_images/4109786-84e97421b4c2247a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/4109786-c8bb6556230d3eae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-49082889a27b0074.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>首页幻灯片制作,本次自己实现<br>0、父组件调用子组件，传值<br>1、子组件接收参数，维护当前index，分页切换实现<br>2、前一页，后一页按钮实现<br>3、自动播放实现<br>4、切入动画效果实现—transition<br>5、子组件通过事件触发父组件再次学习<br>查找vue js的组件库的推荐 <a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="noopener">https://github.com/vuejs/awesome-vue</a></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-0b4977064713d8c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>弹窗组件及关闭<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4195e205b3127981.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>登录注册表单验证和提交</p><p>够买详情页路由</p><p>其他</p><p>视频共享：<br>链接: <a href="https://pan.baidu.com/s/18TFC0-VSCIWFo977p4YcTQ" target="_blank" rel="noopener">https://pan.baidu.com/s/18TFC0-VSCIWFo977p4YcTQ</a><br>提取码: rjcp </p><p>源代码共享：<br><a href="https://gitee.com/marvinma/vue2-pc" target="_blank" rel="noopener">https://gitee.com/marvinma/vue2-pc</a></p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>海尔创客汇笔记----安卓生产环境打包配置</title>
      <link href="/2018/10/25/%E6%B5%B7%E5%B0%94%E5%88%9B%E5%AE%A2%E6%B1%87%E7%AC%94%E8%AE%B0----%E5%AE%89%E5%8D%93%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E6%89%93%E5%8C%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/10/25/%E6%B5%B7%E5%B0%94%E5%88%9B%E5%AE%A2%E6%B1%87%E7%AC%94%E8%AE%B0----%E5%AE%89%E5%8D%93%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E6%89%93%E5%8C%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>创客汇项目打包生产环境的app需要修改的配置<br><a href="https://www.jianshu.com/p/cb25e817ba36" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="打包修改配置"><a href="#打包修改配置" class="headerlink" title="打包修改配置"></a>打包修改配置</h2><p>1、header居中 看这个<a href="https://blog.csdn.net/hunannanhu/article/details/79285736" target="_blank" rel="noopener">https://blog.csdn.net/hunannanhu/article/details/79285736</a></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-6ffa10b0e22b77d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>注释掉关于安卓的特殊处理：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-c1512a24030fdb63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>2、修改网络请求api地址，全部换成正式</p><p>\Portal\js\network\constants.js<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a373a35460781f41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>3、修改IM环境切换成正式的</p><p>\Portal\js\network\constants.js<br><img src="https://upload-images.jianshu.io/upload_images/4109786-7359498caa2a8177.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>4、覆盖documentpicker  这个文件，</p><p>路径Portal\node_modules\react-native-document-picker\android\src\main\java\com\reactnativedocumentpicker\DocumentPicker.java</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-ded3cd89c9b88aa5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>新文件内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br></pre></td><td class="code"><pre><span class="line">package com.reactnativedocumentpicker;</span><br><span class="line"></span><br><span class="line">import android.app.Activity;</span><br><span class="line">import android.content.ContentResolver;</span><br><span class="line">import android.content.ContentUris;</span><br><span class="line">import android.content.Context;</span><br><span class="line">import android.content.Intent;</span><br><span class="line">import android.database.Cursor;</span><br><span class="line">import android.net.Uri;</span><br><span class="line">import android.os.Build;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.os.Environment;</span><br><span class="line">import android.provider.DocumentsContract;</span><br><span class="line">import android.provider.MediaStore;</span><br><span class="line">import android.provider.OpenableColumns;</span><br><span class="line">import android.util.Log;</span><br><span class="line">import android.webkit.MimeTypeMap;</span><br><span class="line"></span><br><span class="line">import com.facebook.react.bridge.ActivityEventListener;</span><br><span class="line">import com.facebook.react.bridge.Arguments;</span><br><span class="line">import com.facebook.react.bridge.Callback;</span><br><span class="line">import com.facebook.react.bridge.ReactApplicationContext;</span><br><span class="line">import com.facebook.react.bridge.ReactContextBaseJavaModule;</span><br><span class="line">import com.facebook.react.bridge.ReactMethod;</span><br><span class="line">import com.facebook.react.bridge.ReadableArray;</span><br><span class="line">import com.facebook.react.bridge.ReadableMap;</span><br><span class="line">import com.facebook.react.bridge.WritableMap;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.net.URL;</span><br><span class="line">import java.nio.channels.Channels;</span><br><span class="line">import java.nio.channels.ReadableByteChannel;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see &lt;a href=&quot;https://developer.android.com/guide/topics/providers/document-provider.html&quot;&gt;android documentation&lt;/a&gt;</span><br><span class="line"> * marvin.ma use for production</span><br><span class="line"> */</span><br><span class="line">public class DocumentPicker extends ReactContextBaseJavaModule implements ActivityEventListener &#123;</span><br><span class="line">    private static final String NAME = &quot;RNDocumentPicker&quot;;</span><br><span class="line">    private static final int READ_REQUEST_CODE = 41;</span><br><span class="line">    private Context mContex;</span><br><span class="line"></span><br><span class="line">    private static class Fields &#123;</span><br><span class="line">        private static final String FILE_SIZE = &quot;fileSize&quot;;</span><br><span class="line">        private static final String FILE_NAME = &quot;fileName&quot;;</span><br><span class="line">        private static final String TYPE = &quot;type&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Callback callback;</span><br><span class="line"></span><br><span class="line">    public DocumentPicker(ReactApplicationContext reactContext) &#123;</span><br><span class="line">        super(reactContext);</span><br><span class="line">        this.mContex = reactContext;</span><br><span class="line">        reactContext.addActivityEventListener(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return NAME;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @ReactMethod</span><br><span class="line">    public void show(ReadableMap args, Callback callback) &#123;</span><br><span class="line">        Intent intent;</span><br><span class="line">        if (android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">            intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            intent = new Intent(Intent.ACTION_PICK);</span><br><span class="line">        &#125;</span><br><span class="line">        intent.addCategory(Intent.CATEGORY_OPENABLE);</span><br><span class="line"></span><br><span class="line">        if (!args.isNull(&quot;filetype&quot;)) &#123;</span><br><span class="line">            ReadableArray filetypes = args.getArray(&quot;filetype&quot;);</span><br><span class="line">            if (filetypes.size() &gt; 0) &#123;</span><br><span class="line">                intent.setType(filetypes.getString(0));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        this.callback = callback;</span><br><span class="line"></span><br><span class="line">        getReactApplicationContext().startActivityForResult(intent, READ_REQUEST_CODE, Bundle.EMPTY);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // removed @Override temporarily just to get it working on RN0.33 and RN0.32 - will remove</span><br><span class="line">    public void onActivityResult(Activity activity, int requestCode, int resultCode, Intent data) &#123;</span><br><span class="line">        onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // removed @Override temporarily just to get it working on RN0.33 and RN0.32</span><br><span class="line">    public void onActivityResult(int requestCode, int resultCode, Intent data) &#123;</span><br><span class="line">        if (requestCode != READ_REQUEST_CODE)</span><br><span class="line">            return;</span><br><span class="line"></span><br><span class="line">        if (resultCode != Activity.RESULT_OK) &#123;</span><br><span class="line">            callback.invoke(&quot;Bad result code: &quot; + resultCode, null);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (data == null) &#123;</span><br><span class="line">            callback.invoke(&quot;No data&quot;, null);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            Uri uri = data.getData();</span><br><span class="line">            callback.invoke(null, toMapWithMetadata(uri));</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            Log.e(NAME, &quot;Failed to read&quot;, e);</span><br><span class="line">            callback.invoke(e.getMessage(), null);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private WritableMap toMapWithMetadata(Uri uri) &#123;</span><br><span class="line">        WritableMap map;</span><br><span class="line">        if(uri.toString().startsWith(&quot;/&quot;)) &#123;</span><br><span class="line">            map = metaDataFromFile(new File(uri.toString()));</span><br><span class="line">        &#125; else if (uri.toString().startsWith(&quot;http&quot;)) &#123;</span><br><span class="line">            map = metaDataFromUri(uri);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            map = metaDataFromContentResolver(uri);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        map.putString(&quot;uri&quot;, uri.toString());</span><br><span class="line">        if(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT)&#123;</span><br><span class="line">            map.putString(&quot;filePath&quot;, getPath(mContex, uri));</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            map.putString(&quot;filePath&quot;, uri2Path(mContex, uri));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private WritableMap metaDataFromUri(Uri uri) &#123;</span><br><span class="line">        WritableMap map = Arguments.createMap();</span><br><span class="line"></span><br><span class="line">        File outputDir = getReactApplicationContext().getCacheDir();</span><br><span class="line">        try &#123;</span><br><span class="line">            File downloaded = download(uri, outputDir);</span><br><span class="line"></span><br><span class="line">            map.putInt(Fields.FILE_SIZE, (int) downloaded.length());</span><br><span class="line">            map.putString(Fields.FILE_NAME, downloaded.getName());</span><br><span class="line">            map.putString(Fields.TYPE, mimeTypeFromName(uri.toString()));</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            Log.e(&quot;DocumentPicker&quot;, &quot;Failed to download file&quot;, e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private WritableMap metaDataFromFile(File file) &#123;</span><br><span class="line">        WritableMap map = Arguments.createMap();</span><br><span class="line"></span><br><span class="line">        if(!file.exists())</span><br><span class="line">            return map;</span><br><span class="line"></span><br><span class="line">        map.putInt(Fields.FILE_SIZE, (int) file.length());</span><br><span class="line">        map.putString(Fields.FILE_NAME, file.getName());</span><br><span class="line">        map.putString(Fields.TYPE, mimeTypeFromName(file.getAbsolutePath()));</span><br><span class="line"></span><br><span class="line">        return map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private WritableMap metaDataFromContentResolver(Uri uri) &#123;</span><br><span class="line">        WritableMap map = Arguments.createMap();</span><br><span class="line"></span><br><span class="line">        ContentResolver contentResolver = getReactApplicationContext().getContentResolver();</span><br><span class="line"></span><br><span class="line">        map.putString(Fields.TYPE, contentResolver.getType(uri));</span><br><span class="line"></span><br><span class="line">        Cursor cursor = contentResolver.query(uri, null, null, null, null, null);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            if (cursor != null &amp;&amp; cursor.moveToFirst()) &#123;</span><br><span class="line"></span><br><span class="line">                map.putString(Fields.FILE_NAME, cursor.getString(cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME)));</span><br><span class="line"></span><br><span class="line">                int sizeIndex = cursor.getColumnIndex(OpenableColumns.SIZE);</span><br><span class="line">                if (!cursor.isNull(sizeIndex)) &#123;</span><br><span class="line">                    String size = cursor.getString(sizeIndex);</span><br><span class="line">                    if (size != null)</span><br><span class="line">                        map.putInt(Fields.FILE_SIZE, Integer.valueOf(size));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (cursor != null) &#123;</span><br><span class="line">                cursor.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static File download(Uri uri, File outputDir) throws IOException &#123;</span><br><span class="line">        File file = File.createTempFile(&quot;prefix&quot;, &quot;extension&quot;, outputDir);</span><br><span class="line"></span><br><span class="line">        URL url = new URL(uri.toString());</span><br><span class="line"></span><br><span class="line">        ReadableByteChannel channel = Channels.newChannel(url.openStream());</span><br><span class="line">        try&#123;</span><br><span class="line">            FileOutputStream stream = new FileOutputStream(file);</span><br><span class="line"></span><br><span class="line">            try &#123;</span><br><span class="line">                stream.getChannel().transferFrom(channel, 0, Long.MAX_VALUE);</span><br><span class="line">                return file;</span><br><span class="line">            &#125; finally &#123;</span><br><span class="line">                stream.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            channel.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static String mimeTypeFromName(String absolutePath) &#123;</span><br><span class="line">        String extension = MimeTypeMap.getFileExtensionFromUrl(absolutePath);</span><br><span class="line">        if (extension != null) &#123;</span><br><span class="line">            return MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Required for RN 0.30+ modules than implement ActivityEventListener</span><br><span class="line">    public void onNewIntent(Intent intent) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 专为Android4.4以上设计的从Uri获取文件路径</span><br><span class="line">     */</span><br><span class="line">    public static String getPath(final Context context, final Uri uri) &#123;</span><br><span class="line"></span><br><span class="line">        final boolean isKitKat = Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT;</span><br><span class="line"></span><br><span class="line">        // DocumentProvider</span><br><span class="line">        if (isKitKat &amp;&amp; DocumentsContract.isDocumentUri(context, uri)) &#123;</span><br><span class="line">            // ExternalStorageProvider</span><br><span class="line">            if (isExternalStorageDocument(uri)) &#123;</span><br><span class="line"></span><br><span class="line">//                LogUtils.logInfoStar(&quot;isExternalStorageDocument&quot;);</span><br><span class="line">                final String docId = DocumentsContract.getDocumentId(uri);</span><br><span class="line">                final String[] split = docId.split(&quot;:&quot;);</span><br><span class="line">                final String type = split[0];</span><br><span class="line"></span><br><span class="line">                if (&quot;primary&quot;.equalsIgnoreCase(type)) &#123;</span><br><span class="line">                    return Environment.getExternalStorageDirectory() + &quot;/&quot; + split[1];</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // TODO handle non-primary volumes</span><br><span class="line">            &#125;</span><br><span class="line">            // DownloadsProvider</span><br><span class="line">            else if (isDownloadsDocument(uri)) &#123;</span><br><span class="line">//                LogUtils.logInfoStar(&quot;isDownloadsDocument&quot;);</span><br><span class="line">                final String id = DocumentsContract.getDocumentId(uri);</span><br><span class="line">                final Uri contentUri = ContentUris.withAppendedId(</span><br><span class="line">                        Uri.parse(&quot;content://downloads/public_downloads&quot;), Long.valueOf(id));</span><br><span class="line"></span><br><span class="line">                return getDataColumn(context, contentUri, null, null);</span><br><span class="line">            &#125;</span><br><span class="line">            // MediaProvider</span><br><span class="line">            else if (isMediaDocument(uri)) &#123;</span><br><span class="line">//                LogUtils.logInfoStar(&quot;isMediaDocument&quot;);</span><br><span class="line">                final String docId = DocumentsContract.getDocumentId(uri);</span><br><span class="line">                final String[] split = docId.split(&quot;:&quot;);</span><br><span class="line">                final String type = split[0];</span><br><span class="line"></span><br><span class="line">                Uri contentUri = null;</span><br><span class="line">                if (&quot;image&quot;.equals(type)) &#123;</span><br><span class="line">                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;</span><br><span class="line">                &#125; else if (&quot;video&quot;.equals(type)) &#123;</span><br><span class="line">                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;</span><br><span class="line">                &#125; else if (&quot;audio&quot;.equals(type)) &#123;</span><br><span class="line">                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                final String selection = &quot;_id=?&quot;;</span><br><span class="line">                final String[] selectionArgs = new String[]&#123;split[1]&#125;;</span><br><span class="line"></span><br><span class="line">                return getDataColumn(context, contentUri, selection, selectionArgs);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // MediaStore (and general)</span><br><span class="line">        else if (&quot;content&quot;.equalsIgnoreCase(uri.getScheme())) &#123;</span><br><span class="line">            return getDataColumn(context, uri, null, null);</span><br><span class="line">        &#125;</span><br><span class="line">        // File</span><br><span class="line">        else if (&quot;file&quot;.equalsIgnoreCase(uri.getScheme())) &#123;</span><br><span class="line">            return uri.getPath();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Get the value of the data column for this Uri. This is useful for</span><br><span class="line">     * MediaStore Uris, and other file-based ContentProviders.</span><br><span class="line">     *</span><br><span class="line">     * @param context       The context.</span><br><span class="line">     * @param uri           The Uri to query.</span><br><span class="line">     * @param selection     (Optional) Filter used in the query.</span><br><span class="line">     * @param selectionArgs (Optional) Selection arguments used in the query.</span><br><span class="line">     * @return The value of the _data column, which is typically a file path.</span><br><span class="line">     */</span><br><span class="line">    public static String getDataColumn(Context context, Uri uri, String selection,</span><br><span class="line">                                       String[] selectionArgs) &#123;</span><br><span class="line"></span><br><span class="line">        Cursor cursor = null;</span><br><span class="line">        final String column = &quot;_data&quot;;</span><br><span class="line">        final String[] projection = &#123;column&#125;;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,</span><br><span class="line">                    null);</span><br><span class="line">            if (cursor != null &amp;&amp; cursor.moveToFirst()) &#123;</span><br><span class="line">                final int column_index = cursor.getColumnIndexOrThrow(column);</span><br><span class="line">                return cursor.getString(column_index);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (cursor != null)</span><br><span class="line">                cursor.close();</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @param uri The Uri to check.</span><br><span class="line">     * @return Whether the Uri authority is ExternalStorageProvider.</span><br><span class="line">     */</span><br><span class="line">    public static boolean isExternalStorageDocument(Uri uri) &#123;</span><br><span class="line">        return &quot;com.android.externalstorage.documents&quot;.equals(uri.getAuthority());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @param uri The Uri to check.</span><br><span class="line">     * @return Whether the Uri authority is DownloadsProvider.</span><br><span class="line">     */</span><br><span class="line">    public static boolean isDownloadsDocument(Uri uri) &#123;</span><br><span class="line">        return &quot;com.android.providers.downloads.documents&quot;.equals(uri.getAuthority());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @param uri The Uri to check.</span><br><span class="line">     * @return Whether the Uri authority is MediaProvider.</span><br><span class="line">     */</span><br><span class="line">    public static boolean isMediaDocument(Uri uri) &#123;</span><br><span class="line">        return &quot;com.android.providers.media.documents&quot;.equals(uri.getAuthority());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Try to return the absolute file path from the given Uri</span><br><span class="line">     *</span><br><span class="line">     * @param context</span><br><span class="line">     * @param uri</span><br><span class="line">     * @return the file path or null</span><br><span class="line">     */</span><br><span class="line">    public static String uri2Path(final Context context, final Uri uri) &#123;</span><br><span class="line">        if (null == uri) return null;</span><br><span class="line">        final String scheme = uri.getScheme();</span><br><span class="line">        String data = null;</span><br><span class="line">        if (scheme == null)</span><br><span class="line">            data = uri.getPath();</span><br><span class="line">        else if (ContentResolver.SCHEME_FILE.equals(scheme)) &#123;</span><br><span class="line">            data = uri.getPath();</span><br><span class="line">        &#125; else if (ContentResolver.SCHEME_CONTENT.equals(scheme)) &#123;</span><br><span class="line">            Cursor cursor = context.getContentResolver().query(uri, new String[]&#123;MediaStore.Images.ImageColumns.DATA&#125;, null, null, null);</span><br><span class="line">            if (null != cursor) &#123;</span><br><span class="line">                if (cursor.moveToFirst()) &#123;</span><br><span class="line">                    int index = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);</span><br><span class="line">                    if (index == -1) &#123;</span><br><span class="line">                        index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);</span><br><span class="line">                    &#125;</span><br><span class="line">                    if (index &gt; -1) &#123;</span><br><span class="line">                        data = cursor.getString(index);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                cursor.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>5、使用命令unzip -l wuliuxj20181010.zip检查物流等js bundle文件内容是否正确，需要有子文件夹。</p><p>6、替换图标：</p><p>\Portal\android\app\src\main\AndroidManifest.xml</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-297dcef05935b66f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>7、放开热更</p><p>Portal\index.js，确保这行代码没被注释掉</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-efbc80393fa9d43a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>8、修改BTC通知、请示报告单等HTML的位置为正式的。  </p><p>9、打包</p><p>keystore  在这个路径下</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-b2ba8eb6f650cea7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>**</strong>这是密码</p><h2 id="新版发出前内测检查事项"><a href="#新版发出前内测检查事项" class="headerlink" title="新版发出前内测检查事项"></a>新版发出前内测检查事项</h2><p>1、所有地址是不是生产的<br>  1.1、 登录<br>  1.2、水站<br>  1.3、IM系统<br>  1.4、会议室预订<br>  1.5、BTB/BTC</p><p>2、常用功能正常<br>  2.1、启动<br>  2.2、登录<br>  2.3、日程，列表，创建会议/任务，能添加附件<br>  2.4、直播<br>  2.5、BTC/BTB/巡检能打开，首次加载有进度条，能下载<br>  2.6、我的团队，列表正常，能创建团队<br>  2.7、IM登录正常，能聊天，视频，白版协同<br>  2.8、可以检查更新</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react-native </tag>
            
            <tag> android </tag>
            
            <tag> package </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux 安装maven私服</title>
      <link href="/2018/09/02/Linux%20%E5%AE%89%E8%A3%85maven%E7%A7%81%E6%9C%8D/"/>
      <url>/2018/09/02/Linux%20%E5%AE%89%E8%A3%85maven%E7%A7%81%E6%9C%8D/</url>
      
        <content type="html"><![CDATA[<p>开发环境搭建—安装maven私服<br><a href="https://www.jianshu.com/p/06c1ca9052eb" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><h3 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h3><p>通过此<a href="https://www.sonatype.com/oss-thank-you-tar.gz" target="_blank" rel="noopener">地址</a>下载需要的版本</p><p>安装下载好nexus3.9最新版后解压，copy到/usr/local/nexus/目录下然后修改端口等配置。</p><h3 id="2、修改配置"><a href="#2、修改配置" class="headerlink" title="2、修改配置"></a>2、修改配置</h3><p>2.1、启动。以3.6.0为例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv ~]# cd /usr/local/nexus-3.6.0-02/bin/</span><br><span class="line">[root@MiWiFi-R3-srv ~]# ./nexus run &amp;</span><br></pre></td></tr></table></figure></p><p>稍等一会(首次启动会比较慢),当出现以下日志的时候表示启动成功!</p><blockquote><p>Started Sonatype Nexus OSS 3.6.0-02</p></blockquote><p>2.2、开启远程访问端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv bin]# firewall-cmd --zone=public --add-port=8081/tcp --permanent</span><br><span class="line">[root@MiWiFi-R3-srv bin]# firewall-cmd --reload</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-af61217d7c179028.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><blockquote><p>nexus3默认端口是:8081<br>nexus3默认账号是:admin<br>nexus3默认密码是:admin123</p></blockquote><p>2.3、设置开机自启动(systemctl方式)<br>创建一个服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv ~]# vim /usr/lib/systemd/system/nexus.service</span><br></pre></td></tr></table></figure></p><p>填入相关内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nexus service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">LimitNOFILE=65536 #警告处理</span><br><span class="line">ExecStart=/usr/local/nexus/nexus-3.7.1-02/bin/nexus start</span><br><span class="line">ExecReload=/usr/local/nexus/nexus-3.7.1-02/bin/nexus restart</span><br><span class="line">ExecStop=/usr/local/nexus/nexus-3.7.1-02/bin/nexus stop</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>将服务加入开机启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv ~]# systemctl enable nexus.service</span><br></pre></td></tr></table></figure></p><p>重新加载配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv ~]# systemctl daemon-reload</span><br></pre></td></tr></table></figure></p><p>2.4、修改nexus3的运行用户为root<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv bin]# vim nexus.rc</span><br><span class="line"></span><br><span class="line">run_as_user=&quot;root&quot;</span><br></pre></td></tr></table></figure></p><p>2.5、修改nexus3启动时要使用的jdk版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv bin]# vim nexus</span><br></pre></td></tr></table></figure></p><p>第14行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INSTALL4J_JAVA_HOME_OVERRIDE=/usr/local/java/jdk1.8.0_144</span><br></pre></td></tr></table></figure></p><p>2.6、修改nexus3默认端口(可选)<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv etc]# cd /usr/local/nexus-3.6.0-02/etc/</span><br><span class="line">[root@MiWiFi-R3-srv etc]# vim nexus-default.properties</span><br></pre></td></tr></table></figure></p><p>默认端口:8081<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">application-port=8081</span><br></pre></td></tr></table></figure></p><p>2.7、修改nexus3数据以及相关日志的存储位置(可选)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@MiWiFi-R3-srv bin]# cd /usr/local/nexus-3.6.0-02/bin/</span><br><span class="line">[root@MiWiFi-R3-srv bin]# vim nexus.vmoptions </span><br><span class="line"></span><br><span class="line">-XX:LogFile=./sonatype-work/nexus3/log/jvm.log</span><br><span class="line">-Dkaraf.data=./sonatype-work/nexus3</span><br><span class="line">-Djava.io.tmpdir=./sonatype-work/nexus3/tmp</span><br></pre></td></tr></table></figure></p><h3 id="3、上传外部jar文件"><a href="#3、上传外部jar文件" class="headerlink" title="3、上传外部jar文件"></a>3、上传外部jar文件</h3><p>3.1、创建仓库<br><img src="https://upload-images.jianshu.io/upload_images/4109786-01a4b3206506b4e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>3.2、上传jar<br><img src="https://upload-images.jianshu.io/upload_images/4109786-b18e364e8e8677a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>3.3、最最最重要的一步：将新创建的3rdParty加入到public对外公布的group下<br><img src="https://upload-images.jianshu.io/upload_images/4109786-f87fde0566ba6175.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="4、配置本地maven的pom文件"><a href="#4、配置本地maven的pom文件" class="headerlink" title="4、配置本地maven的pom文件"></a>4、配置本地maven的pom文件</h3><p>4.1、全局修改maven配置文件的setting.xml配置文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;profiles&gt;</span><br><span class="line"></span><br><span class="line">&lt;profile&gt;</span><br><span class="line">&lt;id&gt;dev&lt;/id&gt;</span><br><span class="line">&lt;repositories&gt;</span><br><span class="line">&lt;repository&gt; </span><br><span class="line">&lt;id&gt;central&lt;/id&gt; </span><br><span class="line">&lt;url&gt;http://jenkins.haier.haiqiang.xin:8887/repository/maven-public/&lt;/url&gt;</span><br><span class="line">&lt;name&gt;Yuandian Maven Repo&lt;/name&gt; </span><br><span class="line">&lt;/repository&gt;</span><br><span class="line"> &lt;repository&gt;</span><br><span class="line">          &lt;id&gt;mvn-repo&lt;/id&gt;</span><br><span class="line">          &lt;url&gt;http://jenkins.haier.haiqiang.xin:8887/repository/maven-public/&lt;/url&gt;</span><br><span class="line">      &lt;/repository&gt;</span><br><span class="line">&lt;/repositories&gt;</span><br><span class="line">&lt;pluginRepositories&gt;  </span><br><span class="line">       &lt;pluginRepository&gt;  </span><br><span class="line">           &lt;id&gt;nexus&lt;/id&gt;  </span><br><span class="line">           &lt;name&gt;nexus&lt;/name&gt;  </span><br><span class="line">&lt;url&gt;http://jenkins.haier.haiqiang.xin:8887/repository/maven-public/&lt;/url&gt;</span><br><span class="line">           &lt;releases&gt;  </span><br><span class="line">               &lt;enabled&gt;true&lt;/enabled&gt;  </span><br><span class="line">           &lt;/releases&gt;  </span><br><span class="line">           &lt;snapshots&gt;  </span><br><span class="line">               &lt;enabled&gt;true&lt;/enabled&gt;  </span><br><span class="line">           &lt;/snapshots&gt;  </span><br><span class="line">       &lt;/pluginRepository&gt;  </span><br><span class="line">   &lt;/pluginRepositories&gt;</span><br><span class="line">&lt;/profile&gt;</span><br><span class="line"></span><br><span class="line"> &lt;/profiles&gt;</span><br></pre></td></tr></table></figure></p><p>4.2、在项目中使用私服，修改maven的pom文件，加入repository的配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;repositories&gt;</span><br><span class="line">    &lt;repository&gt;</span><br><span class="line">        &lt;id&gt;nexus&lt;/id&gt;</span><br><span class="line">        &lt;name&gt;Team Nexus Repository&lt;/name&gt;</span><br><span class="line">        &lt;url&gt;http://27.223.70.82:8887/repository/maven-public/&lt;/url&gt;</span><br><span class="line">        &lt;layout&gt;default&lt;/layout&gt;</span><br><span class="line">        &lt;releases&gt;</span><br><span class="line">            &lt;enabled&gt;true&lt;/enabled&gt;</span><br><span class="line">        &lt;/releases&gt;</span><br><span class="line">        &lt;snapshots&gt;</span><br><span class="line">            &lt;enabled&gt;false&lt;/enabled&gt;</span><br><span class="line">        &lt;/snapshots&gt;</span><br><span class="line">    &lt;/repository&gt;</span><br><span class="line">&lt;/repositories&gt;</span><br><span class="line">&lt;pluginRepositories&gt;</span><br><span class="line">    &lt;pluginRepository&gt;</span><br><span class="line">    &lt;id&gt;nexus&lt;/id&gt;</span><br><span class="line">    &lt;name&gt;Team Nexus Repository&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http://27.223.70.82:8887/repository/maven-public/&lt;/url&gt;</span><br><span class="line">    &lt;/pluginRepository&gt;</span><br><span class="line">&lt;/pluginRepositories&gt;</span><br></pre></td></tr></table></figure></p><p>结束。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/yougoule/article/details/56843562" target="_blank" rel="noopener">https://blog.csdn.net/yougoule/article/details/56843562</a> </p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows10 上浅尝vue js好记性不如烂笔头之一</title>
      <link href="/2018/09/02/windows-vuejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
      <url>/2018/09/02/windows-vuejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<p>vuejs学习笔记—-vue安装、数据初始化、数据mock<br><a href="https://www.jianshu.com/p/a16bc309c7fd" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>说实话，在windows配置前端不是不可以，但是确实比用mac麻烦多了（说的好像我是mac老手似的，其实只是有几个月的使用经验而已），曾记得，当年搞react-native环境就是这样，搞python环境也是一样，再到如今想搞vue，还是这样。</p><p>不过也不是不可能，只要你愿意折腾，不放弃（其实是买不起mac）。</p><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>1、安装node，到今天（2018-09-10教师节），node最新版是10.8了，但是因为几个月前搞过vue，安装的node是8.6.0，今天升级以后反而连vue init都不能用了，所以不得已回退到8.6.0，所以还是使用稳定版比较稳妥。直接到<a href="https://npm.taobao.org/mirrors/node/" target="_blank" rel="noopener">官网</a>下载si文件下一步下一步傻瓜式安装即可。</p><p>2、安装webpack<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g webpack</span><br></pre></td></tr></table></figure></p><p>3、安装vue-cli<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g vue-cli</span><br></pre></td></tr></table></figure></p><p>4、初始化项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vue init webpack demo</span><br></pre></td></tr></table></figure></p><p>5、运行项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br><span class="line">$ npm run dev</span><br></pre></td></tr></table></figure></p><p>默认访问端口是8080，访问即可<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a3eb434d89fd24a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="使用json-server模拟REST-API"><a href="#使用json-server模拟REST-API" class="headerlink" title="使用json-server模拟REST API"></a>使用json-server模拟REST API</h3><p>因为是学习，老老实实写后端接口，再给前端调用，确实有些头重脚轻，我选择了json-server用来mock数据。</p><ul><li><p>安装服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install json-server -g</span><br></pre></td></tr></table></figure></li><li><p>创建文件<br>在项目根目录新建/mock文件夹，并且在mock目录下新建db.json文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;list&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: 1,</span><br><span class="line">        &quot;name&quot;: &quot;张三&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;15223810923&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: 2,</span><br><span class="line">        &quot;name&quot;: &quot;李四&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;15223810923&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: 3,</span><br><span class="line">        &quot;name&quot;: &quot;王二&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;15223810923&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: 4,</span><br><span class="line">        &quot;name&quot;: &quot;陈五&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;15223810923&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;name&quot;: &quot;赵六&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;123454323&quot;,</span><br><span class="line">        &quot;id&quot;: 5</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;name&quot;: &quot;赵六&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;123454323&quot;,</span><br><span class="line">        &quot;id&quot;: 6</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;name&quot;: &quot;赵六&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;123454323&quot;,</span><br><span class="line">        &quot;id&quot;: 7</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;users&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: 1,</span><br><span class="line">        &quot;name&quot;: &quot;陈五&quot;,</span><br><span class="line">        &quot;sex&quot;:&quot;male&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;12345678&quot;,</span><br><span class="line">        &quot;auther&quot;:&#123;</span><br><span class="line">          &quot;name&quot;:&quot;陈五&quot;,</span><br><span class="line">          &quot;age&quot;:&quot;25&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: 2,</span><br><span class="line">        &quot;name&quot;: &quot;王二&quot;,</span><br><span class="line">        &quot;sex&quot;:&quot;male&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;15223810923&quot;,</span><br><span class="line">        &quot;auther&quot;:&#123;</span><br><span class="line">          &quot;name&quot;:&quot;王二&quot;,</span><br><span class="line">          &quot;age&quot;:&quot;22&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;user&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 1,</span><br><span class="line">        &quot;name&quot;: &quot;陈五&quot;,</span><br><span class="line">        &quot;tel&quot;: &quot;15223810923&quot;</span><br><span class="line">      &#125;</span><br><span class="line">      ,</span><br><span class="line">    &quot;posts&quot;: [</span><br><span class="line">      &#123; &quot;id&quot;: 1, &quot;title&quot;: &quot;json-server&quot;, &quot;author&quot;: &quot;typicode&quot; &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;comments&quot;: [</span><br><span class="line">      &#123; &quot;id&quot;: 1, &quot;body&quot;: &quot;some comment&quot;, &quot;postId&quot;: 1 &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;profile&quot;: &#123; &quot;name&quot;: &quot;typicode&quot; &#125;,</span><br><span class="line">     &quot;goods&quot;: &#123;</span><br><span class="line">        &quot;data&quot; :[</span><br><span class="line">        &#123; &quot;price&quot;: &quot;69.9&quot;, &quot;title&quot;: &quot;德芙&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s211x211_jfs/t3688/270/776223567/128582/fa074fb3/58170f6dN6b9a12bf.jpg!q50.jpg.webp&quot; &#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;63&quot;, &quot;title&quot;: &quot;费列罗&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s211x211_jfs/t613/100/1264998035/221234/1a29d51f/54c34525Nb4f6581c.jpg!q50.jpg.webp&quot;&#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;29.9&quot;, &quot;title&quot;: &quot;大米&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s211x211_jfs/t1258/40/17387560/108696/aced445f/54e011deN3ae867ae.jpg!q50.jpg.webp&quot;&#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;54.9&quot;, &quot;title&quot;: &quot;安慕希&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s211x211_jfs/t2734/15/680373407/215934/3abaa748/572057daNc09b5da7.jpg!q50.jpg.webp&quot;&#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;58&quot;, &quot;title&quot;: &quot;金典&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s211x211_jfs/t2482/145/1424008556/91991/d62f5454/569f47a2N3f763060.jpg!q50.jpg.webp&quot;&#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;60&quot;, &quot;title&quot;: &quot;味可滋&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s211x211_jfs/t2368/3/874563950/70786/7b5e8edd/563074c8N4d535db4.jpg!q50.jpg.webp&quot; &#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;248.00&quot;, &quot;title&quot;: &quot;泸州老窖&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s211x211_jfs/t283/166/1424018055/189580/7c0792b7/543b4958N05fa2feb.jpg!q50.jpg.webp&quot;&#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;328.8&quot;, &quot;title&quot;: &quot;剑南春&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s350x350_g15/M05/1A/0A/rBEhWlNeLAwIAAAAAAHyok3PZY0AAMl8gO8My0AAfK6307.jpg!q50.jpg.webp&quot;&#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;49.00&quot;, &quot;title&quot;: &quot;蓝莓&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/babel/s211x211_jfs/t2332/148/2952098628/94387/e64654e2/56f8d76aNb088c2ab.jpg!q50.jpg.webp&quot; &#125;,</span><br><span class="line">        &#123; &quot;price&quot;: &quot;68&quot;, &quot;title&quot;: &quot;芒果&quot;, &quot;img&quot;: &quot;http://m.360buyimg.com/n0/jfs/t3709/334/1378702984/206759/5c100ab5/58253588Naaa05c5c.jpg!q70.jpg&quot;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>运行json-server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json-server db.json -p 8080</span><br></pre></td></tr></table></figure></li></ul><p>指定rest api在8080端口上运行，使用<a href="http://127.0.0.1:8080/goods/查看。" target="_blank" rel="noopener">http://127.0.0.1:8080/goods/查看。</a></p><ul><li>快捷启动<br>为了方便，再创建一个 package.json 文件，写入<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;mock&quot;: &quot;json-server db.json --port 3003&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>然后使用到 /mock 目录下执行 npm run mock 命令，如果成功会出现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ npm run mock</span><br><span class="line"></span><br><span class="line">&gt; @ mock D:\Git\demo\vue\demo\mock</span><br><span class="line">&gt; json-server db.json --port 8080</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  \&#123;^_^&#125;/ hi!</span><br><span class="line"></span><br><span class="line">  Loading db.json</span><br><span class="line">  Done</span><br><span class="line"></span><br><span class="line">  Resources</span><br><span class="line">  http://localhost:8080/list</span><br><span class="line">  http://localhost:8080/users</span><br><span class="line">  http://localhost:8080/user</span><br><span class="line">  http://localhost:8080/posts</span><br><span class="line">  http://localhost:8080/comments</span><br><span class="line">  http://localhost:8080/profile</span><br><span class="line">  http://localhost:8080/goods</span><br><span class="line"></span><br><span class="line">  Home</span><br><span class="line">  http://localhost:8080</span><br></pre></td></tr></table></figure></p><p>如果不成功请检查 db.json 文件的格式是否正确。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-c06d3b4ab1951900.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="api.png"></p><ul><li>使用本地api<br>代码：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">created () &#123;   /* 这个是vue的钩子函数，当new Vue()实例创建完毕后执行的函数 */</span><br><span class="line">    const Http = new Vue;</span><br><span class="line">    this.$http.get(&apos;http://127.0.0.1:8080/goods&apos;).then((data) =&gt; &#123;   /* 调用vue的ajax来请求数据，promise语法，并用es6的箭头函数 */</span><br><span class="line">      console.log(&apos;===================================&apos;)</span><br><span class="line">      console.log(data);</span><br><span class="line">      console.log(&apos;===================================&apos;)</span><br><span class="line">      this.items = data.body.data;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>但是这样操作会报错,错误如下：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-9d1db669c82ab3b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="errorage.png"><br>这是因为没有引入vue-resource导致的，可以参考<a href="https://blog.csdn.net/weixin_39581226/article/details/80682132" target="_blank" rel="noopener">Cannot read property ‘get’ of undefined” in vuejs</a>和<a href="https://segmentfault.com/q/1010000006984096/a-1020000006985045" target="_blank" rel="noopener">vue引入vue-resource无法使用$http.get</a>。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-2ba83f83ce900744.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="vue-resource.png"></p><p>最终实现的效果如图：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-ebd51623e83f04e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="goods"></p><p>核心参考文档：<a href="https://www.jianshu.com/p/7c5ccfac3fa8" target="_blank" rel="noopener">https://www.jianshu.com/p/7c5ccfac3fa8</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/itfantasy/p/6043111.html" target="_blank" rel="noopener">https://www.cnblogs.com/itfantasy/p/6043111.html</a><br><a href="https://blog.csdn.net/sinat_17775997/article/details/77824878" target="_blank" rel="noopener">https://blog.csdn.net/sinat_17775997/article/details/77824878</a></p><h2 id="视频和源码"><a href="#视频和源码" class="headerlink" title="视频和源码"></a>视频和源码</h2><p>视频共享：<br>链接: <a href="https://pan.baidu.com/s/18TFC0-VSCIWFo977p4YcTQ" target="_blank" rel="noopener">https://pan.baidu.com/s/18TFC0-VSCIWFo977p4YcTQ</a><br>提取码: rjcp </p><p>源代码共享：<br><a href="https://gitee.com/marvinma/vue2-pc" target="_blank" rel="noopener">https://gitee.com/marvinma/vue2-pc</a></p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows10 上浅尝vue js好记性不如烂笔头之二</title>
      <link href="/2018/09/02/windows-vuejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
      <url>/2018/09/02/windows-vuejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<p>vuejs学习笔记—-父子组件传值、动态组件、自定义组件、vue-router、vue-link、state<br><a href="https://www.jianshu.com/p/a16bc309c7fd" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>本片是看视频记录零碎知识点<br>1、使用mustache输出内容时将输入框输入的内容做处理，使用计算属性，不需要使用监听等功能实现。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">        return  &#123;</span><br><span class="line">           myValue : &apos;&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">         checkData () &#123;</span><br><span class="line">             this.myValue.replace(/\d/g, &apos;&apos;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用的地方<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;myValue&quot;&gt;</span><br><span class="line">&#123;&#123; checkData &#125;&#125;</span><br></pre></td></tr></table></figure></p><p>想实现的就是在input输入框输入内容时，后面只显示字母，遇数字相当于隐藏。</p><p>当然，还有一种实现方式，就是在methods里写个方法，同时在input后面使用数据检查方法来实现。</p><p>那么，这两种方式有什么区别呢？哪种更推荐呢？</p><p>推荐第一种。</p><p>2、 父子组件间传值，在vue2.0以上版本，父子组件传值方式如下<br><img src="https://upload-images.jianshu.io/upload_images/4109786-38d05cef41ed911b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="父子组件传值.png"></p><p>举例，父组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;!-- 参数不区分大小写，也就是最好不要使用驼峰命名，用中线链接即可 --&gt;</span><br><span class="line">        &lt;!-- 传固定值  --&gt;</span><br><span class="line">        &lt;!-- &lt;com-a number-to-do=78&gt;&lt;/com-a&gt;   --&gt;</span><br><span class="line">        &lt;!-- 动态传值 --&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; v-model=&quot;myVal&quot;&gt;</span><br><span class="line">        &lt;com-a :my-value = &quot;myVal&quot; @my-event=&quot;getMyEvent&quot;&gt;</span><br><span class="line">            &lt;p slot=&quot;header&quot;&gt;xxxxx header&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;1、sloat 使用插槽的方式用来将子组件里的内容插入到父组件中。还可以设定默认值&lt;/p&gt;</span><br><span class="line">            &lt;p&gt;2、插槽内容比较多的话，可以使用命名的方式指定个字要处理的插槽数据&lt;/p&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;p slot=&quot;footer&quot;&gt;xxxxx footer&lt;/p&gt;</span><br><span class="line">        &lt;/com-a&gt;</span><br><span class="line">        &lt;p :is=&quot;currentView&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;    </span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import ComA from &apos;../components/comA&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">        ComA</span><br><span class="line">    &#125;,</span><br><span class="line">    data () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            currentView: &apos;com-a&apos;,</span><br><span class="line">            myVal : &quot;&quot;,</span><br><span class="line">            myList: [</span><br><span class="line">                &#123;</span><br><span class="line">                    name:&apos;appale&apos;,</span><br><span class="line">                    price: 2.50</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name:&apos;banaber&apos;,</span><br><span class="line">                    price:8.50</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        getMyEvent(hello) &#123;</span><br><span class="line">            console.log(&apos;I got my event and &apos; + hello)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>子组件接收参数例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;comA&quot;&gt;</span><br><span class="line">        &#123;&#123; hello &#125;&#125;</span><br><span class="line">        &#123;&#123; numberToDo&#125;&#125;</span><br><span class="line">    </span><br><span class="line">    &lt;button @click=&quot;emitMyEvent&quot;&gt;emit&lt;/button&gt;</span><br><span class="line">    &lt;!-- slot中间的内容是slot的默认值 --&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;slot name = &quot;header&quot;&gt;no slot&lt;/slot&gt;</span><br><span class="line">    &lt;slot&gt;no slot&lt;/slot&gt;</span><br><span class="line">    &lt;slot name = &quot;footer&quot;&gt;no slot&lt;/slot&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    // props接收两种类型的参数</span><br><span class="line">    // 一种是数组，一种是对象。对象用的比较多，接收时可以限定类型</span><br><span class="line">    // props: [&apos;number-to-do&apos;],</span><br><span class="line">    props: &#123;</span><br><span class="line">        // &apos;number-to-do&apos;: [Number, String, Object]</span><br><span class="line">        &apos;my-value&apos;: [Number, String, Object]</span><br><span class="line">    &#125;,</span><br><span class="line">    data () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            hello : &quot;I am component A&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods : &#123;</span><br><span class="line">        emitMyEvent () &#123;</span><br><span class="line">            this.$emit(&apos;my-event&apos;, this.hello);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.comA &#123;</span><br><span class="line">    background-color: antiquewhite;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>3、动态组件<br>及在template中动态加载需要的组件的功能，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; v-model=&quot;myVal&quot;&gt;</span><br><span class="line">        &lt;keep-alive&gt;</span><br><span class="line">            &lt;p :is=&quot;currentView&quot;&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/keep-alive&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import ComA from &apos;../components/comA&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">        ComA</span><br><span class="line">    &#125;,</span><br><span class="line">    data () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            currentView: &apos;com-a&apos;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>:is  实现动态组件切换，比如  :is=”currentView” 而在data里给currentView赋值comA。<br>此时可以用keep-alive将组件缓存，比如comA和comB互相切换时会将不显示的内容进行缓存，提高切换时显示速度。</p><p>4、css阶段类名<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a161885b3ee90d0f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">    &lt;button v-on:click=&quot;show = !show&quot;&gt;</span><br><span class="line">            Toggle</span><br><span class="line">      &lt;/button&gt;</span><br><span class="line">        &lt;!-- &lt;p v-color=&quot;&apos;red&apos;&quot;&gt;Hello World&lt;/p&gt; --&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;div class=&quot;ab&quot;&gt;</span><br><span class="line">            &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">                &lt;p v-show=&quot;show&quot;&gt;透明切换效果&lt;/p&gt;</span><br><span class="line">            &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">            &lt;transition name=&quot;my-trans&quot;&gt;</span><br><span class="line">                &lt;p v-show=&quot;show&quot;&gt;上入下出动画&lt;/p&gt;</span><br><span class="line">            &lt;/transition&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.fade-enter-active, .fade-leave-active &#123;</span><br><span class="line">    /* opacity是透明度的意思，如果是所有属性都要transition，要将opacity改成all */</span><br><span class="line">    transition: opacity .5s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.fade-enter, .fade-leave &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.my-trans-enter-active, .my-trans-leave-active &#123;</span><br><span class="line">    transition: all 0.5s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">.my-trans-enter &#123;</span><br><span class="line">    transform: translateY(-500px);</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">.my-trans-leave-active &#123;</span><br><span class="line">    transform: translateY(500px);</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>enter-active前面的名字就是name前面的名字。该处的演示元素用的是p标签，其实可以是一个div，也可以是一个component，实现动态组件过渡。transition 默认的mode是in-out，也可以改成out-in，也就是新的出来的实现和旧的消失的时机问题。</p><p>5、元素/组件进入/离开 &amp; 列表过渡<br><a href="https://cn.vuejs.org/v2/guide/transitions.html" target="_blank" rel="noopener">官网</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-on:click=&quot;show = !show&quot;&gt;</span><br><span class="line">    进入/离开过渡动画 </span><br><span class="line">&lt;/button&gt;</span><br><span class="line">&lt;div class=&quot;ab&quot;&gt;</span><br><span class="line">    &lt;transition </span><br><span class="line">    @before-enter=&quot;beforeEnter&quot;</span><br><span class="line">    @enter=&quot;enter&quot;</span><br><span class="line">    @leave=&quot;leave&quot;</span><br><span class="line">    :css=&quot;false&quot;&gt;</span><br><span class="line">        &lt;p class=&quot;animate-p&quot; v-show=&quot;show&quot;&gt;I am show&lt;/p&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">        getMyEvent(hello) &#123;</span><br><span class="line">            console.log(&apos;I got my event and &apos; + hello)</span><br><span class="line">        &#125;,</span><br><span class="line">        beforeEnter: (el) =&gt; &#123;</span><br><span class="line">            $(el).css(&#123;</span><br><span class="line">                left:&apos;-500px&apos;,</span><br><span class="line">                opacity:0</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        enter: function(el, done) &#123;</span><br><span class="line">            $(el).animate(&#123;</span><br><span class="line">                left:0,</span><br><span class="line">                opacity:1</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                duration: 1500,</span><br><span class="line">                complete: done</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        leave: function(el, done) &#123;</span><br><span class="line">            $(el).animate(&#123;</span><br><span class="line">                left: &apos;500px&apos;,</span><br><span class="line">                opacity:0</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                duration:1500,</span><br><span class="line">                complete:done</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>6、自定义指令<br>自定义指令function使用direactives来定义，与data，method等平行。使用时是’v-xxx’的形式，后面的xxx与directives里的function名要一致。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p v-color=&quot;&apos;red&apos;&quot;&gt;v-xxx 的自定义指令&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">directives: &#123;</span><br><span class="line">    color: function(el, binding) &#123;</span><br><span class="line">        el.style.color = binding.value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是在组件内部，也就是说v-color指令只能在这个组件内使用。那么，怎么定一个全局的指令，可以在所有组件内使用呢？答案是将此定义放在Vue实例化的地方，比如main.js里面。</p><p>7、vue-cli 脚手架的安装和使用<br><img src="https://upload-images.jianshu.io/upload_images/4109786-3cd7d0d4205995d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>8、cnpm的使用<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4d3c33edc0767305.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cnpm命令使用"></p><p>9、vue-router添加子组件<br>注意一点，如果路由有子路由，比如<a href="http://localhost:3000/apple/" target="_blank" rel="noopener">http://localhost:3000/apple/</a> 和<a href="http://localhost:3000/apple/red，其中第二是就是第一个的子路由，路由代码是这样的" target="_blank" rel="noopener">http://localhost:3000/apple/red，其中第二是就是第一个的子路由，路由代码是这样的</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      path: &apos;/apple&apos;,</span><br><span class="line">      component: Apple,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;red&apos;,</span><br><span class="line">          component: RedApple</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-217ff87928cdc507.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这时候如果要让red这个子路由生效，必须在apple这个父组件中也使用<code>&lt;router-view&gt;&lt;/router-view&gt;</code>,才能打包目的，apple/red才能渲染出redapple中的内容<br><img src="https://upload-images.jianshu.io/upload_images/4109786-7830851a83b0f43b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="子路由"></p><p>apple.vue文件的内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">      &lt;img class=&quot;img&quot; src=&quot;../assets/apple.jpg&quot; alt=&quot;appale&quot;&gt;</span><br><span class="line">      &lt;button @click=&quot;getParam&quot;&gt;get route param&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt; </span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></p><p>10、vue-link<br>这个组件也是设置路由用的，可以绑定需要跳转的地址，用法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#123;name: &apos;applePage&apos;&#125;&quot;&gt;&lt;/router-link&gt;</span><br><span class="line">&lt;router-link :to=&quot;&apos;goods&apos;&quot;&gt; to goodsList &lt;/router-link&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;path : &apos;banana&apos;, param:&#123;color:&apos;yellow&apos;&#125;&#125;&quot;&gt; to banana &lt;/router-link&gt;</span><br><span class="line">&lt;router-link :to=&quot;&#123;path : &apos;apple/red&apos;&#125;&quot;&gt; to red apple &lt;/router-link&gt;</span><br><span class="line">&lt;router-link :to=&quot;goodsDetail&quot;&gt; to goods detail &lt;/router-link&gt;</span><br></pre></td></tr></table></figure></p><p>上面的applePage和goods是要在data里定义的，不然是会报错的。<br>当然，这个是在入口的App.vue里，因为跳转地址都是根路径。什么意思呢？举个例子，如果这段代码在apple.vue这个类中，页面如下：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-bf4de0073a23cf89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="apple page"></p><p>那这些按钮点下去以后url会变成什么呢?比如第一个goodsList，就会是这样：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4e159f9701fe58cb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>可以看到，在路由的前面都有一个<code>apple</code>这个路径。</p><p>其他看<a href="https://router.vuejs.org" target="_blank" rel="noopener">vue-route官网</a>吧</p><ul><li>命名路由<br>命名路由是指在route-view标签上指定组件名称，比如<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view name=&quot;viewA&quot;&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;router-view name=&quot;viewB&quot;&gt;&lt;/router-view&gt;</span><br></pre></td></tr></table></figure></li></ul><p>响应的在router里指定组件就可以：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      path: &apos;/apple&apos;,</span><br><span class="line">      component: &#123;</span><br><span class="line">          viewA: Apple,</span><br><span class="line">          viewB: RedApple</span><br><span class="line">      &#125;,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: &apos;red&apos;,</span><br><span class="line">          component: RedApple</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></p><p>这样匹配来用。</p><ul><li>重定向<br>目标：访问根目录是自动访问apple这个路径。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: &apos;/&apos;,</span><br><span class="line">  redirect: &apos;apple&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>11、 vuex – <a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noopener">官网</a><br>vuex是状态管理插件。将组件之间共享的状态，公用型内容的改动等使用统一的状态管理插件起来。</p><p>数据状态管理模式图：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-03755b4bf6e129bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="vuex"></p><p>flux:状态管理实现流程：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-beea660d92e445a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>action和mutatons的区别，munation本身可以修改state的值，但是为什么还要通过action来处理呢？因为action这一步可以加比如异步、网络请求等这样的实现逻辑，而mutation只能是同步的，也不能在其中发出http请求。</p><p>vuex常用的有state，muntions，getters，actions，modules这几个核心的concepts，更详细的请参考<a href="https://vuex.vuejs.org/zh/" target="_blank" rel="noopener">官网</a>.</p><p>示例代码：<br>vuex.vue入口文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123; msg &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt; state 总价: &#123;&#123; totalPrice &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;dog&gt;&lt;/dog&gt;</span><br><span class="line">        &lt;cat&gt;&lt;/cat&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import Dog from &apos;../components/dog&apos;</span><br><span class="line">import Cat from &apos;../components/cat&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg : &apos;vuex demo&apos;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    components: &#123;</span><br><span class="line">        Dog,</span><br><span class="line">        Cat</span><br><span class="line">    &#125;,</span><br><span class="line">    computed: &#123;</span><br><span class="line">        totalPrice() &#123;</span><br><span class="line">            return this.$store.getters.getTotal</span><br><span class="line">            //vuex實現了getter方法，因此不推荐直接从state中拿属性的值</span><br><span class="line">            // return this.$store.state.totalPrice</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>包括的两个子组件dog.vue<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123; msg &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;button @click=&quot;addOne&quot;&gt;add one&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;minusOne&quot;&gt;minus one&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg : &apos;I am a dog, each of me is 5$. &apos;,</span><br><span class="line">            price: 5</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        addOne() &#123;</span><br><span class="line">            this.$store.commit(&apos;increment&apos;, this.price)</span><br><span class="line">        &#125;,</span><br><span class="line">        minusOne() &#123;</span><br><span class="line">            this.$store.commit(&apos;decrement&apos;, this.price)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>和cat.vue<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123; msg &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;button @click=&quot;addOne&quot;&gt;add one&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;minusOne&quot;&gt;minus one&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg : &apos;I am a dog, each of me is 15$. &apos;,</span><br><span class="line">            price: 15</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        addOne() &#123;</span><br><span class="line">            //推荐使用action调用mutation的方式</span><br><span class="line">            this.$store.dispatch(&apos;increase&apos;, this.price)</span><br><span class="line">            //不推荐使用下面的直接调用mutations方法的方式</span><br><span class="line">            // this.$store.commit(&apos;increment&apos;, this.price)</span><br><span class="line">        &#125;,</span><br><span class="line">        minusOne() &#123;</span><br><span class="line">            this.$store.commit(&apos;decrement&apos;, this.price)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>实现的效果：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-e3b9be38a2f9a8e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="vuex demo"></p><h2 id="视频和源码"><a href="#视频和源码" class="headerlink" title="视频和源码"></a>视频和源码</h2><p>视频共享：<br>链接: <a href="https://pan.baidu.com/s/18TFC0-VSCIWFo977p4YcTQ" target="_blank" rel="noopener">https://pan.baidu.com/s/18TFC0-VSCIWFo977p4YcTQ</a><br>提取码: rjcp </p><p>源代码共享：<br><a href="https://gitee.com/marvinma/vue2-pc" target="_blank" rel="noopener">https://gitee.com/marvinma/vue2-pc</a></p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows上安装nvm-node版本管理工具各种坎</title>
      <link href="/2018/09/02/windows%E4%B8%8A%E5%AE%89%E8%A3%85nvm-node%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%90%84%E7%A7%8D%E5%9D%8E/"/>
      <url>/2018/09/02/windows%E4%B8%8A%E5%AE%89%E8%A3%85nvm-node%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%90%84%E7%A7%8D%E5%9D%8E/</url>
      
        <content type="html"><![CDATA[<p>nodejs版本管理工具在windows环境上安装和使用<br><a href="https://www.jianshu.com/p/c424a44f6964" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在github上fork了一个vue管理后台的<a href="https://gitee.com/smallweigit/avue" target="_blank" rel="noopener">项目</a>，npm install的时候提示node 要用8.10及以上版本。但是我正在管理的项目用的又是8.9，跟别的前端同事聊天无意中才知道node还有专门的版本管理工具，说是<code>npm install n</code> 就行，于是上班去试了一把。</p><h3 id="正题"><a href="#正题" class="headerlink" title="正题"></a>正题</h3><p>不试不要紧，一试就开心了，一开始用的npm install -g n<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5ddfd4447d5ee649.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>原来，windows上没有，windows上叫做nvm，下载地址：<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a></p><p><strong>安装参考</strong>：<br><a href="https://blog.csdn.net/sinat_38334334/article/details/80013648" target="_blank" rel="noopener">https://blog.csdn.net/sinat_38334334/article/details/80013648</a>  </p><h3 id="碰到的坑："><a href="#碰到的坑：" class="headerlink" title="碰到的坑："></a>碰到的坑：</h3><p>1、 安装上只好执行nvm use 8.10.0 提示错误，不能使用。</p><p>最后才查到nvm安装在C:\Program Files\nvm下，路径下有空格导致的。这一点在文章最后有说明。</p><p>2、解决了以后又变成：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-1335459514887ab7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这是git这个命令行的问题，原因不细究了，用系统自带的命令行管理工具可以执行。</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-937e47ecddb6f350.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>3、然后就可以使用了<br><img src="https://upload-images.jianshu.io/upload_images/4109786-eb87169db1c5bdb9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>可以安装别的版本了，美滋滋<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5589bad1db6c1e61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="文章最后再抄点"><a href="#文章最后再抄点" class="headerlink" title="文章最后再抄点"></a>文章最后再抄点</h3><h5 id="使用命令时注意点"><a href="#使用命令时注意点" class="headerlink" title="使用命令时注意点"></a>使用命令时注意点</h5><ul><li>请用管理员身份运行命令管理器，否则可能出错。</li><li>先设置node和npm的淘宝镜像，这样成功率和下载速度会更高点。<h5 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h5>1：主要用途，切换nodejs版本。如果想使用最新的流行版本测试您正在开发的模块，而不用卸载稳定版本的node，则可以使用nvm来切换nodejs版本。</li></ul><h5 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h5><ul><li>1、nvm安装目录，最好不要存在空格。否则，nvm可以安装成功，但使用nvm use x.y.z（nodejs的切换）会有问题。</li><li>2、有些全局的npm模块，可能在各版本的node.js之间不共享。</li><li>3、你正在使用的node.js版本中可能不支持某些npm模块。因此在工作的时候请注意工作环境。</li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/sinat_38334334/article/details/80013648" target="_blank" rel="noopener">windows上NVM安装与使用</a></p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> tools </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux 安装maven，jenkins持续集成</title>
      <link href="/2018/08/14/Linux%20%E5%AE%89%E8%A3%85maven%EF%BC%8Cjenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
      <url>/2018/08/14/Linux%20%E5%AE%89%E8%A3%85maven%EF%BC%8Cjenkins%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</url>
      
        <content type="html"><![CDATA[<p>开发环境搭建—安装maven和jenkins持续集成<br><a href="https://www.jianshu.com/p/64a7027df154" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="1、安装maven"><a href="#1、安装maven" class="headerlink" title="1、安装maven"></a>1、安装maven</h3><p>1.1、 创建一个maven文件夹，解压maven文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@1169CKT ~]# cd /home/haieradmin/softs/</span><br><span class="line">[root@1169CKT softs]# ls</span><br><span class="line">apache-maven-3.5.2-bin.tar.gz  apache-tomcat-8.5.24.tar.gz  jdk-8u151-linux-x64.tar.gz  mysql57-community-release-el7-8.noarch.rpm  nginx-1.12.2.tar.gz  redis-4.0.6.tar.gz</span><br><span class="line">[root@1169CKT softs]# mkdir /usr/local/maven</span><br><span class="line">[root@1169CKT softs]# tar -zxvf apache-maven-3.5.2-bin.tar.gz -C /usr/local/maven/</span><br></pre></td></tr></table></figure></p><p>1.2、设置环境变量，在/etc/profile的文件末尾添加以下配置:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export M2_HOME=/usr/local/maven/apache-maven-3.5.2</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$M2_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p><p>执行source命令让新配置立即生效:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@1169CKT softs]# source /etc/profile</span><br><span class="line">[root@1169CKT softs]#</span><br></pre></td></tr></table></figure></p><p>1.3、验证<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@1169CKT softs]# mvn -v</span><br><span class="line">Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)</span><br><span class="line">Maven home: /usr/local/maven/apache-maven-3.5.2</span><br><span class="line">Java version: 1.8.0_151, vendor: Oracle Corporation</span><br><span class="line">Java home: /usr/local/java/jdk1.8.0_151/jre</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;3.10.0-693.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br><span class="line">[root@1169CKT softs]#</span><br></pre></td></tr></table></figure></p><h3 id="2、安装jenkins"><a href="#2、安装jenkins" class="headerlink" title="2、安装jenkins"></a>2、安装jenkins</h3><p>安装jenkins简单来说需要下面四步：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -</span><br><span class="line">sudo sh -c &apos;echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list&apos;</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install jenkins</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-9577fbcfaca10aec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>2.1、 安装简介:</p><blockquote><p>1、通过上面的安装，Jenkins将作为一个Linux守护进程，可以查看文件/etc/init.d/jenkins<br>2、创建一个名为Jenkins的Linux用户<br>3、生成日志文件 /var/log/jenkins/jenkins.log<br>4、Jenkins 默认端口是8080，在配置文件/etc/default/jenkins 中定义。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/4109786-b187f6b9b3a5cc32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>install plugins<br><img src="https://upload-images.jianshu.io/upload_images/4109786-0021cd6f67122bf4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-dd8778de2d14afb2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>started</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-253c4f39b6251e0d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>设置用户名密码:admin/admin123</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-28901dea40c08f48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>启动后访问：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-3858737cba5f505f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>2.2、 配置权限</p><p>git代码库授权配置问题，需要配置ssh免密码登录，注意，必须是jenkins用户的授权，不是root用户<br>如果ssh或者scp时遇到错误类似如下：<br>ssh_exchange_identification: read: Connection reset by peer<br>那就是需要设置访问IP的白名单，具体操作步骤如下：<br>黑名单<br>cat /etc/hosts.deny<br>白名单<br>cat /etc/hosts.allow<br>加上需要访问本机的服务器ip地址，保存即可。<br>如果ssh到其他服务器出现<br>centos ssh: connect to host 10.138.227.188 port 22: No route to host<br>的错误，测需要在目标服务器上配置22端口的防火墙白名单，如果是firewall，执行如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=22/tcp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-9b068ec54dc40345.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>授权配置正确以后的样子大概是这样的<br><img src="https://upload-images.jianshu.io/upload_images/4109786-982a2b2cbaa71aae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa      #生成key </span><br><span class="line">cd /var/lib/jenkins/.ssh     #如果没有创建jenkins home的话，可以上jenkins的全局设置里查看jenkins主目录，然后查看ssh路径</span><br><span class="line">scp -r /root/.ssh/id_rsa.pub 192.168.31.147:/root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>如果jenkins启动时最后提示找不到JAVA_HOME，如下图所示，</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-336dca6229c0b7d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这个情况需要再tomcat的bin目录下找到setclasspath.sh文件，添加上JAVA_HOME目录。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-d6e9f31592931aaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_151</span><br><span class="line"></span><br><span class="line">JRE_HOME=/usr/local/java/jdk1.8.0_151/jre</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-3faa327d2bfa6d33.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>2.3、jenkins构建里的一些命令：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-c3ca3d67f05902ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#删除阿里云服务器中部署的包</span><br><span class="line">ssh -p 22 root@x.x.x.x &apos;bash -x -s&apos; &lt; /opt/auto-deploy-scripts/remove-aliyun-questionnaire-test.sh</span><br><span class="line">#使用scp命令把jenkins最新Build的包传送到阿里云服务器1中</span><br><span class="line">scp -P 22 /var/lib/jenkins/workspace/chuangke_testserver_auto_deploy/target/questionnaire.war root@x.x.x.x:/opt/tomcat8_test/webapps</span><br><span class="line">ssh -p 22 root@x.x.x.x &apos;bash -x -s&apos; &lt; /opt/auto-deploy-scripts/start_tomcat8_test.sh</span><br></pre></td></tr></table></figure><p>两个脚本：<br>remove-aliyun-questionnaire-test.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">tomcat_pid=`ps -ef | grep tomcat | grep test| grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">[ -n &quot;$tomcat_pid&quot; ] &amp;&amp; kill -9 $tomcat_pid</span><br><span class="line"></span><br><span class="line">rm -rf /opt/tomcat8_test/webapps/questionnaire*</span><br><span class="line">rm -rf /opt/tomcat8_test/logs/localhost*</span><br><span class="line">rm -rf /opt/tomcat8_test/logs/host-manager*</span><br><span class="line">rm -rf /opt/tomcat8_test/logs/manager*</span><br><span class="line">rm -rf /opt/tomcat8_test/logs/catalina.out</span><br><span class="line">rm -rf /opt/tomcat8_test/work/Catalina/*</span><br></pre></td></tr></table></figure></p><p>start_tomcat8_test.sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">/opt/tomcat8_test/bin/startup.sh</span><br></pre></td></tr></table></figure></p><p>如果是直接在jenkins 的Execute Shell里执行脚本，脚本在当前服务器，给当前服务器执行命令，则如下写法。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-821d712d03521933.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sleep 200</span><br><span class="line">echo &quot;--------begin deploy webservice --------&quot;</span><br><span class="line">date</span><br><span class="line">/opt/c2m_scripts/backup_last_month_logs.sh</span><br><span class="line">rm -rf /mnt/jenkins/jenkins_home/workspace/aliyun-testServer1-c2mwebservice-deploy-for-dev-test/c2mwebservice/target/c2mwebservice.war</span><br></pre></td></tr></table></figure><p>2.5、配置邮件通知</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-9dd74ec560f0286f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-79f73a73211fce81.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-947c2fb55fc68e5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-754e5b5043599612.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>以上是最简单的邮件配置，当构建出错是会发邮件。如果要修改发出的邮件的通知内容，或有更加复杂的操作，可以使用<a href="https://wiki.jenkins-ci.org/display/JENKINS/Email-ext+plugin" target="_blank" rel="noopener">Email Extension Plugin</a>插件进行配置。</p><p>如果用腾讯企业邮箱的话，配置如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-57ec65966742022d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-577e26d0b7f977db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>备注：如果你用jenkins给本机部署应用，比如运行一个jar包，也许会发生的一件事，那就是jenkins部署没有报错，但是<code>java -jar</code>后的应用还没启动自己就死了。这是因为默认不允许运行jenkins的衍生进程导致的，如果是远端服务器就没有问题，如果是本地运行，需要按照如下地址的说明配置一下。<br> <a href="https://www.cnblogs.com/rongfengliang/p/7805977.html" target="_blank" rel="noopener">jenkins中通过execute shell启动的进程会被杀死的问题</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://blog.csdn.net/yougoule/article/details/78188333" target="_blank" rel="noopener">Centos7中安装最新版maven3.5.0</a><br><a href="https://www.digitalocean.com/community/tutorials/how-to-install-jenkins-on-ubuntu-16-04" target="_blank" rel="noopener">How To Install Jenkins on Ubuntu 16.04</a><br><a href="https://blog.csdn.net/myNameIssls/article/details/70209516" target="_blank" rel="noopener">centos7下安装jenkins</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux 修改主机名、添加用户、安装jdk、安装mysql、安装redis</title>
      <link href="/2018/08/12/Linux%20%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E3%80%81%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E3%80%81%E5%AE%89%E8%A3%85jdk%E3%80%81%E5%AE%89%E8%A3%85mysql%E3%80%81%E5%AE%89%E8%A3%85redis/"/>
      <url>/2018/08/12/Linux%20%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E3%80%81%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E3%80%81%E5%AE%89%E8%A3%85jdk%E3%80%81%E5%AE%89%E8%A3%85mysql%E3%80%81%E5%AE%89%E8%A3%85redis/</url>
      
        <content type="html"><![CDATA[<p>开发环境搭建—修改主机名、添加用户、安装jdk、安装mysql、安装redis<br><a href="https://www.jianshu.com/p/26b892faeee8" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="1、修改主机名"><a href="#1、修改主机名" class="headerlink" title="1、修改主机名"></a>1、修改主机名</h3><p>【vi /etc/hostname】编辑上你要起的名字即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# hostnamectl --static set-hostname Linuxidc</span><br><span class="line"># 重启CentOS 7 之后（reboot -f ），</span><br><span class="line">[root@Linuxidc ~]# hostnamectl --static</span><br><span class="line">Linuxidc</span><br><span class="line">[root@Hunk_zhu ~]# hostnamectl --transient</span><br><span class="line">Linuxidc</span><br><span class="line">[root@Hunk_zhu ~]# hostnamectl --pretty</span><br><span class="line">Linuxidc</span><br><span class="line">[root@Hunk_zhu ~]# hostname</span><br><span class="line">hostnamectl --static set-hostname testServer</span><br></pre></td></tr></table></figure></p><h3 id="2、添加用户"><a href="#2、添加用户" class="headerlink" title="2、添加用户"></a>2、添加用户</h3><p>useradd dev</p><p>passwd dev</p><p>输入密码Ecs201703，创建成功。</p><p>赋予root权限：</p><p>然后给dev加上同root一样的如下一行，保存。</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-67adb76b4a351a4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="root权限"></p><p><strong>ubuntu中管理用户和用户组</strong></p><ol><li>添加一个用户组并指定id为1002</li></ol><p><code>sudo groupadd －g 1002 www</code></p><ol start="2"><li>添加一个用户到www组并指定id为1003</li></ol><p><code>sudo useradd wyx -g 1002 -u 1003 -m</code></p><ol start="3"><li>修改用户的密码</li></ol><p><code>sudo passwd wyx</code></p><ol start="4"><li>删除一个用户</li></ol><p><code>sudo userdel wyx</code></p><ol start="5"><li><p>为该用户添加sudo权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -a -G adm wyx</span><br><span class="line"></span><br><span class="line">sudo usermod -a -G sudo wyx</span><br></pre></td></tr></table></figure></li><li><p>查看所有用户和用户组：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd</span><br><span class="line"></span><br><span class="line">cat /etc/group</span><br></pre></td></tr></table></figure></li></ol><h3 id="3、安装JDK1-8"><a href="#3、安装JDK1-8" class="headerlink" title="3、安装JDK1.8"></a>3、安装JDK1.8</h3><ul><li><p>在线安装openjdk</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openjdk-8-jdk&lt;/pre&gt;&lt;/wiz_code_mirror&gt;</span><br></pre></td></tr></table></figure><pre><code>如果安装时报错，执行【 sudo apt-get update 】命令后再执行上面的命令。在配置classpath即可。</code></pre></li><li><p><a href="http://www.cnblogs.com/xqzt/p/4934451.html" target="_blank" rel="noopener">手动安装教程</a> </p><p><strong>1、源码包准备：</strong></p><p>首先到官网下载jdk-8u66-linux-x64.tar.gz，</p><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p></li></ul><p>或者使用命令下载<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></p><p> <strong>2、解压源码包</strong></p><p> 通过终端在/usr/local目录下新建java文件夹，命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/local/java</span><br></pre></td></tr></table></figure><p>  然后将下载到压缩包拷贝到java文件夹中，命令行：</p><p> 进入jdk源码包所在目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp jdk-8u66-linux-x64.tar.gz /usr/local/java</span><br></pre></td></tr></table></figure><p> 然后进入java目录，命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/java</span><br></pre></td></tr></table></figure><p> 解压压缩包，命令行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar zxvf jdk-8u66-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p> 然后可以把压缩包删除，命令行：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm jdk-8u66-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><p><strong>3、设置jdk环境变量</strong><br>这里采用全局设置方法，就是修改etc/profile，它是是所有用户的共用的环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile</span><br></pre></td></tr></table></figure></p><p>打开之后在末尾添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_66</span><br><span class="line"></span><br><span class="line">JRE_HOME=/usr/local/java/jdk1.8.0_66/jre</span><br><span class="line"></span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class="line"></span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure></p><p>使环境变量生效<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>看看自己的配置是否都正确</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $JAVA_HOME echo $CLASSPATH echo $PATH</span><br></pre></td></tr></table></figure><p> <strong>4、修改默认JDK</strong></p><p>如果系统已经安装了其他版本的Java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/java/jdk1.8.0_66</span><br><span class="line"></span><br><span class="line">JRE_HOME=/usr/local/java/jdk1.8.0_66/jre</span><br><span class="line"></span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class="line"></span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">export PATH JAVA_HOME CLASSPATH</span><br></pre></td></tr></table></figure><p><strong>5、检验是否安装成功</strong></p><p>在终端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p><p>看看是否安装成功，成功则显示如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version &quot;1.8.0_66&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_66-b17)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.65-b01, mixed mode)</span><br></pre></td></tr></table></figure></p><h3 id="4、Ubuntu-16-04-安装mysql并设置远程访问"><a href="#4、Ubuntu-16-04-安装mysql并设置远程访问" class="headerlink" title="4、Ubuntu 16.04 安装mysql并设置远程访问"></a>4、Ubuntu 16.04 安装mysql并设置远程访问</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get  install mysql-server</span><br></pre></td></tr></table></figure><p> <a href="http://www.cppblog.com/colorful/archive/2012/04/29/173122.html" target="_blank" rel="noopener">Linux新手入门：Unable to locate package错误解决办法</a></p><p>最近刚开始接触<a href="http://www.letuknowit.com/topics/linux" title="关于Linux的学习心得" target="_blank" rel="noopener">Linux</a>，在虚拟机中装了个<a href="http://www.letuknowit.com/topics/tag/ubuntu" title="关于ubuntu的学习心得" target="_blank" rel="noopener">Ubuntu</a>，当前的版本是<a href="http://www.letuknowit.com/topics/tag/ubuntu-11-10" target="_blank" rel="noopener">Ubuntu 11.10</a>，装好后自然少不了安装一些软件，在设置了软件的源后，就开始了 sudo apt-get install，结果出现了下面的Unable to locate package错误：</p><ol><li><p>letuknowit@ubuntu:~$ sudo apt-get install mysql-server mysql-client</p></li><li><p>[sudo] password for letuknowit:</p></li><li><p>Reading package lists… Done</p></li><li><p>Building dependency tree    </p></li><li><p>Reading state information… Done</p></li><li><p>E: Unable to locate package mysql-server</p></li><li><p>E: Unable to locate package mysql-client</p></li><li><p>letuknowit@ubuntu:~$</p></li></ol><p>　　这叫一个郁闷啊，出师不利，不带这么吓唬刚玩Ubuntu的小朋友吧~于是赶紧找资料，又回顾下前面的操作，最后发现问题出<strong>在执行sudo apt-get install之前更换了软件源，但是却忘了update下</strong>了，于是执行下面的命令：</p><ol><li>sudo apt-get update</li></ol><p>等上面命令执行完后，再执行sudo apt-get install就可以了！其实错误信息已经很明确了，Unable to locate packet就是无法找到包嘛，那还不赶紧sudo apt-get update下！</p><p>说明：</p><p>　　一个朋友在使用ubuntu-server 16.04安装mysql，设置远程访问的时候出现了问题，请我帮忙。但是，我也没有使用过ubuntu安装mysql，于是乎搜索了很多技术文件，比着葫芦画瓢。但是，由于mysql版本的差异，导致在安装设置的过程中出现了一些问题：就是不能远程访问。</p><p>一、安装mysql</p><p>　　1. 安装需要使用root账号，如果不会设置root账号的请自行google。安装mysql过程中，需要设置mysql的root账号的密码，不要忽略了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql</span><br></pre></td></tr></table></figure></p><p>在centOS上执行命令可能碰到找不到mysql-server的情况，想下面这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[azq@localhost ~]$ sudo yum install mysql-server</span><br><span class="line">已加载插件：fastestmirror, langpacks</span><br><span class="line"></span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">* base: mirrors.163.com</span><br><span class="line">* extras: mirrors.163.com</span><br><span class="line">* updates: centos.ustc.edu.cn</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">没有可用软件包 mysql-server。</span><br></pre></td></tr></table></figure></p><p>此时参考<a href="https://linux.it.net.cn/e/server/nginx/2016/0617/23706.html" target="_blank" rel="noopener">解决CentOS7下yum install mysql-server没有可用包的问</a><br>可解决。<br>　　2. 以上3个软件包安装完成后，使用如下命令查询是否安装成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure><p>　　查询结果如下图所示，表示安装成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@xyz:~# netstat -tap | grep mysql</span><br><span class="line">tcp6       0      0 [::]:mysql              [::]:*                  LISTEN      7510/mysqld     </span><br><span class="line">root@xyz:~#</span><br></pre></td></tr></table></figure><p>二、设置mysql远程访问</p><p>1. 编辑mysql配置文件，把其中bind-address = 127.0.0.1注释了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure><p>2. 使用root进入mysql命令行[mysql -uroot -p]，执行如下2个命令，示例中mysql的root账号密码：root</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all on *.* to root@&apos;%&apos; identified by &apos;root&apos; with grant option;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><ol start="3"><li>重启mysql</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysql restart</span><br></pre></td></tr></table></figure><p>　　重启成功后，在其他计算机上，便可以登录。</p><p>备注：如果修改密码时提示没有password字段的错误，应该用下面的命令：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-0e5212fbab007761.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user set authentication_string=password(&apos;root&apos;) where user=&apos;root&apos; ;</span><br></pre></td></tr></table></figure><p>远程登录，有如下错误提示</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-18282cbc8fe4cbf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>解决办法：</p><p>在服务器上用【mysql -uroot -p】命令输入密码登录，</p><p>然后执行下面的两条命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;QDyy201703&apos; WITH GRANT OPTION;    </span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></p><p>如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-36117e7eec7f1565.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-74c2ca4b5845ef49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="success.png"></p><p>完美解决mysql服务问题。</p><blockquote><p>本地命令行连接远程mysql server</p></blockquote><p>进入命令行，连接：</p><p>mysql -u 用户名 -p密码 -h 服务器IP地址 -P 服务器端MySQL端口号 -D 数据库名</p><p>注意：</p><pre><code>(1)服务器端口标志-P一定要大些以区别于用户-p,如果直接连接数据库标志-D也要大写；(2)如果要直接输入密码-p后面不能留有空格如-pmypassword;(3)命令结束段没有&apos;;&apos;分号。</code></pre><p>例子：</p><p>mysql -u lzpddd -pmypassword -h 192.168.1.88 -P 3306 -D mydb</p><h3 id="5、安装redis"><a href="#5、安装redis" class="headerlink" title="5、安装redis"></a>5、安装redis</h3><p>1、  从<a href="http://redis.io/" target="_blank" rel="noopener">http://redis.io/</a> 下载redis-3.2.4.tar.gz</p><p>2、 上传到linux后移动到/opt/redis目录下</p><p>3、 解压 sudo tar -zxvf redis-3.2.4.tar.gz</p><p>4、 进入解压后的文件夹进行编译 make</p><p>5、 安装 make install</p><p>6、 测试一下 make test</p><pre><code> 报错缺少tcl （tcl 是一种解译语言，也是一套 C 的函式库）           安装tcl  apt-get install tcl 报错Executing test client: NOREPLICAS Not enoughgood slaves to write..           修改文件tests/integration/replication-2.tcl，将after 1000改为after 10000以延长等待时间。报错[err]: Server is able to generate a stack trace on selected systems in tests/integration/logging.          只是某个测试没有通过，可以忽略。</code></pre><p>7、创建Redis配置目录 /etc/redis<br>                mkdir /etc/redis<br>8、拷贝配置文件：<br>                cp /opt/redis/redis-3.2.4/redis.conf/ /etc/redis<br>9、编辑配置文件（暂未编辑）<br>              修改端口、配置数据库保存目录、其它<br>10、（1）通过指定配置文件启动；<br>                       redis-server /etc/redis/redis.conf<br>        （2）通过命令redis-server 启动，可在命令后加上<code>&amp;</code>号使redis以后台程序方式运行；<br>                        redis-server &amp;<br>11、客户端登陆 redis-cli<br>12、关闭Redis服务 redis-cli shutdown </p><p><strong>设置redis开机启动</strong></p><p>修改redis.conf（/etc/redis下）</p><pre><code> #打开后台运行选项daemonize yes#设置日志文件路径logfile &quot;/var/log/redis/redis.log&quot;</code></pre><p>编写脚本</p><pre><code>vim /etc/init.d/redis</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#!/bin/sh</span><br><span class="line"># chkconfig: 2345 10 90</span><br><span class="line"># description: Start and Stop redis</span><br><span class="line"> </span><br><span class="line">PATH=/usr/local/bin</span><br><span class="line">REDISPORT=6379</span><br><span class="line">EXEC=/usr/local/bin/redis-server</span><br><span class="line">REDIS_CLI=/usr/local/bin/redis-cli</span><br><span class="line">PIDFILE=/var/run/redis.pid</span><br><span class="line">CONF=&quot;/etc/redis/redis.conf&quot;</span><br><span class="line"> </span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        if [ -f $PIDFILE ]</span><br><span class="line">        then</span><br><span class="line">            echo &quot;$PIDFILE exists, process is already running or crashed.&quot;</span><br><span class="line">        else</span><br><span class="line">            echo &quot;Starting Redis server...&quot;</span><br><span class="line">            $EXEC $CONF</span><br><span class="line">        fi</span><br><span class="line">        if [ &quot;$?&quot;=&quot;0&quot; ]</span><br><span class="line">        then</span><br><span class="line">            echo &quot;Redis is running...&quot;</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        if [ ! -f $PIDFILE ]</span><br><span class="line">        then</span><br><span class="line">            echo &quot;$PIDFILE exists, process is not running.&quot;</span><br><span class="line">        else</span><br><span class="line">            PID=$(cat $PIDFILE)</span><br><span class="line">            echo &quot;Stopping...&quot;</span><br><span class="line">            $REDIS_CLI -p $REDISPORT SHUTDOWN</span><br><span class="line">            while [ -x $PIDFILE ]</span><br><span class="line">            do</span><br><span class="line">                echo &quot;Waiting for Redis to shutdown...&quot;</span><br><span class="line">                sleep 1</span><br><span class="line">            done</span><br><span class="line">            echo &quot;Redis stopped&quot;</span><br><span class="line">        fi</span><br><span class="line">        ;;</span><br><span class="line">    restart|force-reload)</span><br><span class="line">        $&#123;0&#125; stop</span><br><span class="line">        $&#123;0&#125; start</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;Usage: /etc/init.d/redis &#123;start|stop|restart|fore-reload&#125;&quot;</span><br><span class="line">        exit 1</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>添加脚本的执行权限<br>        sudo chmod +x /etc/init.d/redis<br>设置开机自动启动<br>       sudo update-rc.d redis defaults<br>       报错：<br>     <img src="https://upload-images.jianshu.io/upload_images/4109786-28d686b4f04efc75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>上面为两个错误<br>       第一个参考<a href="https://my.oschina.net/u/943306/blog/345923" target="_blank" rel="noopener">https://my.oschina.net/u/943306/blog/345923</a><br>            解决方法：安装一个中文语言，系统就知道zh_CN.UTF-8了，这个时候用perl就不会报错了<br>                  apt-get install language-pack-zh-hans<br>      第二个参考：<a href="http://bashell.nodemedia.cn/archives/directspace-debian-6-vps-vzquota-missing.html" target="_blank" rel="noopener">http://bashell.nodemedia.cn/archives/directspace-debian-6-vps-vzquota-missing.html</a><br>           解决方法：编辑/etc/init.d/redis<br>                在文件头部#!/bin/sh下面添加</p><pre><code>### BEGIN INIT INFO# Provides: OSSEC HIDS# Required-Start: $network $remote_fs $syslog $time# Required-Stop:# Default-Start: 2 3 4 5# Default-Stop: 0 1 6# Short-Description: OSSEC HIDS### END INIT INFO</code></pre><p>使用脚本启动服务<br>          开启redis： service redis start<br>          停止redis： service redis stop<br>          重启redis： service redis restart<br>         查看服务状态：service redis status<br>最后将机器关机，重新启动<br>         此时redis服务也启动了。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="http://blog.csdn.net/ruglcc/article/details/7802077" target="_blank" rel="noopener">ubuntu永久修改主机名</a><br><a href="https://www.cnblogs.com/iscodercn/p/5488633.html" target="_blank" rel="noopener">Ubuntu 16.04 安装mysql并设置远程访问</a><br><a href="https://www.cnblogs.com/vincedotnet/p/4017574.html" target="_blank" rel="noopener">ubuntu中管理用户和用户组</a><br><a href="http://www.linuxidc.com/Linux/2016-09/135288.htm" target="_blank" rel="noopener">CentOS7 64位下MySQL5.7安装与配置</a><br><a href="http://blog.csdn.net/qq_19399235/article/details/78313633" target="_blank" rel="noopener">Centos 7.4 安装 Redis 全过程</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Springboot 之 自定义方法参数解析器</title>
      <link href="/2018/08/02/Springboot%20%E4%B9%8B%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90%E5%99%A8/"/>
      <url>/2018/08/02/Springboot%20%E4%B9%8B%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>使用spring的自定义方法参数解析器获取当前用户的demo。<br><a href="https://www.jianshu.com/p/0347bdde0c6d" target="_blank" rel="noopener">简书地址</a></p><a id="more"></a><p>昨天（2018-08-01）我同事Damon在分享Spring AOP注解失效的主题上，顺带着介绍了下《自定义方法参数解析器》的使用，个人觉得还挺有用的，再次记录一下，以后用的时候好查。</p><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>一个业务场景，最近微信小程序如日中天，大有一发不可收拾之局势，我司新接的一些业务也是趁热打铁以微信小程序的形式公诸于世，因此也有了这个场景。</p><p>与之前玩APP不一样了，之前的app用户注册，基本上都是手机号+验证码的形式，也就是说用户上来都有手机号登录的过程，登陆以后放回token，访问替他页面会带着这个token，后台也就通过token识别出这个用户是谁了。</p><p>现在小程序，自然是微信登录最方便，而且不用麻烦用户再绑定手机号，那么就会有一个用户唯一标识的问题，这就是微信提供的openId，我们现在的做法就是在所有要请求的接口上在head里都带着这个openId，后台通过这个openId检查是新用户还是老用户，用户的信息也就相应的拿到了。</p><h3 id="业务处理"><a href="#业务处理" class="headerlink" title="业务处理"></a>业务处理</h3><p>举个例子，前端请求是这样的：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-9e8432431308c4e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>1、各自接口分别处理</strong><br>在需要判读当前用户是谁的接口逻辑里分别加上，本次实验，放在controller层，实际写代码时下面的逻辑应该在service代码里实现。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@GetMapping(&quot;/public/api/demo1&quot;)</span><br><span class="line">   public Object getUser1(HttpServletRequest request) &#123;</span><br><span class="line">       String mobile = request.getHeader(&quot;openId&quot;);</span><br><span class="line">       CurrentUser currentUser = (CurrentUser) redisService.find(mobile);</span><br><span class="line">       if(currentUser == null)&#123;</span><br><span class="line">           List&lt;HaierUser&gt; userList = userRepository.findByMobileAndUserState(mobile, &quot;1&quot;);</span><br><span class="line">           if(userList.size() &gt; 0 )&#123;</span><br><span class="line">               currentUser = new CurrentUser();</span><br><span class="line">               BeanUtils.copyProperties(userList.get(0), currentUser);</span><br><span class="line">               redisService.add(mobile, currentUser);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       return new RtnResult&lt;&gt;(currentUser);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p> 结果：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-66e1b1f15cad95a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>2、自定义方法参数解析器实现</strong><br>先定义一个方法参数解析器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.hczt.haier.db.user.entity.HaierUser;</span><br><span class="line">import com.hczt.haier.db.user.repository.HaierUserRepository;</span><br><span class="line">import com.hczt.haier.mobileoffice.usercenter.service.api.RedisService;</span><br><span class="line">import org.springframework.beans.BeanUtils;</span><br><span class="line">import org.springframework.core.MethodParameter;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line">import org.springframework.web.bind.support.WebDataBinderFactory;</span><br><span class="line">import org.springframework.web.context.request.NativeWebRequest;</span><br><span class="line">import org.springframework.web.method.support.HandlerMethodArgumentResolver;</span><br><span class="line">import org.springframework.web.method.support.ModelAndViewContainer;</span><br><span class="line"></span><br><span class="line">import javax.annotation.Resource;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-08-03 14:38</span><br><span class="line"> * @desc 方法参数解析器</span><br><span class="line"> * 使用</span><br><span class="line"> **/</span><br><span class="line">@Component</span><br><span class="line">public class CurrentUserArgumentResolver implements HandlerMethodArgumentResolver &#123;</span><br><span class="line">    @Resource</span><br><span class="line">    private RedisService redisService;</span><br><span class="line"></span><br><span class="line">    @Resource</span><br><span class="line">    private HaierUserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean supportsParameter(MethodParameter methodParameter) &#123;</span><br><span class="line">        return methodParameter.getParameterType().equals(CurrentUser.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Object resolveArgument(MethodParameter methodParameter, ModelAndViewContainer modelAndViewContainer, NativeWebRequest nativeWebRequest, WebDataBinderFactory webDataBinderFactory) throws Exception &#123;</span><br><span class="line">        HttpServletRequest request = nativeWebRequest.getNativeRequest(HttpServletRequest.class);</span><br><span class="line">        String openId = request.getHeader(&quot;openId&quot;);</span><br><span class="line">        CurrentUser currentUser = (CurrentUser) redisService.find(openId);</span><br><span class="line">        if(currentUser == null)&#123;</span><br><span class="line">            List&lt;HaierUser&gt; userList = userRepository.findByMobileAndUserState(openId, &quot;1&quot;);</span><br><span class="line">            if(userList.size() &gt; 0 )&#123;</span><br><span class="line">                currentUser = new CurrentUser();</span><br><span class="line">                BeanUtils.copyProperties(userList.get(0), currentUser);</span><br><span class="line">                redisService.add(openId, currentUser);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return currentUser;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>别忘了要将自定义的参数解析器配置到spring容器中，新建一个config类，继承<code>WebMvcConfigurationSupport</code>,，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.data.web.PageableHandlerMethodArgumentResolver;</span><br><span class="line">import org.springframework.web.method.support.HandlerMethodArgumentResolver;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport;</span><br><span class="line"></span><br><span class="line">import javax.annotation.Resource;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-08-03 16:23</span><br><span class="line"> * @desc $&#123;DESCRIPTION&#125;</span><br><span class="line"> **/</span><br><span class="line">@Configuration</span><br><span class="line">public class WebConfig extends WebMvcConfigurationSupport &#123;</span><br><span class="line">    @Resource</span><br><span class="line">    private CurrentUserArgumentResolver currentUserArgumentResolver;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void addArgumentResolvers(List&lt;HandlerMethodArgumentResolver&gt; argumentResolvers) &#123;</span><br><span class="line">        argumentResolvers.add(currentUserArgumentResolver);</span><br><span class="line"></span><br><span class="line">        // 注册Spring data jpa pageable的参数分解器</span><br><span class="line">        argumentResolvers.add(new PageableHandlerMethodArgumentResolver());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // swagger2 访问</span><br><span class="line">    @Override</span><br><span class="line">    public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class="line">        registry.addResourceHandler(&quot;swagger-ui.html&quot;)</span><br><span class="line">                .addResourceLocations(&quot;classpath:/META-INF/resources/&quot;);</span><br><span class="line">        registry.addResourceHandler(&quot;/**&quot;).addResourceLocations(&quot;classpath:/static/&quot;);</span><br><span class="line">        registry.addResourceHandler(&quot;/webjars/**&quot;)</span><br><span class="line">                .addResourceLocations(&quot;classpath:/META-INF/resources/webjars/&quot;);</span><br><span class="line">        super.addResourceHandlers(registry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后访问的controller里接收current这个参数，将变得如此简单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@GetMapping(&quot;/public/api/demo2&quot;)</span><br><span class="line">public Object getUser2(CurrentUser currentUser) &#123;</span><br><span class="line">    System.out.println(currentUser);</span><br><span class="line">    return new RtnResult&lt;&gt;(currentUser);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>检测结果<br><img src="https://upload-images.jianshu.io/upload_images/4109786-53f1ace69a388b40.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>贴上Current类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import lombok.Data;</span><br><span class="line">import lombok.ToString;</span><br><span class="line"></span><br><span class="line">import java.io.Serializable;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @Auther: marvin.mma</span><br><span class="line"> * @Date: 2018/8/3 14:38</span><br><span class="line"> * @return   </span><br><span class="line"> */</span><br><span class="line">@Data</span><br><span class="line">@ToString</span><br><span class="line">public class CurrentUser implements Serializable&#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line">    private String userId;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 手机号</span><br><span class="line">     */</span><br><span class="line">    private String mobile;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 邮箱</span><br><span class="line">     */</span><br><span class="line">    private String mail;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 用户工牌号</span><br><span class="line">     */</span><br><span class="line">    private String cardNo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 用户姓名</span><br><span class="line">     */</span><br><span class="line">    private String fullName;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 用户姓名拼音</span><br><span class="line">     */</span><br><span class="line">    private String fullNamePinyin;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>1、为什么不用拦截器或者过滤器？<br>拦截器或者过滤器都能实现获取request的header的openId，也能校验redis和数据库中有没有该数据，没有的话新建到数据库或者redis中，但是就是返回一个对象实现起来麻烦一些。上重点了，最主要是不是每个接口都需要根据openId获取用户信息，这样的话拦截器就有点多余了，配置哪些需要哪些不需要又太麻烦。所以使用方法参数解析器最合适了。</p><p>2、自定的方法参数解析器要创建一个继承<code>WebMvcConfigurationSupport</code>的配置类，然后添加到解析器中，否则是不会生效的。</p><p>3、在使用spring-data-jpa的框架里，因为使用了自定义解析器，导致了自带分分页不好使的问题，其原因是自定义解析器以后，往 <code>HandlerMethodArgumentResolver</code>里面添加了什么解析器，容器就有了什么解析器，没添加的不会默认添加了，因此需要手动添加,就是下面这样的意思<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.data.web.PageableHandlerMethodArgumentResolver;</span><br><span class="line">import org.springframework.http.converter.HttpMessageConverter;</span><br><span class="line">import org.springframework.http.converter.StringHttpMessageConverter;</span><br><span class="line">import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;</span><br><span class="line">import org.springframework.web.method.support.HandlerMethodArgumentResolver;</span><br><span class="line">import org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport;</span><br><span class="line"></span><br><span class="line">import com.fasterxml.jackson.core.JsonGenerator;</span><br><span class="line">import com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line">import com.fasterxml.jackson.databind.JsonSerializer;</span><br><span class="line">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line">import com.fasterxml.jackson.databind.SerializerProvider;</span><br><span class="line">import com.fasterxml.jackson.databind.module.SimpleModule;</span><br><span class="line">import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * </span><br><span class="line"> * @Auther: marvin.mma</span><br><span class="line"> * @Date: 2018/8/3 16:38</span><br><span class="line"> * @return   </span><br><span class="line"> */</span><br><span class="line">@Configuration</span><br><span class="line">public class WebConfig extends WebMvcConfigurationSupport &#123;</span><br><span class="line">@Override</span><br><span class="line">    protected void addArgumentResolvers(List&lt;HandlerMethodArgumentResolver&gt; argumentResolvers) &#123;</span><br><span class="line">        // 注册Spring data jpa pageable的参数分解器</span><br><span class="line">        argumentResolvers.add(new PageableHandlerMethodArgumentResolver());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">    protected void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) &#123;</span><br><span class="line">    MappingJackson2HttpMessageConverter jackson2HttpMessageConverter = new MappingJackson2HttpMessageConverter();</span><br><span class="line">    ObjectMapper objectMapper = new ObjectMapper();</span><br><span class="line">        /**</span><br><span class="line">         * 序列换成json时,将所有的long变成string</span><br><span class="line">         * 因为js中得数字类型不能包含所有的java long值</span><br><span class="line">         */</span><br><span class="line">        SimpleModule simpleModule = new SimpleModule();</span><br><span class="line">        simpleModule.addSerializer(Long.class, ToStringSerializer.instance);</span><br><span class="line">        simpleModule.addSerializer(Long.TYPE, ToStringSerializer.instance);</span><br><span class="line">        objectMapper.registerModule(simpleModule);</span><br><span class="line">        </span><br><span class="line">        // 将返回值null处理成空值</span><br><span class="line">        SerializerProvider serializerProvider = objectMapper.getSerializerProvider();</span><br><span class="line">        serializerProvider.setNullValueSerializer(new JsonSerializer&lt;Object&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void serialize(Object o, JsonGenerator jsonGenerator, SerializerProvider serializerProvider) throws IOException, JsonProcessingException &#123;</span><br><span class="line">            jsonGenerator.writeString(&quot;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        jackson2HttpMessageConverter.setObjectMapper(objectMapper);</span><br><span class="line">        converters.add(jackson2HttpMessageConverter);</span><br><span class="line">        converters.add(new StringHttpMessageConverter());</span><br><span class="line">//    super.configureMessageConverters(converters);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>该配置文件增加了两个json转换处理，顺便贴出来，知道在哪加怎么加就行，跟本文无关。</p><p>4、此处是以手机号举例的，实际生产中，视情况而定。</p><p>5、关于注解不生效的问题，Damon主要以Asyc和Transactional为例说明的，但是就其不生效的原因，<br><a href="https://www.jianshu.com/p/76c9ad71ade4" target="_blank" rel="noopener">玩转Spring —— 消失的事务</a>基本上讲明白了。</p><p>完美~~~</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker学习案例：用docker部署mysql服务</title>
      <link href="/2018/07/25/docker%E5%AD%A6%E4%B9%A0%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%94%A8docker%E9%83%A8%E7%BD%B2mysql%E6%9C%8D%E5%8A%A1/"/>
      <url>/2018/07/25/docker%E5%AD%A6%E4%B9%A0%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%94%A8docker%E9%83%A8%E7%BD%B2mysql%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>docker实际案例之在centOS7.4上用docker部署mysql服务<br><a href="https://www.jianshu.com/p/185840de08a8" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="一、使用docker-run命令直接启动一个mysql容器"><a href="#一、使用docker-run命令直接启动一个mysql容器" class="headerlink" title="一、使用docker run命令直接启动一个mysql容器"></a>一、使用docker run命令直接启动一个mysql容器</h3><h4 id="1-1-下载官方tomcat镜像"><a href="#1-1-下载官方tomcat镜像" class="headerlink" title="1.1 下载官方tomcat镜像"></a>1.1 下载官方tomcat镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@dev ~]# docker search mysql</span><br><span class="line">INDEX       NAME                                                             DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">docker.io   docker.io/mysql                                                  MySQL is a widely used, open-source relati...   6589      [OK]       </span><br><span class="line">docker.io   docker.io/mariadb                                                MariaDB is a community-developed fork of M...   2086      [OK]       </span><br><span class="line">docker.io   docker.io/mysql/mysql-server                                     Optimized MySQL Server Docker images. Crea...   484                  [OK]</span><br><span class="line">docker.io   docker.io/zabbix/zabbix-server-mysql                             Zabbix Server with MySQL database support       107                  [OK]</span><br><span class="line">docker.io   docker.io/hypriot/rpi-mysql                                      RPi-compatible Docker Image with Mysql          90                   </span><br><span class="line">docker.io   docker.io/zabbix/zabbix-web-nginx-mysql                          Zabbix frontend based on Nginx web-server ...   61                   [OK]</span><br><span class="line">docker.io   docker.io/centurylink/mysql                                      Image containing mysql. Optimized to be li...   60                   [OK]</span><br><span class="line">docker.io   docker.io/1and1internet/ubuntu-16-nginx-php-phpmyadmin-mysql-5   ubuntu-16-nginx-php-phpmyadmin-mysql-5          38                   [OK]</span><br><span class="line">docker.io   docker.io/tutum/mysql                                            Base docker image to run a MySQL database ...   32                   </span><br><span class="line">docker.io   docker.io/centos/mysql-57-centos7                                MySQL 5.7 SQL database server                   31                   </span><br><span class="line">docker.io   docker.io/mysql/mysql-cluster                                    Experimental MySQL Cluster Docker images. ...   31                   </span><br><span class="line">docker.io   docker.io/schickling/mysql-backup-s3                             Backup MySQL to S3 (supports periodic back...   20                   [OK]</span><br><span class="line">docker.io   docker.io/bitnami/mysql                                          Bitnami MySQL Docker Image                      15                   [OK]</span><br><span class="line">docker.io   docker.io/zabbix/zabbix-proxy-mysql                              Zabbix proxy with MySQL database support        15                   [OK]</span><br><span class="line">docker.io   docker.io/linuxserver/mysql                                      A Mysql container, brought to you by Linux...   14                   </span><br><span class="line">docker.io   docker.io/centos/mysql-56-centos7                                MySQL 5.6 SQL database server                   8                    </span><br><span class="line">docker.io   docker.io/circleci/mysql                                         MySQL is a widely used, open-source relati...   6                    </span><br><span class="line">docker.io   docker.io/openshift/mysql-55-centos7                             DEPRECATED: A Centos7 based MySQL v5.5 ima...   6                    </span><br><span class="line">docker.io   docker.io/dsteinkopf/backup-all-mysql                            backup all DBs in a mysql server                4                    [OK]</span><br><span class="line">docker.io   docker.io/frodenas/mysql                                         A Docker Image for MySQL                        2                    [OK]</span><br><span class="line">docker.io   docker.io/mysql/mysql-router                                     MySQL Router provides transparent routing ...   2                    </span><br><span class="line">docker.io   docker.io/openzipkin/zipkin-mysql                                Mirror of https://quay.io/repository/openz...   1                    </span><br><span class="line">docker.io   docker.io/ansibleplaybookbundle/mysql-apb                        An APB which deploys RHSCL MySQL                0                    [OK]</span><br><span class="line">docker.io   docker.io/cloudfoundry/cf-mysql-ci                               Image used in CI of cf-mysql-release            0                    </span><br><span class="line">docker.io   docker.io/cloudposse/mysql                                       Improved `mysql` service with support for ...   0                    [OK]</span><br><span class="line">[root@dev mysql]# docker pull mysql:5.7.19</span><br><span class="line">Trying to pull repository docker.io/library/mysql ... </span><br><span class="line">5.7.19: Pulling from docker.io/library/mysql</span><br><span class="line">85b1f47fba49: Pull complete </span><br><span class="line">27dc53f13a11: Pull complete </span><br><span class="line">095c8ae4182d: Pull complete </span><br><span class="line">0972f6b9a7de: Pull complete </span><br><span class="line">1b199048e1da: Pull complete </span><br><span class="line">159de3cf101e: Pull complete </span><br><span class="line">963d934c2fcd: Pull complete </span><br><span class="line">f4b66a97a0d0: Pull complete </span><br><span class="line">f34057997f40: Pull complete </span><br><span class="line">ca1db9a06aa4: Pull complete </span><br><span class="line">0f913cb2cc0c: Pull complete </span><br><span class="line">Digest: sha256:bfb22e93ee87c6aab6c1c9a4e7cdc68e9cb9b64920f28fa289f9ffae9fe8e173</span><br><span class="line">Status: Downloaded newer image for docker.io/mysql:5.7.19</span><br><span class="line">[root@dev mysql]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">marvin/tomcat       latest              098f61ab6f8b        22 hours ago        489 MB</span><br><span class="line">nginx_image1        latest              c4d5f5accc06        24 hours ago        109 MB</span><br><span class="line">docker.io/tomcat    latest              2d43521f2b1a        6 days ago          463 MB</span><br><span class="line">docker.io/nginx     latest              8b89e48b5f15        7 days ago          109 MB</span><br><span class="line">docker.io/mysql     5.7.19              3e3878acd190        9 months ago        412 MB</span><br><span class="line">[root@dev mysql]#</span><br></pre></td></tr></table></figure><h4 id="1-2-创建用于挂载的目录"><a href="#1-2-创建用于挂载的目录" class="headerlink" title="1.2 创建用于挂载的目录"></a>1.2 创建用于挂载的目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@dev local]# pwd</span><br><span class="line">/usr/local</span><br><span class="line">[root@dev local]# mkdir mysql</span><br><span class="line">[root@dev local]# mkdir mysql/data</span><br><span class="line">[root@dev local]# mkdir mysql/conf.d</span><br><span class="line">[root@dev local]# cd mysql/</span><br><span class="line">[root@dev mysql]# ll</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x 2 root root 4096 Jul 24 14:18 conf.d</span><br><span class="line">drwxr-xr-x 2 root root 4096 Jul 24 14:18 data</span><br><span class="line">[root@dev mysql]#</span><br></pre></td></tr></table></figure><p>命令解析：<br>mkdir /usr/local/mysql/data      #用于挂载mysql数据文件<br>mkdir /usr/local/mysql/conf.d    #用于挂载mysql配置文件</p><h4 id="1-3-启动容器"><a href="#1-3-启动容器" class="headerlink" title="1.3 启动容器"></a>1.3 启动容器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@dev mysql]# docker run --name mysql5.7 -p 3306:3306 -v /usr/local/mysql/data:/var/lib/mysql -v /usr/local/mysql/conf.d:/etc/mysql/conf.d  -e MYSQL_ROOT_PASSWORD=112233 -d mysql:5.7.19</span><br><span class="line">10151eef645f8621441585354ad11d1f98514cdb253c5d1b77db6c0c50327420</span><br><span class="line">[root@dev mysql]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">10151eef645f        mysql:5.7.19        &quot;docker-entrypoint...&quot;   3 seconds ago       Up 2 seconds        0.0.0.0:3306-&gt;3306/tcp   mysql5.7</span><br><span class="line">6f189daf5880        marvin/tomcat       &quot;catalina.sh run&quot;        22 hours ago        Up 22 hours         0.0.0.0:8080-&gt;8080/tcp   tomcat8</span><br><span class="line">[root@dev mysql]#</span><br></pre></td></tr></table></figure><p>其他参数：</p><blockquote><p>–restart always：开机启动<br>–privileged=true：提升容器内权限<br>-e MYSQL_USER=”marvin”：添加用户marvin<br>-e MYSQL_PASSWORD=”pwd123”：设置marvin的密码伟pwd123<br>-e MYSQL_ROOT_PASSWORD=”rootpwd123”：设置root的密码伟rootpwd123<br>–character-set-server=utf8：设置字符集为utf8<br>–collation-server=utf8_general_ci：设置字符比较规则为utf8_general_ci</p></blockquote><p>注意：如果运行时添加了marvin用户，用root登录后执行用户授权<code>ALTER USER &#39;marvin&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;password123&#39;;</code>，才能用远程客户端访问数据库。</p><h4 id="1-4-检查结果"><a href="#1-4-检查结果" class="headerlink" title="1.4 检查结果"></a>1.4 检查结果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@dev mysql]# docker exec -it mysql5.7 mysql -uroot -p112233</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 9</span><br><span class="line">Server version: 8.0.11 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>成功安装mysql</p><h4 id="1-5-设置远程客户端登录"><a href="#1-5-设置远程客户端登录" class="headerlink" title="1.5 设置远程客户端登录"></a>1.5 设置远程客户端登录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all privileges on *.* to root@&quot;%&quot; identified by &quot;root.123&quot; with grant option;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/4109786-75ca16841f9a7f3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="远程客户端链接"></p><p>通过客户端创建数据一个数据库，创建一张表<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a66e05bb4d0561b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>在server端用命令行查看:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| demo               |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use demo;</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+----------------+</span><br><span class="line">| Tables_in_demo |</span><br><span class="line">+----------------+</span><br><span class="line">| test           |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from test;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></p><p>再看宿主机文件目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@dev data]# pwd</span><br><span class="line">/usr/local/mysql/data</span><br><span class="line">[root@dev data]# ll</span><br><span class="line">total 188480</span><br><span class="line">-rw-r----- 1 polkitd ssh_keys       56 Jul 24 16:46 auto.cnf</span><br><span class="line">-rw------- 1 polkitd ssh_keys     1675 Jul 24 16:46 ca-key.pem</span><br><span class="line">-rw-r--r-- 1 polkitd ssh_keys     1074 Jul 24 16:46 ca.pem</span><br><span class="line">-rw-r--r-- 1 polkitd ssh_keys     1078 Jul 24 16:46 client-cert.pem</span><br><span class="line">-rw------- 1 polkitd ssh_keys     1675 Jul 24 16:46 client-key.pem</span><br><span class="line">drwxr-x--- 2 polkitd ssh_keys     4096 Jul 24 16:52 demo</span><br><span class="line">-rw-r----- 1 polkitd ssh_keys     1321 Jul 24 16:46 ib_buffer_pool</span><br><span class="line">-rw-r----- 1 polkitd ssh_keys 79691776 Jul 24 16:52 ibdata1</span><br><span class="line">-rw-r----- 1 polkitd ssh_keys 50331648 Jul 24 16:52 ib_logfile0</span><br><span class="line">-rw-r----- 1 polkitd ssh_keys 50331648 Jul 24 16:46 ib_logfile1</span><br><span class="line">-rw-r----- 1 polkitd ssh_keys 12582912 Jul 24 16:52 ibtmp1</span><br><span class="line">drwxr-x--- 2 polkitd ssh_keys     4096 Jul 24 16:46 mysql</span><br><span class="line">drwxr-x--- 2 polkitd ssh_keys     4096 Jul 24 16:46 performance_schema</span><br><span class="line">-rw------- 1 polkitd ssh_keys     1675 Jul 24 16:46 private_key.pem</span><br><span class="line">-rw-r--r-- 1 polkitd ssh_keys      451 Jul 24 16:46 public_key.pem</span><br><span class="line">-rw-r--r-- 1 polkitd ssh_keys     1078 Jul 24 16:46 server-cert.pem</span><br><span class="line">-rw------- 1 polkitd ssh_keys     1675 Jul 24 16:46 server-key.pem</span><br><span class="line">drwxr-x--- 2 polkitd ssh_keys    12288 Jul 24 16:46 sys</span><br><span class="line">[root@dev data]#</span><br></pre></td></tr></table></figure></p><p>完美！</p><h3 id="二、-使用dockerfile启动mysql容器"><a href="#二、-使用dockerfile启动mysql容器" class="headerlink" title="二、 使用dockerfile启动mysql容器"></a>二、 使用dockerfile启动mysql容器</h3><h4 id="2-1、编写docker-file"><a href="#2-1、编写docker-file" class="headerlink" title="2.1、编写docker file"></a>2.1、编写docker file</h4><p>在当前目录（/usr/local/mysql/）创建dockerfile文件，编辑内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">FROM docker.io/mysql:5.7.19</span><br><span class="line"> </span><br><span class="line">#设置免密登录</span><br><span class="line">ENV MYSQL_ALLOW_EMPTY_PASSWORD yes</span><br><span class="line"> </span><br><span class="line">#将所需文件放到容器中</span><br><span class="line">COPY setup.sh /mysql/setup.sh</span><br><span class="line">COPY schema.sql /mysql/schema.sql</span><br><span class="line">COPY privileges.sql /mysql/privileges.sql</span><br><span class="line">COPY conf.d /etc/mysql/conf.d</span><br><span class="line">RUN chmod 755 /mysql/*.sh</span><br><span class="line"></span><br><span class="line"># 设置可以允许挂载的卷，可以用来备份数据库和配置文件</span><br><span class="line"># VOLUME  /usr/local/mysql/data</span><br><span class="line"></span><br><span class="line"># 设置可以映射的端口</span><br><span class="line">EXPOSE 3306</span><br><span class="line"> </span><br><span class="line">#设置容器启动时执行的命令</span><br><span class="line">CMD [&quot;sh&quot;, &quot;/mysql/setup.sh&quot;]</span><br></pre></td></tr></table></figure></p><h4 id="2-2、写容器启动脚本setup-sh和配置文件。"><a href="#2-2、写容器启动脚本setup-sh和配置文件。" class="headerlink" title="2.2、写容器启动脚本setup.sh和配置文件。"></a>2.2、写容器启动脚本setup.sh和配置文件。</h4><p>setup.sh内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">set -e</span><br><span class="line"> </span><br><span class="line">#查看mysql服务的状态，方便调试，这条语句可以删除</span><br><span class="line">echo `service mysql status`</span><br><span class="line"> </span><br><span class="line">echo &apos;1.启动mysql....&apos;</span><br><span class="line">#启动mysql</span><br><span class="line">service mysql start</span><br><span class="line">sleep 3</span><br><span class="line">echo `service mysql status`</span><br><span class="line"> </span><br><span class="line">echo &apos;2.开始导入数据....&apos;</span><br><span class="line">#导入数据</span><br><span class="line">mysql &lt; /mysql/schema.sql</span><br><span class="line">echo &apos;3.导入数据完毕....&apos;</span><br><span class="line"> </span><br><span class="line">sleep 3</span><br><span class="line">echo `service mysql status`</span><br><span class="line"> </span><br><span class="line">#重新设置mysql密码</span><br><span class="line">echo &apos;4.开始修改密码....&apos;</span><br><span class="line">mysql &lt; /mysql/privileges.sql</span><br><span class="line">echo &apos;5.修改密码完毕....&apos;</span><br><span class="line"> </span><br><span class="line">#sleep 3</span><br><span class="line">echo `service mysql status`</span><br><span class="line">echo `mysql容器启动完毕,且数据导入成功`</span><br><span class="line"> </span><br><span class="line">tail -f /dev/null</span><br></pre></td></tr></table></figure></p><p>设置可执行权限：</p><blockquote><p>chmod  u+x setup.sh</p></blockquote><p>这里是先导入数据，然后才是设置用户和权限，是因为mysql容器一开始为免密登录，Dockerfile中有如下设置：ENV MYSQL_ALLOW_EMPTY_PASSWORD yes,此时执行导入数据命令不需要登录验证操作，如果是先执行权限操作，那么导入数据则需要登录验证，整个过程就麻烦了许多。</p><p>conf.d目录下创建配置文件<code>my.cnf</code>,内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-client-handshake = FALSE</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">collation-server = utf8mb4_unicode_ci</span><br><span class="line">init_connect=’SET NAMES utf8mb4&apos;</span><br><span class="line">max_allowed_packet=100M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure></p><h4 id="2-3、需要导入数据的mysql脚本命令schema-sql："><a href="#2-3、需要导入数据的mysql脚本命令schema-sql：" class="headerlink" title="2.3、需要导入数据的mysql脚本命令schema.sql："></a>2.3、需要导入数据的mysql脚本命令schema.sql：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">-- 创建数据库</span><br><span class="line">create database `docker_mysql` default character set utf8 collate utf8_general_ci;</span><br><span class="line"> </span><br><span class="line">use docker_mysql;</span><br><span class="line"> </span><br><span class="line">-- 建表</span><br><span class="line">DROP TABLE IF EXISTS `user`;</span><br><span class="line"> </span><br><span class="line">CREATE TABLE `user` (</span><br><span class="line"> `id` bigint(20) NOT NULL,</span><br><span class="line"> `created_at` bigint(40) DEFAULT NULL,</span><br><span class="line"> `last_modified` bigint(40) DEFAULT NULL,</span><br><span class="line"> `email` varchar(255) DEFAULT NULL,</span><br><span class="line"> `first_name` varchar(255) DEFAULT NULL,</span><br><span class="line"> `last_name` varchar(255) DEFAULT NULL,</span><br><span class="line"> `username` varchar(255) DEFAULT NULL,</span><br><span class="line"> PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1;</span><br><span class="line"> </span><br><span class="line">-- 插入数据</span><br><span class="line">INSERT INTO `user` (`id`, `created_at`, `last_modified`, `email`, `first_name`, `last_name`, `username`)</span><br><span class="line">VALUES</span><br><span class="line">  (0,1490257904,1490257904,&apos;john.doe@example.com&apos;,&apos;John&apos;,&apos;Doe&apos;,&apos;user&apos;);</span><br></pre></td></tr></table></figure><p>因为是测试，所以随便写了一个建表语句，如果是真实项目肯定不止这一张表，直接将建表语句覆盖过来就好。</p><h4 id="2-4、mysql权限设置命令privileges-sql："><a href="#2-4、mysql权限设置命令privileges-sql：" class="headerlink" title="2.4、mysql权限设置命令privileges.sql："></a>2.4、mysql权限设置命令privileges.sql：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">select host, user from user;</span><br><span class="line">-- 因为mysql版本是5.7，因此新建用户为如下命令：</span><br><span class="line">create user docker identified by &apos;123456&apos;;</span><br><span class="line">-- 将docker_mysql数据库的权限授权给创建的docker用户，密码为123456：</span><br><span class="line">grant all on docker_mysql.* to docker@&apos;%&apos; identified by &apos;123456&apos; with grant option;</span><br><span class="line"></span><br><span class="line">-- 创建root用户，设置密码</span><br><span class="line">create user root identified by &apos;root.123&apos;;</span><br><span class="line">-- 授权root用户所有数据库密码</span><br><span class="line">grant all privileges on *.* to root@&quot;%&quot; identified by &quot;root.123&quot; with grant option;</span><br><span class="line"></span><br><span class="line">-- 这一条命令一定要有：</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h4 id="2-5、创建镜像docker-build-t-marvin-docker-mysql-5-7-19"><a href="#2-5、创建镜像docker-build-t-marvin-docker-mysql-5-7-19" class="headerlink" title="2.5、创建镜像docker build -t marvin/docker-mysql:5.7.19 ."></a>2.5、创建镜像<code>docker build -t marvin/docker-mysql:5.7.19 .</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[root@dev mysql]# ll</span><br><span class="line">total 28</span><br><span class="line">drwxr-xr-x 2 root    root     4096 Jul 24 19:16 conf.d</span><br><span class="line">drwxr-xr-x 6 polkitd ssh_keys 4096 Jul 26 09:52 data</span><br><span class="line">drwxr-xr-x 2 root    root     4096 Jul 26 12:02 datadir</span><br><span class="line">-rw-r--r-- 1 root    root      504 Jul 26 12:41 dockerfile</span><br><span class="line">-rw-r--r-- 1 root    root      578 Jul 24 18:38 privileges.sql</span><br><span class="line">-rw-r--r-- 1 root    root      713 Jul 24 17:59 schema.sql</span><br><span class="line">-rwxr--r-- 1 root    root      592 Jul 24 18:02 setup.sh</span><br><span class="line">[root@dev mysql]# rm -rf datadir/</span><br><span class="line">[root@dev mysql]# ll</span><br><span class="line">total 24</span><br><span class="line">drwxr-xr-x 2 root    root     4096 Jul 24 19:16 conf.d</span><br><span class="line">drwxr-xr-x 6 polkitd ssh_keys 4096 Jul 26 09:52 data</span><br><span class="line">-rw-r--r-- 1 root    root      504 Jul 26 12:41 dockerfile</span><br><span class="line">-rw-r--r-- 1 root    root      578 Jul 24 18:38 privileges.sql</span><br><span class="line">-rw-r--r-- 1 root    root      713 Jul 24 17:59 schema.sql</span><br><span class="line">-rwxr--r-- 1 root    root      592 Jul 24 18:02 setup.sh</span><br><span class="line">[root@dev mysql]# docker build -t marvin/docker-mysql:5.7.19 .</span><br><span class="line">Sending build context to Docker daemon 219.8 MB</span><br><span class="line">Step 1/9 : FROM docker.io/mysql:5.7.19</span><br><span class="line"> ---&gt; 3e3878acd190</span><br><span class="line">Step 2/9 : ENV MYSQL_ALLOW_EMPTY_PASSWORD yes</span><br><span class="line"> ---&gt; Running in 12565f8c0c75</span><br><span class="line"> ---&gt; c3603b8b0ce0</span><br><span class="line">Removing intermediate container 12565f8c0c75</span><br><span class="line">Step 3/9 : COPY setup.sh /mysql/setup.sh</span><br><span class="line"> ---&gt; 25f810745d6e</span><br><span class="line">Removing intermediate container c87437761955</span><br><span class="line">Step 4/9 : COPY schema.sql /mysql/schema.sql</span><br><span class="line"> ---&gt; 6336d1ec2e5c</span><br><span class="line">Removing intermediate container d18c0faf05e2</span><br><span class="line">Step 5/9 : COPY privileges.sql /mysql/privileges.sql</span><br><span class="line"> ---&gt; 909fd9a0147e</span><br><span class="line">Removing intermediate container 597ba357c5dd</span><br><span class="line">Step 6/9 : COPY conf.d /etc/mysql/conf.d</span><br><span class="line"> ---&gt; 0df0b1a8419a</span><br><span class="line">Removing intermediate container 5495b6697f5a</span><br><span class="line">Step 7/9 : RUN chmod 755 /mysql/*.sh</span><br><span class="line"> ---&gt; Running in 648c99da183d</span><br><span class="line"></span><br><span class="line"> ---&gt; 9637b6b5e125</span><br><span class="line">Removing intermediate container 648c99da183d</span><br><span class="line">Step 8/9 : EXPOSE 3306</span><br><span class="line"> ---&gt; Running in 0b4514d7ffcc</span><br><span class="line"> ---&gt; 0acd4a3a39a6</span><br><span class="line">Removing intermediate container 0b4514d7ffcc</span><br><span class="line">Step 9/9 : CMD sh /mysql/setup.sh</span><br><span class="line"> ---&gt; Running in 9cc069e6e6aa</span><br><span class="line"> ---&gt; effcf5bab4c1</span><br><span class="line">Removing intermediate container 9cc069e6e6aa</span><br><span class="line">Successfully built effcf5bab4c1</span><br><span class="line">[root@dev mysql]# </span><br><span class="line">[root@dev mysql]# docker images</span><br><span class="line">REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">marvin/docker-mysql   5.7.19              effcf5bab4c1        27 seconds ago      412 MB</span><br><span class="line">marvin/tomcat         latest              098f61ab6f8b        2 days ago          489 MB</span><br><span class="line">nginx_image1          latest              c4d5f5accc06        2 days ago          109 MB</span><br><span class="line">docker.io/tomcat      latest              2d43521f2b1a        8 days ago          463 MB</span><br><span class="line">docker.io/nginx       latest              8b89e48b5f15        9 days ago          109 MB</span><br><span class="line">docker.io/mysql       5.7.19              3e3878acd190        9 months ago        412 MB</span><br><span class="line">[root@dev mysql]#</span><br></pre></td></tr></table></figure><h4 id="2-6、启动容器docker-run-d-p-13306-3306-v-usr-local-mysql-datadir-var-lib-mysql-marvin-docker-mysql-5-7-19"><a href="#2-6、启动容器docker-run-d-p-13306-3306-v-usr-local-mysql-datadir-var-lib-mysql-marvin-docker-mysql-5-7-19" class="headerlink" title="2.6、启动容器docker run -d -p 13306:3306 -v /usr/local/mysql/datadir:/var/lib/mysql marvin/docker-mysql:5.7.19"></a>2.6、启动容器<code>docker run -d -p 13306:3306 -v /usr/local/mysql/datadir:/var/lib/mysql marvin/docker-mysql:5.7.19</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@dev mysql]# docker run -d -p 13306:3306 -v /usr/local/mysql/datadir:/var/lib/mysql marvin/docker-mysql:5.7.19</span><br><span class="line">e55a41a9ace4fb09db5af3e77fab257764f938ffe2f7221ec312bf624f41543e</span><br><span class="line">[root@dev mysql]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">e55a41a9ace4        marvin/docker-mysql:5.7.19   &quot;docker-entrypoint...&quot;   4 seconds ago       Up 3 seconds        0.0.0.0:13306-&gt;3306/tcp   inspiring_bassi</span><br><span class="line">831da6f83e21        mysql:5.7.19                 &quot;docker-entrypoint...&quot;   2 hours ago         Up 2 hours          0.0.0.0:3306-&gt;3306/tcp    mysql5.7</span><br><span class="line">6f189daf5880        marvin/tomcat                &quot;catalina.sh run&quot;        2 days ago          Up 2 days           0.0.0.0:8080-&gt;8080/tcp    tomcat8</span><br><span class="line">[root@dev mysql]#</span><br></pre></td></tr></table></figure><h4 id="2-7、检查结果docker-exec-it-e55a41a9ace4-mysql-udocker-p123456"><a href="#2-7、检查结果docker-exec-it-e55a41a9ace4-mysql-udocker-p123456" class="headerlink" title="2.7、检查结果docker exec -it e55a41a9ace4 mysql -udocker -p123456"></a>2.7、检查结果<code>docker exec -it e55a41a9ace4 mysql -udocker -p123456</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@dev mysql]# docker exec -it e55a41a9ace4 mysql -udocker -p123456            </span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 5</span><br><span class="line">Server version: 5.7.19 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| docker_mysql       |</span><br><span class="line">+--------------------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use docker_mysql</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line">+------------------------+</span><br><span class="line">| Tables_in_docker_mysql |</span><br><span class="line">+------------------------+</span><br><span class="line">| user                   |</span><br><span class="line">+------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h4 id="2-8、远程登录"><a href="#2-8、远程登录" class="headerlink" title="2.8、远程登录"></a>2.8、远程登录</h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-82351f9aa24172a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>用客户端链接后创建了数据库，然后重新启动docker，数据仍然在。完美~~~</p><h3 id="美中不足"><a href="#美中不足" class="headerlink" title="美中不足"></a>美中不足</h3><p>1、找不到mysql.sock<br>在实践过程中也碰到了比较恶心的问题，就是启动时老是找不到mysql.sock，最开始在my.cnf里没有配置socket的路径，这样没问题。</p><p>但是不知道默认的mysql.sock的容器里是在什么路径上；</p><p>于是在my.cnf配置文件里加上这个配置<code>socket=/var/lib/mysql/mysql.sock</code>;</p><p>启动的时候就怎么都会报错了<br>错误信息大概是这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/var/lib/mysql/mysql.sock&apos; (2)</span><br></pre></td></tr></table></figure></p><p>然后将配置改为<code>socket=/tmp/mysql.sock</code><br>启动的时候又变成这样了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@dev mysql]# docker run -p 13306:3306 -v /usr/local/mysql/datadir:/var/lib/mysql marvin/docker-mysql</span><br><span class="line">MySQL Community Server 5.7.19 is not running.</span><br><span class="line">1.启动mysql....</span><br><span class="line">..</span><br><span class="line">MySQL Community Server 5.7.19 is started.</span><br><span class="line">MySQL Community Server 5.7.19 is running.</span><br><span class="line">2.开始导入数据....</span><br><span class="line">ERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/tmp/mysql.sock&apos; (2)</span><br></pre></td></tr></table></figure></p><p><code>docker stop</code> <code>docker rm</code>  <code>docker rmi</code> <code>docker build</code> 又重新<code>docker run</code><br>反复了一上午。<br>最后还是没办法，把配置文件中的sock的配置给删除了。</p><p>正常启动后查知sock的路径默认的原来是<code>/var/run/mysqld</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@63d3f0b5ea07:/var/run/mysqld# pwd</span><br><span class="line">/var/run/mysqld</span><br><span class="line">root@63d3f0b5ea07:/var/run/mysqld# ls</span><br><span class="line">mysqld.pid  mysqld.sock  mysqld.sock.lock</span><br><span class="line">root@63d3f0b5ea07:/var/run/mysqld#</span><br></pre></td></tr></table></figure></p><p>应该能修改，不过不想折腾了。</p><p>2、如果挂载了数据持久化的数据卷，再次build容器，启动时会报创建用户失败等，因为已有用户了。<br>因此如果是二次运行，要么删除掉持久化的数据，要么修改setup.sh脚本，不要再执行privileges.sql和schema.sql。</p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>生产环境中可能数据库要做主从、读写分离等等，但是因为数据是要共享的，所以有可能用到下知识.</p><h5 id="数据共享"><a href="#数据共享" class="headerlink" title="数据共享"></a>数据共享</h5><p>如果要授权一个容器访问另一个容器的Volume，我们可以使用<code>-volumes-from</code>参数来执行<code>docker run</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it -h NEWCONTAINER --volumes-from container-test debian /bin/bash</span><br><span class="line">root@NEWCONTAINER:/# ls /data</span><br><span class="line">test-file</span><br><span class="line">root@NEWCONTAINER:/#</span><br></pre></td></tr></table></figure></p><p>值得注意的是不管container-test是否运行，它都会起作用。只要有容器连接Volume，它就不会被删除。</p><h5 id="数据容器"><a href="#数据容器" class="headerlink" title="数据容器"></a>数据容器</h5><p>常见的使用场景是使用纯数据容器来持久化数据库、配置文件或者数据文件等。<a href="https://docs.docker.com/userguide/dockervolumes/" target="_blank" rel="noopener">官方的文档</a>上有详细的解释。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /dbdata:/dbdata --name dbdata centos</span><br></pre></td></tr></table></figure><p>该命令将会创建一个已经包含在Dockerfile里定义过Volume的postgres镜像，运行<code>echo</code>命令然后退出。当我们运行<code>docker ps</code>命令时，<code>echo</code>可以帮助我们识别某镜像的用途。我们可以用<code>-volumes-from</code>命令来识别其它容器的Volume：</p><p>创建db1和db2两个容器，并使用–volumes-from挂载dbdata容器中的数据卷<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@wls12c /]$ docker run -it --volumes-from dbdata --name db1 centos</span><br><span class="line">[root@wls12c /]$ docker run -it --volumes-from dbdata --name db2 centos</span><br></pre></td></tr></table></figure></p><p>这样三个容器任何一个容器在该目录下写入，其它容器都能看见。</p><p>使用数据容器的两个注意点：</p><ul><li>不要运行数据容器，这纯粹是在浪费资源。</li><li>不要为了数据容器而使用“最小的镜像”，如<code>busybox</code>或<code>scratch</code>，只使用数据库镜像本身就可以了。你已经拥有该镜像，所以并不需要占用额外的空间。</li></ul><h5 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h5><p>备份dbdata数据卷容器中的数据到主机的当前目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@wls12c /]$ docker run --volumes-from dbdata -v $(pwd):/backup --name worker centos tar zcf /backup/backup.tar.gz /dbdata</span><br><span class="line">tar: Removing leading `/&apos; from member names</span><br><span class="line">[root@wls12c /]$ ls</span><br><span class="line">b2b            boot    dev   lib         media  net   root     srv   tmp</span><br><span class="line">backup.tar.gz  cgroup  etc   lib64       misc   opt   sbin     sys   usr</span><br><span class="line">bin            dbdata  home  lost+found  mnt    proc  selinux  test  var</span><br><span class="line">[root@wls12c /]$ tar -tvf backup.tar.gz </span><br><span class="line">drwxr-xr-x root/root         0 2016-08-26 10:51 dbdata/</span><br><span class="line">-rw-r--r-- root/root         0 2016-08-26 10:40 dbdata/demo</span><br><span class="line">-rw-r--r-- root/root         6 2016-08-26 10:48 dbdata/test.txt</span><br><span class="line">-rw-r--r-- root/root         0 2016-08-26 10:51 dbdata/hello</span><br></pre></td></tr></table></figure><h5 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h5><p>创建一个带有数据卷的容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@wls12c /]$ docker run -v /dbdata/dbdata --name db centos /bin/bash</span><br></pre></td></tr></table></figure></p><p>恢复<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@wls12c /]$ docker run --volumes-from db -v $(pwd):/backup  centos tar xf /backup/backup.tar.gz</span><br></pre></td></tr></table></figure></p><h5 id="权限与许可"><a href="#权限与许可" class="headerlink" title="权限与许可"></a>权限与许可</h5><p>通常你需要设置Volume的权限或者为Volume初始化一些默认数据或者配置文件。要注意的关键点是，在Dockerfile的<code>VOLUME</code>指令后的任何东西都不能改变该Volume，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:wheezy</span><br><span class="line">RUN useradd foo</span><br><span class="line">VOLUME /data</span><br><span class="line">RUN touch /data/x</span><br><span class="line">RUN chown -R foo:foo /data</span><br></pre></td></tr></table></figure></p><p>该Docker file不能按预期那样运行，我们本来希望<code>touch</code>命令在镜像的文件系统上运行，但是实际上它是在一个临时容器的Volume上运行。如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM debian:wheezy</span><br><span class="line">RUN useradd foo</span><br><span class="line">RUN mkdir /data &amp;&amp; touch /data/x</span><br><span class="line">RUN chown -R foo:foo /data</span><br><span class="line">VOLUME /data</span><br></pre></td></tr></table></figure><p>Docker可以将镜像中Volume下的文件挂载到Volume下，并设置正确的权限。如果你指定Volume的主机目录将不会出现这种情况。</p><p>如果你没有通过<code>RUN</code>指令设置权限，那么你就需要在容器启动时使用<code>CMD</code>或<code>ENTRYPOINT</code>指令来执行（译者注：CMD指令用于指定一个容器启动时要运行的命令，与RUN类似，只是RUN是镜像在构建时要运行的命令）。</p><h5 id="删除Volumes"><a href="#删除Volumes" class="headerlink" title="删除Volumes"></a>删除Volumes</h5><p>这个功能可能会更加重要，如果你已经使用<code>docker rm</code>来删除你的容器，那可能有很多的孤立的Volume仍在占用着空间。</p><p>Volume只有在下列情况下才能被删除：</p><ul><li>该容器是用<code>docker rm －v</code>命令来删除的（<code>-v</code>是必不可少的）。</li><li><code>docker run</code>中使用了<code>--rm</code>参数</li></ul><p>即使用以上两种命令，也只能删除没有容器连接的Volume。连接到用户指定主机目录的Volume永远不会被docker删除。</p><p>除非你已经很小心的，总是像这样来运行容器，否则你将会在<code>/var/lib/docker/vfs/dir</code>目录下得到一些僵尸文件和目录，并且还不容易说出它们到底代表什么。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.jb51.net/article/115422.htm" target="_blank" rel="noopener">详解利用Dockerfile构建mysql镜像并实现数据的初始化及权限设置</a><br><a href="http://blog.51cto.com/sf1314/2047686" target="_blank" rel="noopener">基于Dockerfile构建mysqld服务镜像</a><br><a href="https://www.cnblogs.com/andyfengzp/p/6424150.html" target="_blank" rel="noopener">dockerfile 实例</a><br><a href="https://blog.csdn.net/weixin_40539892/article/details/79567422" target="_blank" rel="noopener">找不到mysql.sock的错误详解</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker学习案例：用docker部署tomcat服务</title>
      <link href="/2018/07/23/docker%E5%AD%A6%E4%B9%A0%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%94%A8docker%E9%83%A8%E7%BD%B2tomcat%E6%9C%8D%E5%8A%A1/"/>
      <url>/2018/07/23/docker%E5%AD%A6%E4%B9%A0%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%94%A8docker%E9%83%A8%E7%BD%B2tomcat%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>docker实际案例之在centOS7.4上用docker部署tomcat服务<br><a href="https://www.jianshu.com/p/2c3cbd1dfb08" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="一、使用docker-run命令直接启动一个tomcat容器"><a href="#一、使用docker-run命令直接启动一个tomcat容器" class="headerlink" title="一、使用docker run命令直接启动一个tomcat容器"></a>一、使用docker run命令直接启动一个tomcat容器</h3><h4 id="1-1-下载官方tomcat镜像"><a href="#1-1-下载官方tomcat镜像" class="headerlink" title="1.1 下载官方tomcat镜像"></a>1.1 下载官方tomcat镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[root@dev nginx]# docker search tomcat</span><br><span class="line">INDEX       NAME                                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">docker.io   docker.io/tomcat                                Apache Tomcat is an open source implementa...   1942      [OK]       </span><br><span class="line">docker.io   docker.io/tomee                                 Apache TomEE is an all-Apache Java EE cert...   51        [OK]       </span><br><span class="line">docker.io   docker.io/dordoka/tomcat                        Ubuntu 14.04, Oracle JDK 8 and Tomcat 8 ba...   49                   [OK]</span><br><span class="line">docker.io   docker.io/davidcaste/alpine-tomcat              Apache Tomcat 7/8 using Oracle Java 7/8 wi...   27                   [OK]</span><br><span class="line">docker.io   docker.io/bitnami/tomcat                        Bitnami Tomcat Docker Image                     19                   [OK]</span><br><span class="line">docker.io   docker.io/consol/tomcat-7.0                     Tomcat 7.0.57, 8080, &quot;admin/admin&quot;              16                   [OK]</span><br><span class="line">docker.io   docker.io/cloudesire/tomcat                     Tomcat server, 6/7/8                            15                   [OK]</span><br><span class="line">docker.io   docker.io/tutum/tomcat                          Base docker image to run a Tomcat applicat...   10                   </span><br><span class="line">docker.io   docker.io/meirwa/spring-boot-tomcat-mysql-app   a sample spring-boot app using tomcat and ...   9                    [OK]</span><br><span class="line">docker.io   docker.io/jeanblanchard/tomcat                  Minimal Docker image with Apache Tomcat         8                    </span><br><span class="line">docker.io   docker.io/aallam/tomcat-mysql                   Debian, Oracle JDK, Tomcat &amp; MySQL              7                    [OK]</span><br><span class="line">docker.io   docker.io/rightctrl/tomcat                      CentOS , Oracle Java, tomcat application s...   3                    [OK]</span><br><span class="line">docker.io   docker.io/amd64/tomcat                          Apache Tomcat is an open source implementa...   2                    </span><br><span class="line">docker.io   docker.io/arm64v8/tomcat                        Apache Tomcat is an open source implementa...   2                    </span><br><span class="line">docker.io   docker.io/fabric8/tomcat-8                      Fabric8 Tomcat 8 Image                          2                    [OK]</span><br><span class="line">docker.io   docker.io/maluuba/tomcat7-java8                 Tomcat7 with java8.                             2                    </span><br><span class="line">docker.io   docker.io/99taxis/tomcat7                       Tomcat7                                         1                    [OK]</span><br><span class="line">docker.io   docker.io/camptocamp/tomcat-logback             Docker image for tomcat with logback integ...   1                    [OK]</span><br><span class="line">docker.io   docker.io/primetoninc/tomcat                    Apache tomcat 8.5, 8.0, 7.0                     1                    [OK]</span><br><span class="line">docker.io   docker.io/jelastic/tomcat                                                                       0                    </span><br><span class="line">docker.io   docker.io/oobsri/tomcat8                        Testing CI Jobs with different names.           0                    </span><br><span class="line">docker.io   docker.io/picoded/tomcat7                       tomcat7 with jre8 and MANAGER_USER / MANAG...   0                    [OK]</span><br><span class="line">docker.io   docker.io/s390x/tomcat                          Apache Tomcat is an open source implementa...   0                    </span><br><span class="line">docker.io   docker.io/swisstopo/service-print-tomcat        backend tomcat for service-print &quot;the true...   0                    </span><br><span class="line">docker.io   docker.io/trollin/tomcat                                                                        0                    </span><br><span class="line">[root@dev nginx]# docker pull docker.io/tomcat</span><br><span class="line">Using default tag: latest</span><br><span class="line">Trying to pull repository docker.io/library/tomcat ... </span><br><span class="line">latest: Pulling from docker.io/library/tomcat</span><br><span class="line">55cbf04beb70: Pull complete </span><br><span class="line">1607093a898c: Pull complete </span><br><span class="line">9a8ea045c926: Pull complete </span><br><span class="line">1290813abd9d: Pull complete </span><br><span class="line">8a6b982ad6d7: Pull complete </span><br><span class="line">abb029e68402: Pull complete </span><br><span class="line">8cd067dc06dc: Pull complete </span><br><span class="line">1b9ce2097b98: Pull complete </span><br><span class="line">d6db5874b692: Pull complete </span><br><span class="line">25b4aa3d52c5: Pull complete </span><br><span class="line">53ec227dabf0: Pull complete </span><br><span class="line">242938ace8b4: Pull complete </span><br><span class="line">Digest: sha256:87ad70ceaafd5c71301b081b37ca2795bd6c7c1a5599a8c92c9447bbd225ae47</span><br><span class="line">Status: Downloaded newer image for docker.io/tomcat:latest</span><br><span class="line">[root@dev nginx]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx_image1        latest              c4d5f5accc06        57 minutes ago      109 MB</span><br><span class="line">docker.io/tomcat    latest              2d43521f2b1a        5 days ago          463 MB</span><br><span class="line">docker.io/nginx     latest              8b89e48b5f15        6 days ago          109 MB</span><br><span class="line">[root@dev nginx]#</span><br></pre></td></tr></table></figure><h4 id="1-2-启动容器"><a href="#1-2-启动容器" class="headerlink" title="1.2 启动容器"></a>1.2 启动容器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@dev nginx]# docker run -p 8080:8080 docker.io/tomcat</span><br><span class="line">23-Jul-2018 09:31:43.954 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version:        Apache Tomcat/8.5.32</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Jun 20 2018 19:50:35 UTC</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server number:         8.5.32.0</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            3.10.0-693.2.2.el7.x86_64</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-8-openjdk-amd64/jre</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_171-8u171-b11-1~deb9u1-b11</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation</span><br><span class="line">23-Jul-2018 09:31:43.966 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         /usr/local/tomcat</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         /usr/local/tomcat</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=/usr/local/tomcat/conf/logging.properties</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dorg.apache.catalina.security.SecurityListener.UMASK=0027</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=/usr/local/tomcat</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=/usr/local/tomcat</span><br><span class="line">23-Jul-2018 09:31:43.967 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=/usr/local/tomcat/temp</span><br><span class="line">23-Jul-2018 09:31:43.968 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded APR based Apache Tomcat Native library [1.2.17] using APR version [1.5.2].</span><br><span class="line">23-Jul-2018 09:31:43.968 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].</span><br><span class="line">23-Jul-2018 09:31:43.968 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]</span><br><span class="line">23-Jul-2018 09:31:43.981 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.0f  25 May 2017]</span><br><span class="line">23-Jul-2018 09:31:44.152 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler [&quot;http-nio-8080&quot;]</span><br><span class="line">23-Jul-2018 09:31:44.168 INFO [main] org.apache.tomcat.util.net.NioSelectorPool.getSharedSelector Using a shared selector for servlet write/read</span><br><span class="line">23-Jul-2018 09:31:44.190 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler [&quot;ajp-nio-8009&quot;]</span><br><span class="line">23-Jul-2018 09:31:44.193 INFO [main] org.apache.tomcat.util.net.NioSelectorPool.getSharedSelector Using a shared selector for servlet write/read</span><br><span class="line">23-Jul-2018 09:31:44.197 INFO [main] org.apache.catalina.startup.Catalina.load Initialization processed in 987 ms</span><br><span class="line">23-Jul-2018 09:31:44.247 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]</span><br><span class="line">23-Jul-2018 09:31:44.248 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet Engine: Apache Tomcat/8.5.32</span><br><span class="line">23-Jul-2018 09:31:44.281 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/tomcat/webapps/docs]</span><br><span class="line">23-Jul-2018 09:31:44.886 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/tomcat/webapps/docs] has finished in [606] ms</span><br><span class="line">23-Jul-2018 09:31:44.893 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/tomcat/webapps/examples]</span><br><span class="line">23-Jul-2018 09:31:45.359 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/tomcat/webapps/examples] has finished in [465] ms</span><br><span class="line">23-Jul-2018 09:31:45.359 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/tomcat/webapps/ROOT]</span><br><span class="line">23-Jul-2018 09:31:45.396 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/tomcat/webapps/ROOT] has finished in [37] ms</span><br><span class="line">23-Jul-2018 09:31:45.397 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/tomcat/webapps/manager]</span><br><span class="line">23-Jul-2018 09:31:45.454 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/tomcat/webapps/manager] has finished in [56] ms</span><br><span class="line">23-Jul-2018 09:31:45.454 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [/usr/local/tomcat/webapps/host-manager]</span><br><span class="line">23-Jul-2018 09:31:45.499 INFO [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [/usr/local/tomcat/webapps/host-manager] has finished in [45] ms</span><br><span class="line">23-Jul-2018 09:31:45.504 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [&quot;http-nio-8080&quot;]</span><br><span class="line">23-Jul-2018 09:31:45.533 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [&quot;ajp-nio-8009&quot;]</span><br><span class="line">23-Jul-2018 09:31:45.538 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in 1340 ms</span><br></pre></td></tr></table></figure><h4 id="1-3-浏览器查看"><a href="#1-3-浏览器查看" class="headerlink" title="1.3 浏览器查看"></a>1.3 浏览器查看</h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-05e3345e5df30267.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tomcat:8080"></p><h4 id="1-4-部署自己的web应用"><a href="#1-4-部署自己的web应用" class="headerlink" title="1.4 部署自己的web应用"></a>1.4 部署自己的web应用</h4><p>将本地war包上传到宿主机<code>/opt/tomcat8/</code>目录下。<br>先停止原来的tomcat容器，然后重新挂在新的war包并启动。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@dev nginx]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES</span><br><span class="line">00a88a12a6f4        nginx_image1        &quot;/bin/sh -c &apos;nginx...&quot;   About an hour ago   Up About an hour    0.0.0.0:80-&gt;80/tcp   nginx</span><br><span class="line">[root@dev nginx]# docker stop 00a88a12a6f4</span><br><span class="line">00a88a12a6f4</span><br><span class="line">[root@dev nginx]# docker rm 00a88a12a6f4</span><br><span class="line">00a88a12a6f4</span><br><span class="line">[root@dev nginx]# cd /opt/tomcat8/</span><br><span class="line">[root@dev tomcat8]# ll</span><br><span class="line">total 25852</span><br><span class="line">-rw-r--r-- 1 root root 26470421 Jul 23 17:40 weixin.war</span><br><span class="line">[root@dev tomcat8]# docker run -d -v /opt/tomcat8/weixin.war:/usr/local/tomcat/webapps/weixin.war -p 8080:8080 docker.io/tomcat  </span><br><span class="line">2c2e386b7d1a2635f7be28c404a7a71a0ec8fda074b22035be6d62d28b8f8a50</span><br><span class="line">[root@dev tomcat8]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">2c2e386b7d1a        docker.io/tomcat    &quot;catalina.sh run&quot;   15 seconds ago      Up 14 seconds       0.0.0.0:8080-&gt;8080/tcp   mystifying_wilson</span><br><span class="line">[root@dev tomcat8]#</span><br></pre></td></tr></table></figure><p>调用接口查看启动情况<br><img src="https://upload-images.jianshu.io/upload_images/4109786-56841ec0e8893316.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tomcat：8080"><br>容器正常启动。</p><h3 id="二、使用docker-file启动tomcat容器"><a href="#二、使用docker-file启动tomcat容器" class="headerlink" title="二、使用docker file启动tomcat容器"></a>二、使用docker file启动tomcat容器</h3><h4 id="2-1、编写docker-file"><a href="#2-1、编写docker-file" class="headerlink" title="2.1、编写docker file"></a>2.1、编写docker file</h4><p>在当前/opt/tomcat8/目录下创建dockerfile文件，写入如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from docker.io/tomcat:8.5.29    </span><br><span class="line">MAINTAINER marvin(qdhaiqiang@163.com)   </span><br><span class="line">COPY  webapps   /usr/local/tomcat/webapps</span><br><span class="line">COPY  logs  /usr/local/tomcat/logs</span><br><span class="line">COPY  conf/server.xml  /usr/local/tomcat/conf/server.xml</span><br></pre></td></tr></table></figure></p><h4 id="2-2、用dockerfile-构建出镜tomcat镜像"><a href="#2-2、用dockerfile-构建出镜tomcat镜像" class="headerlink" title="2. 2、用dockerfile 构建出镜tomcat镜像"></a>2. 2、用dockerfile 构建出镜tomcat镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@dev tomcat8]# docker build -t marvin/tomcat . </span><br><span class="line">Sending build context to Docker daemon 26.48 MB</span><br><span class="line">Step 1/5 : FROM docker.io/tomcat:latest</span><br><span class="line"> ---&gt; 2d43521f2b1a</span><br><span class="line">Step 2/5 : MAINTAINER marvin(qdhaiqiang@163.com)</span><br><span class="line"> ---&gt; Running in de53a8b32cf8</span><br><span class="line"> ---&gt; fd9c7980f09e</span><br><span class="line">Removing intermediate container de53a8b32cf8</span><br><span class="line">Step 3/5 : COPY webapps /usr/local/tomcat/webapps</span><br><span class="line"> ---&gt; 010bf40a7e8d</span><br><span class="line">Removing intermediate container 27feb6b70ca8</span><br><span class="line">Step 4/5 : COPY logs /usr/local/tomcat/logs</span><br><span class="line"> ---&gt; 010946977b25</span><br><span class="line">Removing intermediate container aff55ea55e30</span><br><span class="line">Step 5/5 : COPY conf/server.xml /usr/local/tomcat/conf/server.xml</span><br><span class="line"> ---&gt; 098f61ab6f8b</span><br><span class="line">Removing intermediate container 18d241c36d15</span><br><span class="line">Successfully built 098f61ab6f8b</span><br><span class="line">[root@dev tomcat8]#</span><br></pre></td></tr></table></figure><p>查看新构建的镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@dev tomcat8]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">marvin/tomcat       latest              098f61ab6f8b        11 seconds ago      489 MB</span><br><span class="line">nginx_image1        latest              c4d5f5accc06        About an hour ago   109 MB</span><br><span class="line">docker.io/tomcat    latest              2d43521f2b1a        5 days ago          463 MB</span><br><span class="line">docker.io/nginx     latest              8b89e48b5f15        6 days ago          109 MB</span><br><span class="line">[root@dev tomcat8]#</span><br></pre></td></tr></table></figure></p><h4 id="2-3、-运行新构建的镜像"><a href="#2-3、-运行新构建的镜像" class="headerlink" title="2.3、 运行新构建的镜像"></a>2.3、 运行新构建的镜像</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@dev tomcat8]# docker run --name tomcat8 -d -p 8080:8080  marvin/tomcat</span><br><span class="line">6f189daf58807a5683a8b9d6c01b1b30ae8770045aa551535d27b641681c256a</span><br><span class="line">[root@dev tomcat8]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">6f189daf5880        marvin/tomcat       &quot;catalina.sh run&quot;   3 seconds ago       Up 2 seconds        0.0.0.0:8080-&gt;8080/tcp   tomcat8</span><br><span class="line">[root@dev tomcat8]#</span><br></pre></td></tr></table></figure><h4 id="2-4、-查看镜像运行效果"><a href="#2-4、-查看镜像运行效果" class="headerlink" title="2.4、 查看镜像运行效果"></a>2.4、 查看镜像运行效果</h4><p><img src="https://upload-images.jianshu.io/upload_images/4109786-c7693ed8742996b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tomcat.png"></p><h4 id="2-5、如果要配置https证书的话，可将jks的证书放于conf目录下，在server中使用相对路径引用证书，配置如下"><a href="#2-5、如果要配置https证书的话，可将jks的证书放于conf目录下，在server中使用相对路径引用证书，配置如下" class="headerlink" title="2.5、如果要配置https证书的话，可将jks的证书放于conf目录下，在server中使用相对路径引用证书，配置如下:"></a>2.5、如果要配置https证书的话，可将jks的证书放于conf目录下，在server中使用相对路径引用证书，配置如下:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8888&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span><br><span class="line">               maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot; URIEncoding=&quot;UTF-8&quot;  </span><br><span class="line">               clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot; keystoreFile=&quot;conf/SHA256withRSA__.haier.net.jks&quot; keystorePass=&quot;20170905&quot;/&gt;</span><br></pre></td></tr></table></figure><p>或者如果是pem文件的话<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> &lt;Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</span><br><span class="line">               maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; &gt;</span><br><span class="line">        &lt;UpgradeProtocol className=&quot;org.apache.coyote.http2.Http2Protocol&quot; /&gt;</span><br><span class="line">        &lt;SSLHostConfig&gt;</span><br><span class="line">            &lt;Certificate certificateKeyFile=&quot;conf/localhost-rsa-key.pem&quot;</span><br><span class="line">                         certificateFile=&quot;conf/localhost-rsa-cert.pem&quot;</span><br><span class="line">                         certificateChainFile=&quot;conf/localhost-rsa-chain.pem&quot;</span><br><span class="line">                         type=&quot;RSA&quot; /&gt;</span><br><span class="line">        &lt;/SSLHostConfig&gt;</span><br><span class="line">&lt;/Connector&gt;</span><br></pre></td></tr></table></figure></p><h4 id="2-6、在分布式微服务中的应用"><a href="#2-6、在分布式微服务中的应用" class="headerlink" title="2.6、在分布式微服务中的应用"></a>2.6、在分布式微服务中的应用</h4><p> tomcat作为web容器被广泛应用，但我们目前restful接口特别多，每个接口都需要一个tomcat来启动，为了配置隔离，一般都会把tomcat安装文件复制多遍，分别把war包部署在对应的webapp目录下，但这样造成的问题就是tomcat安装文件占用了大量的磁盘空间，且不便于统一管理。比如要修改tomcat的某个配置，那么对应的所有的tomcat目录都要修改一遍。</p><p>基于上述情况，作者设计了一种基于docker的tomcat服务化方案。</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-b4f6ef0da8e762b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="分布式应用"></p><h4 id="2-7、查看tomcat日志"><a href="#2-7、查看tomcat日志" class="headerlink" title="2.7、查看tomcat日志"></a>2.7、查看tomcat日志</h4><p>因为tomcat日志是随着程序运行生成的，所以不能使用add或者copy宿主机目录的形式添加到容器，目前的思路是将容器中的logs整个目录copy到宿主机，实际应用中可用定时任务执行脚本的形式解决。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@dev logs]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">6f189daf5880        marvin/tomcat       &quot;catalina.sh run&quot;   4 hours ago         Up 4 hours          0.0.0.0:8080-&gt;8080/tcp   tomcat8</span><br><span class="line">[root@dev logs]# </span><br><span class="line">[root@dev logs]# pwd</span><br><span class="line">/opt/tomcat8/logs</span><br><span class="line">[root@dev logs]# ll</span><br><span class="line">total 0</span><br><span class="line">[root@dev logs]#  docker cp 6f189daf5880:/usr/local/tomcat/logs /opt/tomcat8/</span><br><span class="line">[root@dev logs]# ll</span><br><span class="line">total 16</span><br><span class="line">-rw-r----- 1 root root 7863 Jul 23 18:08 catalina.2018-07-23.log</span><br><span class="line">-rw-r----- 1 root root    0 Jul 23 18:07 host-manager.2018-07-23.log</span><br><span class="line">-rw-r----- 1 root root  930 Jul 23 18:08 localhost.2018-07-23.log</span><br><span class="line">-rw-r----- 1 root root 1424 Jul 23 22:49 localhost_access_log.2018-07-23.txt</span><br><span class="line">-rw-r----- 1 root root    0 Jul 23 18:07 manager.2018-07-23.log</span><br><span class="line">[root@dev logs]#</span><br></pre></td></tr></table></figure></p><h4 id="2-8-另一个tomcat-jdk的例子"><a href="#2-8-另一个tomcat-jdk的例子" class="headerlink" title="2.8 另一个tomcat+jdk的例子"></a>2.8 另一个tomcat+jdk的例子</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#tomcat8 openjdk8</span><br><span class="line"></span><br><span class="line">FROM centos:7</span><br><span class="line"></span><br><span class="line">MAINTAINER fengzp &lt;fengzp@gzyitop.com&gt;</span><br><span class="line"></span><br><span class="line">ENV LANG en_US.UTF-8</span><br><span class="line">ENV TOMCAT_VERSION 8.5.13</span><br><span class="line">ENV CATALINA_HOME /opt/apache-tomcat-$TOMCAT_VERSION</span><br><span class="line">ENV PATH $CATALINA_HOME/bin:$PATH</span><br><span class="line">ENV JDK_VERSION 1.8.0</span><br><span class="line"></span><br><span class="line">WORKDIR $CATALINA_HOME</span><br><span class="line"></span><br><span class="line">RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime</span><br><span class="line"></span><br><span class="line">RUN yum -y install java-$JDK_VERSION-openjdk-devel &amp;&amp; rm -rf /var/cache/yum/*</span><br><span class="line">ENV JAVA_HOME /usr/lib/jvm/java-openjdk</span><br><span class="line"></span><br><span class="line">RUN yum -y install wget</span><br><span class="line">RUN cd /opt/ &amp;&amp; wget &quot;http://apache.fayea.com/tomcat/tomcat-8/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz&quot;</span><br><span class="line">RUN cd /opt/ &amp;&amp; tar -zxf apache-tomcat-$TOMCAT_VERSION.tar.gz</span><br><span class="line">RUN cd /opt/ &amp;&amp; rm -rf apache-tomcat-$TOMCAT_VERSION.tar.gz</span><br><span class="line">RUN chmod +x $CATALINA_HOME/bin/*.sh</span><br><span class="line"></span><br><span class="line">VOLUME $CATALINA_HOME/webapps </span><br><span class="line">VOLUME $CATALINA_HOME/logs</span><br><span class="line">VOLUME $CATALINA_HOME/conf</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line">CMD $CATALINA_HOME/bin/startup.sh &amp;&amp; tail -F $CATALINA_HOME/logs/catalina.out</span><br></pre></td></tr></table></figure><h3 id="三、不适用容器自带jdk"><a href="#三、不适用容器自带jdk" class="headerlink" title="三、不适用容器自带jdk"></a>三、不适用容器自带jdk</h3><p>3.1 先将下载好的jdk和tomcat上传到宿主服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@dev tomcat8]# ls</span><br><span class="line">apache-tomcat-7.0.70.tar.gz  jdk-7u80-linux-x64.tar.gz</span><br></pre></td></tr></table></figure></p><p>3.2 dockerfile文件如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#pull down centos image</span><br><span class="line">FROM centos</span><br><span class="line">MAINTAINER test@test.com</span><br><span class="line">#copy jdk and tomcat into image</span><br><span class="line">ADD ./apache-tomcat-7.0.70.tar.gz /root</span><br><span class="line">ADD ./jdk-7u80-linux-x64.tar.gz /root</span><br><span class="line">#set environment variable</span><br><span class="line">ENV JAVA_HOME /root/jdk1.7.0_80</span><br><span class="line">ENV PATH $JAVA_HOME/bin:$PATH</span><br><span class="line">#define entry point which will be run first when the container starts up</span><br><span class="line">ENTRYPOINT /root/apache-tomcat-7.0.70/bin/startup.sh &amp;&amp; tail -F /root/apache-tomcat-7.0.70/logs/catalina.out</span><br></pre></td></tr></table></figure></p><h3 id="四、参考文章："><a href="#四、参考文章：" class="headerlink" title="四、参考文章："></a>四、参考文章：</h3><p><a href="https://blog.csdn.net/qq_32351227/article/details/78673591" target="_blank" rel="noopener">https://blog.csdn.net/qq_32351227/article/details/78673591</a><br><a href="https://www.cnblogs.com/zydev/p/5804289.html" target="_blank" rel="noopener">https://www.cnblogs.com/zydev/p/5804289.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker学习案例：用docker部署nginx服务</title>
      <link href="/2018/07/22/docker%E5%AD%A6%E4%B9%A0%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%94%A8docker%E9%83%A8%E7%BD%B2nginx%E6%9C%8D%E5%8A%A1/"/>
      <url>/2018/07/22/docker%E5%AD%A6%E4%B9%A0%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%94%A8docker%E9%83%A8%E7%BD%B2nginx%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>docker实际案例之在centOS7.4上用docker部署nginx服务<br><a href="https://www.jianshu.com/p/1aa87bf713d5" target="_blank" rel="noopener">简书地址]</a><br><a id="more"></a></p><h3 id="一、使用docker-run命令直接启动一个nginx容器"><a href="#一、使用docker-run命令直接启动一个nginx容器" class="headerlink" title="一、使用docker run命令直接启动一个nginx容器"></a>一、使用docker run命令直接启动一个nginx容器</h3><p>直接上结果<br>运行脚本：<br>1、下载最新版nginx的docker镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull nginx</span><br></pre></td></tr></table></figure></p><p>2、启动容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">--name centos_nginx \</span><br><span class="line">-d -p 80:80 \</span><br><span class="line">-v /usr/local/nginx/html:/usr/share/nginx/html \</span><br><span class="line">-v /usr/local/nginx/logs:/var/log/nginx \</span><br><span class="line">-v /usr/local/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro \</span><br><span class="line">-v /usr/local/nginx/conf/conf.d:/etc/nginx/conf.d \</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure></p><blockquote><p>这里有几个注意事项：<br>（1）第一个“-v”，是项目位置，把项目放到挂载到的目录下即可；<br>（2）第二个“-v”，是挂载的主配置文件”nginx.conf”，注意”nginx.conf”文件内有一行”include /etc/nginx/conf.d/*.conf;”，这个include指向了子配置文件的路径，此处注意include后所跟的路径一定不要出错。<br>（3）第三个“-v”，把docker内子配置文件的路径也挂载了出来，注意要与（2）中include指向路径一致<br>（4）重点强调一下，nginx.conf是挂载了一个文件（docker是不推荐这样用的），conf.d挂载的是一个目录</p></blockquote><p>再看宿主机配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@dev nginx]# ll</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 3 root root 4096 Jul 19 11:15 conf</span><br><span class="line">drwxr-xr-x 3 root root 4096 Jul 19 10:34 html</span><br><span class="line">drwxr-xr-x 2 root root 4096 Jul 19 10:41 logs</span><br><span class="line">[root@dev nginx]#</span><br></pre></td></tr></table></figure></p><blockquote><p>/usr/local/nginx/conf/nginx.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">user  root;</span><br><span class="line">worker_processes  1;</span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">  </span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    autoindex  on;</span><br><span class="line">    #gzip  on;  </span><br><span class="line">    client_max_body_size         100M;</span><br><span class="line">    client_header_buffer_size     128k; </span><br><span class="line">    large_client_header_buffers  4  128k;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>/usr/local/nginx/conf/conf.d/default.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">server &#123;  </span><br><span class="line">    listen       80;  </span><br><span class="line">    server_name  localhost;  </span><br><span class="line">  </span><br><span class="line">    #charset koi8-r;  </span><br><span class="line">    #access_log  /var/log/nginx/log/host.access.log  main;  </span><br><span class="line">  </span><br><span class="line">    location / &#123;  </span><br><span class="line">        root   /usr/share/nginx/html/default;  </span><br><span class="line">        index  index.html index.htm;  </span><br><span class="line">        autoindex  on;  </span><br><span class="line">        #try_files $uri /index/index/page.html;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    #error_page  404              /404.html;  </span><br><span class="line">  </span><br><span class="line">    # redirect server error pages to the static page /50x.html  </span><br><span class="line">    #  </span><br><span class="line">    error_page   500 502 503 504  /50x.html;  </span><br><span class="line">    location = /50x.html &#123;  </span><br><span class="line">        root   /usr/share/nginx/html;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80  </span><br><span class="line">    #  </span><br><span class="line">    #location ~ \.php$ &#123;  </span><br><span class="line">    #    proxy_pass   http://127.0.0.1;  </span><br><span class="line">    #&#125;  </span><br><span class="line">  </span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000  </span><br><span class="line">    #  </span><br><span class="line">    #location ~ \.php$ &#123;  </span><br><span class="line">    #    root           html;  </span><br><span class="line">    #    fastcgi_pass   127.0.0.1:9000;  </span><br><span class="line">    #    fastcgi_index  index.php;  </span><br><span class="line">    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;  </span><br><span class="line">    #    include        fastcgi_params;  </span><br><span class="line">    #&#125;  </span><br><span class="line">  </span><br><span class="line">    # deny access to .htaccess files, if Apache&apos;s document root  </span><br><span class="line">    # concurs with nginx&apos;s one  </span><br><span class="line">    #  </span><br><span class="line">    #location ~ /\.ht &#123;  </span><br><span class="line">    #    deny  all;  </span><br><span class="line">    #&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>/usr/local/nginx/html/default/index.html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;Welcome to nginx! This is a demo!&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    body &#123;</span><br><span class="line">        width: 35em;</span><br><span class="line">        margin: 0 auto;</span><br><span class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;****************************&lt;/h1&gt;</span><br><span class="line">&lt;h1 align=&quot;center&quot; style=&quot;color:red;&quot; &gt;Welcome to nginx! &lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;****************************&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span><br><span class="line">working. Further configuration is required.&lt;/p&gt;</span><br><span class="line"> </span><br><span class="line">&lt;p&gt;For online documentation and support please refer to</span><br><span class="line">&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span><br><span class="line">Commercial support is available at</span><br><span class="line">&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line"> </span><br><span class="line">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>/usr/local/nginx/logs/access.log<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">194.105.136.181 - - [19/Jul/2018:04:29:59 +0000] &quot;GET / HTTP/1.1&quot; 200 742 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36&quot; &quot;-&quot;</span><br><span class="line">94.102.52.77 - - [19/Jul/2018:04:41:30 +0000] &quot;GET / HTTP/1.1&quot; 200 742 &quot;-&quot; &quot;libwww-perl/6.34&quot; &quot;-&quot;</span><br><span class="line">187.74.100.192 - - [19/Jul/2018:04:59:21 +0000] &quot;GET / HTTP/1.1&quot; 200 742 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36&quot; &quot;-&quot;</span><br><span class="line">106.11.225.139 - - [19/Jul/2018:05:17:41 +0000] &quot;GET / HTTP/1.1&quot; 200 742 &quot;-&quot; &quot;Mozilla/5.0 (iPad; CPU OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&quot; &quot;-&quot;</span><br><span class="line">103.3.76.194 - - [19/Jul/2018:05:33:48 +0000] &quot;GET / HTTP/1.1&quot; 200 742 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36&quot; &quot;-&quot;</span><br><span class="line">106.11.226.243 - - [19/Jul/2018:05:42:05 +0000] &quot;GET / HTTP/1.1&quot; 200 742 &quot;-&quot; &quot;Mozilla/5.0 (iPad; CPU OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&quot; &quot;-&quot;</span><br><span class="line">177.137.62.62 - - [19/Jul/2018:06:18:32 +0000] &quot;GET / HTTP/1.1&quot; 200 742 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure></p></blockquote><p>启动效果：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-707cf3071a0544e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="default nginx"></p><hr><h3 id="二、-使用docker-file启动nginx容器"><a href="#二、-使用docker-file启动nginx容器" class="headerlink" title="二、 使用docker file启动nginx容器"></a>二、 使用docker file启动nginx容器</h3><p>doeker常用命令：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-cf76a467f655f4bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="docker file"></p><h6 id="1、编写docker-file"><a href="#1、编写docker-file" class="headerlink" title="1、编写docker file"></a>1、编写docker file</h6><p>在任意目录创建一个nginx.Dockerfile 文件，写入如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Base images 基础镜像</span><br><span class="line">FROM nginx </span><br><span class="line">MAINTAINER marvin</span><br><span class="line">ENV RUN_USER nginx </span><br><span class="line">ENV RUN_GROUP nginx </span><br><span class="line">ENV DATA_DIR /usr/share/nginx/html</span><br><span class="line">ENV LOG_DIR /var/log/nginx</span><br><span class="line">RUN mkdir /var/log/nginx -p </span><br><span class="line">RUN chown nginx.nginx -R /var/log/nginx</span><br><span class="line">ADD html  /usr/share/nginx/html</span><br><span class="line">ADD logs  /var/log/nginx</span><br><span class="line">ADD conf/nginx.conf /etc/nginx/nginx.conf</span><br><span class="line">ADD conf/conf.d /etc/nginx/conf.d</span><br><span class="line">EXPOSE 80</span><br><span class="line">ENTRYPOINT nginx -g &quot;daemon off;&quot;</span><br></pre></td></tr></table></figure></p><p>做了这么几件事：</p><p>1、拉取一个nginx镜像。<br>2、设置了几个变量。<br>3、创建了几个需要的目录。<br>4、把当前目录下的web程序复制到镜像的/data/web目录。<br>5、把nginx.conf配置文件和default.conf配置文件复制到镜像中。<br>6、设置一个默认端口。<br>7、最后设置了容器启动时执行的命令，我用来启动nginx程序，注意这个命令不能错，不然容器启动不了。这样设置后，当你docker run运行此镜像时不需要在后面再次执行需要执行的命令了。<br>8、ADD后面src的路径不要是绝对路径，最好是dockerfile和这些添加的目录放在一个目录下，否则build时会提示<code>lstat usr/local/nginx/html: no such file or directory</code>的错误，别问为什么，经验之谈！</p><h6 id="2、用dockerfile-构建出镜nginx镜像"><a href="#2、用dockerfile-构建出镜nginx镜像" class="headerlink" title="2、用dockerfile 构建出镜nginx镜像"></a>2、用dockerfile 构建出镜nginx镜像</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@dev nginx]# ls</span><br><span class="line">conf  dockerfile  html  logs</span><br><span class="line">[root@dev nginx]# docker build -t nginx_image1 . </span><br><span class="line">Sending build context to Docker daemon 27.65 kB</span><br><span class="line">Step 1/14 : FROM nginx</span><br><span class="line"> ---&gt; 8b89e48b5f15</span><br><span class="line">Step 2/14 : MAINTAINER marvin</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; fc935dc63140</span><br><span class="line">Step 3/14 : ENV RUN_USER nginx</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 7ca3b90ddc2a</span><br><span class="line">Step 4/14 : ENV RUN_GROUP nginx</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; a2e2674d4c9f</span><br><span class="line">Step 5/14 : ENV DATA_DIR /usr/share/nginx/html</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; f031dd5f8ce0</span><br><span class="line">Step 6/14 : ENV LOG_DIR /var/log/nginx</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; e57a42b5bea0</span><br><span class="line">Step 7/14 : RUN mkdir /var/log/nginx -p</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 0cbaaac3d55b</span><br><span class="line">Step 8/14 : RUN chown nginx.nginx -R /var/log/nginx</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; 714919c0618b</span><br><span class="line">Step 9/14 : ADD html /usr/share/nginx/html</span><br><span class="line"> ---&gt; 1c75fe9cdd3f</span><br><span class="line">Removing intermediate container 702f4e3ace2e</span><br><span class="line">Step 10/14 : ADD logs /var/log/nginx</span><br><span class="line"> ---&gt; 545ba7cc270b</span><br><span class="line">Removing intermediate container 123bb6c3703c</span><br><span class="line">Step 11/14 : ADD conf/nginx.conf /etc/nginx/nginx.conf</span><br><span class="line"> ---&gt; d96a6dfa8ba9</span><br><span class="line">Removing intermediate container db2394df7691</span><br><span class="line">Step 12/14 : ADD conf/conf.d /etc/nginx/conf.d</span><br><span class="line"> ---&gt; d02f5acc99de</span><br><span class="line">Removing intermediate container fdc7c2542990</span><br><span class="line">Step 13/14 : EXPOSE 80</span><br><span class="line"> ---&gt; Running in 679ecad9d883</span><br><span class="line"> ---&gt; 9ee05d0ab66f</span><br><span class="line">Removing intermediate container 679ecad9d883</span><br><span class="line">Step 14/14 : ENTRYPOINT nginx -g &quot;daemon off;&quot;</span><br><span class="line"> ---&gt; Running in 774ac2a000ac</span><br><span class="line"> ---&gt; c4d5f5accc06</span><br><span class="line">Removing intermediate container 774ac2a000ac</span><br><span class="line">Successfully built c4d5f5accc06</span><br><span class="line">[root@dev nginx]#</span><br></pre></td></tr></table></figure><p>注意最后面的点 (“.”)，表示dockerfile所在当前目录。</p><p>从执行过程可以看出一共十三个步骤，都完成了。再查看目前的镜像：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@dev nginx]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx_image1        latest              c4d5f5accc06        47 seconds ago      109 MB</span><br><span class="line">docker.io/nginx     latest              8b89e48b5f15        6 days ago          109 MB</span><br><span class="line">[root@dev nginx]#</span><br></pre></td></tr></table></figure></p><p>可以看到从官方拉取了一个nginx镜像，然后在此镜像的基础上构建了nginx_image1镜像。注意，由于nginx_image1是在nginx镜像的基础上构建出来的，所以如果你要删除nginx镜像是不允许的，只有先删除nginx_image1镜像后才可以删除nginx镜像。</p><h6 id="3、-运行新构建的镜像"><a href="#3、-运行新构建的镜像" class="headerlink" title="3、 运行新构建的镜像"></a>3、 运行新构建的镜像</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@dev nginx]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">nginx_image1        latest              c4d5f5accc06        47 seconds ago      109 MB</span><br><span class="line">docker.io/nginx     latest              8b89e48b5f15        6 days ago          109 MB</span><br><span class="line">[root@dev nginx]# docker run --name nginx -d -p 80:80 nginx_image1</span><br><span class="line">00a88a12a6f4037c406a64f12e8c664cd1f1cbe1eb8c1c29371aa091a01ca161</span><br><span class="line">[root@dev nginx]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES</span><br><span class="line">00a88a12a6f4        nginx_image1        &quot;/bin/sh -c &apos;nginx...&quot;   15 seconds ago      Up 14 seconds       0.0.0.0:80-&gt;80/tcp   nginx</span><br><span class="line">[root@dev nginx]#</span><br></pre></td></tr></table></figure><p>其他配置与上面情况一下的配置，浏览器查看效果<br><img src="https://upload-images.jianshu.io/upload_images/4109786-950057f4fb55f4fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="nginx：80"></p><h3 id="三、-备注"><a href="#三、-备注" class="headerlink" title="三、 备注"></a>三、 备注</h3><p>3.1 docker run 执行完没有出错，但是docker ps时没有运行的容器。<br>方案：用docker ps -a 能看到没有启动容器。<br>用docker logs <contain name=""> 查看容器启动时的log</contain></p><p>3.2 删除docker 镜像中REPOSITORY 和 TAG 为 None的镜像</p><blockquote><p>docker images|grep none|awk ‘{print $3}’|xargs docker rmi </p></blockquote><p>使用如下命令给某个镜像指定REPOSITORY 和TAG:<br>docker tag [image id] [name]:[版本]</p><p>例如:</p><blockquote><p>docker tag b03b74b01d97 docker-redis:0.0.1</p></blockquote><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://my.oschina.net/u/3375733/blog/1591091" target="_blank" rel="noopener">https://my.oschina.net/u/3375733/blog/1591091</a><br><a href="http://www.ywnds.com/?p=7611" target="_blank" rel="noopener">http://www.ywnds.com/?p=7611</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转--从Eclipse转移到IntelliJ IDEA一点心得</title>
      <link href="/2018/07/11/%E8%BD%AC--%E4%BB%8EEclipse%E8%BD%AC%E7%A7%BB%E5%88%B0IntelliJ%20IDEA%E4%B8%80%E7%82%B9%E5%BF%83%E5%BE%97/"/>
      <url>/2018/07/11/%E8%BD%AC--%E4%BB%8EEclipse%E8%BD%AC%E7%A7%BB%E5%88%B0IntelliJ%20IDEA%E4%B8%80%E7%82%B9%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<p>从eclipse到Intellij的各种不适应在此解决<br><a href="https://www.jianshu.com/p/87da42c638ad" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>使用IntelliJ IDEA其实并不太久，用了这段时间以后，觉得的确很是好用。刚刚从Eclipse转过来的很多人开始可能不适应，我就把使用过程中的一些经验和常用功能分享下，当然在看这篇之前推荐你先看完<a href="http://www.oschina.net/question/12_70799" target="_blank" rel="noopener">IntelliJ IDEA 的 20 个代码自动完成的特性</a>，这篇文章对自动完成的特性介绍的非常好，只是快捷键说明部分还可以更完善一些，可以照顾下默认绑定键位不一致的童鞋。本文在说明快捷键的时候是根据Mac OSX 10.5+的默认keymap，当然也会提供相关的文字说明，如果和我的绑定不一致的可以直接去keymap中搜索即可。</p><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><h3 id="显示行号"><a href="#显示行号" class="headerlink" title="显示行号"></a>显示行号</h3><p>这个以前在Eclipse中是个很简单的问题，转移到IntelliJ上以后的一些人也问过这个问题。使用同样的方式设置了以后发现只是对当前文件起作用了，打开另外一个文件依然没有行号。就好比你只是在vim中执行命令<code>set number</code>，而不是在.vimrc中设置一样的效果。这个是需要在IDE Settings中设置下的，如图所示勾选即可:<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4d67f95bbcb44b19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>其他设置可参照该设置项勾选即可，例如显示空格等等.</p><h3 id="文件和导航关联"><a href="#文件和导航关联" class="headerlink" title="文件和导航关联"></a>文件和导航关联</h3><p>我们在写代码的时候经常需要打开某个文件的时候，想在左边的文件树上自动打开关联到位置，这样很方便的找寻本目录下的其他文件或者其他的相关文件，其实这个IntelliJ提供了好几种解决方案，第一个就是和Eclipse一样的方式，如下:</p><ul><li>以前在Eclipse中设置也很简单，但是IntelliJ里面稍微有点不一样，如果想临时一次的话，打开文件的时候点击下图的小地球（第一眼看的时候很像个小地球仪）图标即可<br><img src="https://upload-images.jianshu.io/upload_images/4109786-f44e0f2cd46f5176.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><p>如果你想和Eclipse的那个一样，让这一切自动的话，那么在上图的浮层中可以看到两个选项<code>AutoScroll to Source</code>和<code>AutoScroll from source</code>，IntelliJ很人性化的分了两个设置在里面，你两个都勾选就是基本和Eclipse的功能保持了完全一致，只是勾选一个自然也可以.</p><p>还有一种方式就是利用IntelliJ提供的<strong>Navigation Bar</strong>，IntelliJ很多功能操作都可以键盘化，这个就是喜欢键盘化操作的人的必备功能，操作方式就是打开文件的时候，使用快捷键<code>⌘+UP (Jump to Navigation Bar)</code>，然后就会出现一个下拉，基本就是这个文件所在目录的文件列表，还可以使用<strong>上下左右的键位</strong>来选择其他目录，是不是很酷？</p><p><strong>备注:</strong>此处建议把<code>View &gt; Navigation Bar</code>的选项点掉，这样就使用快捷键之后就会在你鼠标的位置出现，感觉会更输入一些，当然这样你就基本失去了使用鼠标的权利，这个需要你根据个人癖好使用即可。</p><h2 id="快捷键使用"><a href="#快捷键使用" class="headerlink" title="快捷键使用"></a>快捷键使用</h2><p>如果你是苹果电脑用户的话，建议你改成Mac OSX 10.5+的键位绑定，因为Mac OSX 10.5这个兼容Windows的版本的键位实在是太蹩脚了，用着是真难受，好比你默认习惯<code>⌘+w</code>是关闭标签，在这个键位绑定中竟然是根据符号选择文本的一个快捷键.</p><p>这里主要介绍几个可能大家常用的，或者是你可能并不知道IntelliJ中有的几个快捷键，特别常用的你直接参照官网的Keymap介绍<a href="http://www.jetbrains.com/idea/documentation/index.jsp" target="_blank" rel="noopener">Getting Started</a>就可以了。学会在Keymap中自己查询需要的快捷键是主要的，不要每次都打开那个没用的百度，具体可以参照本文最后给出的链接。</p><h3 id="Outline调出"><a href="#Outline调出" class="headerlink" title="Outline调出"></a>Outline调出</h3><p>以前在Eclipse中用的很多的一个快捷键就是<code>ctrl+o</code>，这样可以调出代码文件的所有成员变量和方法，并且可以支持搜索很是方便，IntelliJ这种基本的功能自然是有，新手的话还经常问，这个在IntellJ中的快捷键是<code>⌘+F12 (File Structure)</code>。如果你不是Mac OSX 10.5+键位绑定的话，小括号中的内容就是你可以去Keymap中去搜索的内容。</p><p>###基本操作</p><ul><li><strong>复制整行或者块:</strong>在Eclipse中使用<code>ctrl+alt+Up</code>，IntelliJ默认是<code>⌘+D (Duplicate Line or Block)</code>，其实这个和Eclipse中的有差距，尤其是多行的时候或者选中内容的时候，不信你可以试试。所以你可以把Keymap中的<code>Duplicate Lines</code>定义上一个快捷键，我定义的是<code>Option+D</code>，这个键位在我的默认绑定中是没任何快捷键的，你可以自己绑定一个试试。</li><li><strong>根据符号选择文本:</strong>这个键位用的太多了，并且也是非常的好用，举个例子，有这样一行代码<code>&lt;name&gt;SpringSource Milestones Proxy&lt;/name&gt;</code> 你光标在Milestones中的某一个位置，你想替换<code>SpringSource Milestones Proxy</code>为其他单词，假设想替换为<code>Test XX</code>，其实这样你只需要<code>Option+Up (Select Word at Caret)</code>两下就可以选中你想要的单词了，当你想在开发过程中，你会发现这个键位用的太多了，多到换了其他没有这个键位的编辑器或者IDE上，很是不习惯。</li><li><strong>删除整行:</strong> 可以直接<code>⌘+delete (Delete Line)</code>或者利用IntelliJ智能的功能，剪切的快捷键，当本行选中文本的时候剪切<code></code>⌘+x<code>会按照选中的文本实现剪切，但是你本行内无任何选中文本的时候会自动剪切整行，那么自然就类似一个删除本行的快捷键，但是这个其实还是比较蹩脚的，建议使用</code>⌘+delete`。</li><li><strong>想直接跳转到接口的实现方法:</strong> <code>⌘+option+鼠标单击</code>或者<code>⌘+option+B</code>。</li><li><strong>语句自动完成 Statements completion:</strong>这个在<a href="http://www.oschina.net/question/12_70799" target="_blank" rel="noopener">IntelliJ IDEA 的 20 个代码自动完成的特性</a>中已经说明，这里还是着重说下，因为的确很好用，也强烈推荐下，还有文中说的<code>智能自动完成 ctrl+shift+Space</code>，当给你的提示太多的时候，这个键绝对会给你惊喜.</li><li><strong>同样单词之间跳转:</strong>在Eclipse中的快捷键是<code>ctrl+k</code>，这个挺好用的，在IntelliJ中也不缺这个功能，但是在Mac OSX 10.5+的键位绑定中默认为空。据说Windows的默认绑定中是有绑定的，自己可以查询下，我自己绑定了一个<code>⌘+ctrl+k (Find Word at Caret)</code>，没有的需要自己绑定一个，然后还能结合其他的键位实现上一个<code>⌘+G (Find Next)</code>下一个<code>⌘+Shift+G (Find Previous)</code>的功能.很是实用。</li></ul><p>##版本控制设置<br>我们开发肯定是有版本控制的，大家以前Eclipse的时候在本地文件和版本库不一致的时候，那么文件以及所在的文件夹都会出现一个<code>〉</code>表示，大家能很轻松的看到本地文件修改了哪一些，但是IntelliJ中默认是不能这样的。仅仅是给变化的文件在修改的时候提供了颜色上的变化，不包括其所在的各个父级文件夹哦，如果想和Eclipse一样的话需要如下图把设置勾选就可以了<br><img src="https://upload-images.jianshu.io/upload_images/4109786-2b8f028265dc2307.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>其实看英文解释就可以明白了，这个默认开启以后如果想调整文件夹的显示颜色的时候就直接去<code>Settings &gt; Editor &gt; Colors &amp; Fonts &gt; File Status</code>中调整即可了，可以调整成自己喜欢的样子。</p><p>##Java资源文件非英文的情况显示<br>IntelliJ在资源文件这方面个人觉得也是完胜Eclipse的，在Resource Bundle方式下想修改一个属性是相当方便的，可以在一个操作界面上修改所有语言的属性，这一切都是自动完成的，如下图所示：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-8c8563d36a07e932.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>并且还很贴心的有一个排序和分组的功能，尤其是这个排序。</p><p>默认设置下也有一个问题，就是中文默认会显示为Unicode码的，其实勾选一个设置(<code>Settings &gt; File Encodings</code>)就可以了，如下图：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-c21ecc55b0557eee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这样设置以后所有Unicode显示的就可以自动转化为其应该显示的语言了.</p><h2 id="符合Maven约定结构的web项目如何更好的运行"><a href="#符合Maven约定结构的web项目如何更好的运行" class="headerlink" title="符合Maven约定结构的web项目如何更好的运行"></a>符合Maven约定结构的web项目如何更好的运行</h2><p>记得刚开始用Eclipse的时候那时候默认是不支持Java EE项目的，必须使用一个MyEclipse的插件，直到今天好似还有人在用这个玩意，当年的时候每个Web项目修改之后都必须Deploy一下，修改的东西才会被执行，很是痛苦。后来就自己利用Tomcat插件，这个可以保证你修改jsp以及静态文件的时候不需要Deploy直接就可以被执行，因为Tomcat的目录指向其实直接是指向到了你的项目文件，这样的确省心了很多。</p><p>在IntelliJ中如果你是传统的Java EE的结构(根目录下面有src，webMoudle这样的结构)，那么在直接在Run Configurations中添加一个Tomcat即可，点击+号添加即可(当然需要注意虽然没搜索框，你输入字符会自动给你筛选结果)，这样运行的时候修改Java文件的话需要主动Make Project也就是<code>⌘+F9 (Make Project)</code>.但是如果你是符合maven约定的项目结构的话如果继续这样配置就很不理想了，每次修改了jsp文件竟然也需要Make Project才可以，因为每次Make Project以后IntelliJ会自动给你DeployMent，这样好似又回到了几年前那种很麻烦的环境.</p><p>这个问题其实很容易解决，就是不要使用这种方式来运行你的web项目，既然符合maven结构的项目自然是使用maven或者gradle这种构建工具了，那么你需要利用maven的jetty的插件来运行项目即可了，如下图配置即可:<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a27a6c5107d7eb35.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>当然你也可以如下图直接点击运行就会自动添加一个:   </p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-ca906bc77df22cab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>参看上图其实也没必须非用jetty，用tomcat6或者tomcat7的插件运行也可以。</p><p>##Eclipse的web结构项目如何导入和运行<br>鉴于有一些用户还没转型Maven等来构建项目，当然我也衷心的说一句，构建这块还是赶紧转了吧.因为不转的话还单独出来这个章节，并且有的操作还是相当麻烦，下面也会讲到，还是一一道来吧，导入的时候有两个选择然后我分两个部分说明，点击<code>File &gt; Import Project…</code>，然后选择你的项目目录，点击OK，如下图:   </p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-6d70568b55c84779.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="使用新建项目来导入"><a href="#使用新建项目来导入" class="headerlink" title="使用新建项目来导入"></a>使用新建项目来导入</h3><p>这个方式图中所示的第一种，导入基本就是一路next到完成，但是你第一次也可以费点心思注意下每一步做了啥，例如帮你分析了jar有哪一些，如果你使用了Spring还给你分析你的所有配置文件。最后完成以后项目就开始构建索引，等一切就绪以后我们就可以完成的基本配置了，由于是web项目基本上能够在Tomcat等服务器上跑起来就基本算成功了。主要几个点:  </p><ul><li>处理好依赖关系，因为我们没使用maven，所以你得自己动手丰衣足食了</li><li>设置java文件的编译路径，如果需要的话</li><li>添加你的Tomcat，运行成功</li></ul><h4 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h4><p>打开<code>File &gt; Project Structure</code> ，本节我们主要用到下图几个标红的部分:<br><img src="https://upload-images.jianshu.io/upload_images/4109786-135236168c82f495.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>我们先了解下这几个主要部件:</p><ul><li><p><strong>SDKs:</strong>主要存放了我们的JDK等，如下图(我自己下载带source的JDK，这样可以直接查看JDK相关的Java源代码):<br><img src="https://upload-images.jianshu.io/upload_images/4109786-00a04f6f96954298.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p><strong>Global Libraries:</strong>主要是公用的jar文件，例如servlet的几个jar可能每个项目都需要，但是Eclipse的变量在此变得不好使，所以需要使用这个地方来配置，如下图参照使用即可:<br><img src="https://upload-images.jianshu.io/upload_images/4109786-5b332161e720d34d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p><strong>Facets:</strong>在此不做介绍，如有需要后续添加</p></li><li><strong>Libraries:</strong>这里基本是项目的库，不是全局的，导入的项目一般都会把你Eclipse中的。classpath中的所有的依赖都导过来作为一个lib库，然后应用到你的项目的模块中</li><li><strong>Modules:</strong>这个基本包括了项目的模块，通常来说Eclipse的项目结构中是单模块的</li></ul><p>我们需要做的配置主要在Modules中，其他的几个自己根据理解配置即可。</p><ol><li>我们先查看<strong>Modules</strong>中的<strong>Sources</strong>，如下图:<br><img src="https://upload-images.jianshu.io/upload_images/4109786-2ddb54d06fa610d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ol><p>把项目所有的源码都添加即可，图中所示我的项目中其实少了resource的文件夹，这样我选中resource然后点击Sources即可，这样就会在左边的Source Folders中添加一个resource的文件夹。</p><ol start="2"><li><p>然后是Paths部分，这个主要是class的输出路径，默认是在根目录下的out文件夹中，如果项目中对配置文件的解析等有写死路径，必须严格遵循Java EE的规范的话，那么需要将此部分修改如下(如果不存在我假设的情况可忽略本步骤):<br><img src="https://upload-images.jianshu.io/upload_images/4109786-d3fcfb502bf6f7e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></li><li><p>然后的Dependencies，就更好配置了，添加需要的依赖即可。</p></li></ol><p>这些步骤完成以后我们就可以点击<code>Run &gt; Edit Configurations</code> ，点击左上角的<strong>+</strong>号，然后选择<strong>Tomcat &gt; Local Server </strong>，这些步骤和Eclipse类似，选择相应路径等等，只需要注意一点就可以，就是需要添加一个DeployMent，如下图:<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a1f4914fd4dd92ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>如果是Windows的图中的DeployMent中的+号可能是在右侧</strong>，点击之后会弹出对话框选择文件夹，选择eclipse默认的webMoudle文件夹即可(MyEclipse就是WebRoot文件夹)，这个一定不能选错，不要选成项目的主文件夹，否则运行就不成功了，再然后<code>ctrl+R</code>运行即可。以debug方式运行就是<code>ctrl+D</code>。</p><h3 id="使用IntelliJ对Eclipse项目的支持导入项目"><a href="#使用IntelliJ对Eclipse项目的支持导入项目" class="headerlink" title="使用IntelliJ对Eclipse项目的支持导入项目"></a>使用IntelliJ对Eclipse项目的支持导入项目</h3><p>基本参照上个基本都类似，就是步骤比上个步骤要少点，如果出现问题参照上个章节即可。</p><h2 id="HQL查询支持"><a href="#HQL查询支持" class="headerlink" title="HQL查询支持"></a>HQL查询支持</h2><p>以前Eclipse有个HQL的插件可以直接输入HQL语法，查询测试结果是否正确，在IntelliJ中你也可以，不过不需要任何插件默认提供支持的，如果在导入项目的时候没有自动添加Hibernate的支持的话，那需要添加一下Hibernate的支持，鼠标选中项目，点击右键如下图:<br><img src="https://upload-images.jianshu.io/upload_images/4109786-feb8dd3ae484a9f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>点击选择Hibernate即可，如果没有Hibernate应该是项目已经自动添加了Hibernate的支持了。然后完成以后就可以如下图操作即可:<br><img src="https://upload-images.jianshu.io/upload_images/4109786-2358b6ad1519a01e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>选中上面HQL图标，在出来的控制台输入你想输入的HQL即可了，一样可以自动完成的哦。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>IntelliJ对于文件是默认随时保存的，基本不需要你<code>⌘+s</code>(这个键位默认是保存所有)，所以需要注意不要随手不小心把某个文件改了下，然后直接关闭标签了，其实你的无意的操作已经导致修改了文件，可能导致你在项目运行的时候发现一个很离奇的错误，我暂时没发现可以关闭自动保存的设置，如果你对此非有强迫症的话，vim的插件可能会帮助到你。</li><li>IntelliJ中的文件是实时和本地文件同步的，所以Eclipse的刷新功能就不要问了，因为在这根本不需要那个功能。有的编辑器会提醒你是否和本地文件更新，这里也是默认不给任何提醒的，只要你修改了，这里就会立即自动同步更新文件。</li><li>在主菜单<code>File</code>下面，有个奇怪的Power Save Mode，这里也说明下，这个顾名思义是省电模式。当你勾选此模式以后，IntelliJ不会给你完成任何自动完成的功能，例如本来你输入一个字符会自动提示的，勾选以后就没有了，如果出现此问题的话可以考虑是不是自己手贱点过这个按钮噢，这个还是比较适合开会的时候无聊看代码用的，又省电又不影响你看代码。</li><li>Eclipse中有个<code>F2</code>的功能，可以查看到Java文件定义，你在Spring的配置文件中可能需要配置这个值，但是在IntelliJ中这个是不需要的，因为对于Spring这样的支持很是完善，你只需要在class的属性中输入class的名字然后<code>ctrl+空格 (Basic 这个在code的completion下面)</code>自动就完成了全路径，在智能的条件下可能就不需要蹩脚的实现。</li><li>项目刚开始导入或者清除cache重新打开的时候，下面的状态栏部分会显示Indexing，这个时候你就等着就可以了，基本你想做的事情什么都不能做，别在这个时候着急点来点去，不过它索引的速度挺快的，别着急。</li><li>Eclipse有个Save Actions的功能，主要是针对Java可以自动格式化以及优化import等功能，这个在IntelliJ上其实默认是没有的，想在IntelliJ中使用这功能可以使用以下两个思路:<ul><li>利用<strong>宏录制</strong>，宏在开始以后你就格式化下代码，然后优化下import等操作，然后结束把宏定义一个<code>⌘+s</code>，不过问题就是不管什么文件都会执行这个宏，不仅仅是java文件，我就是利用这个宏主要完成把tab转为空格。</li><li>使用<strong>Eclipse Code Formatter</strong>的插件，这个插件基本和Eclipse默认的功能类似，但是也有少许区别，用户自己思量是否使用即可。</li></ul></li><li>在Mac下IntelliJ代码区域是支持手势放大的，这个在给别人演示的时候很是方便。但是Run、Debug等视图的时候默认能使想到的就是手动的拖动大小，很是不便。你可以尝试下<code>⌘+shift+up/down (Stretch to Top / Bottom)</code>，当然其他的project视图等的也都可以利用这个快捷键配置上下左右的方向键来配置使用，方便的很，强烈推荐使用。</li><li>Eclipse中可以同一个窗口打开多个项目，但是IntelliJ IDEA在这里的设计是不一样的，具体可以参看<a href="http://www.jetbrains.com/idea/documentation/migration_faq.html" target="_blank" rel="noopener">IntelliJ IDEA Q&amp;A for Eclipse Users</a>。</li><li>jar的source依赖问题，如果你是使用Maven的话都是可以自动完成的，只需要你发布出你的source jar就可以，但是如果你项目不是使用maven的话你就需要在项目配置的依赖的地方，点击你的需要引入source的jar，然后右键编辑，add你的本地source目录就可以了，不需要做Project的多个moudle即可，这里和Eclipse中的基本相似。</li></ol><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>第一次发文，如果有什么问题欢迎留言交流，原始文档放在<a href="https://github.com/fxl545826/Documents" target="_blank" rel="noopener">github</a>上，各位如果也有一些技巧不妨共同完善下本文档。只需要Fock然后Pull Request就可以了，如果你觉得有个github帐号过于麻烦的话，那我个人觉得你还是转行比较合适。如果不想更新只是想订阅持续更新的内容，只需要Watch该项目即可。还可以对项目Star，这样你就可以在自己的帐号页面快速找到本项目。</p><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ul><li><p>Win快捷键 <a href="http://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf" target="_blank" rel="noopener">Win Keymap</a></p></li><li><p>Mac OS 快捷键 <a href="http://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard_Mac.pdf" target="_blank" rel="noopener">Mac OS Keymap</a></p></li></ul><p>原文地址：<a href="https://github.com/ethanfu/Documents/blob/master/intellij/intellij_idea_use_documents.md" target="_blank" rel="noopener">https://github.com/ethanfu/Documents/blob/master/intellij/intellij_idea_use_documents.md</a> </p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> intellij idea </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解决springboot war包在tomcat部署时启动慢的问题</title>
      <link href="/2018/07/10/%E8%A7%A3%E5%86%B3springboot%20war%E5%8C%85%E5%9C%A8tomcat%E9%83%A8%E7%BD%B2%E6%97%B6%E5%90%AF%E5%8A%A8%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2018/07/10/%E8%A7%A3%E5%86%B3springboot%20war%E5%8C%85%E5%9C%A8tomcat%E9%83%A8%E7%BD%B2%E6%97%B6%E5%90%AF%E5%8A%A8%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>linux上的tomcat上部署上springboot的war包启动总是很慢，分析启动log，三步调整，使启动时间从10分钟调整到3分钟。<br><a href="https://www.jianshu.com/p/b16ae3a83ccf" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>最近测试服务器tomcat发布一次很慢，为了解决这个问题，特地看了tomcat的log文件，启动日志在tomcat/logs/catalina.out文件中。</p><h3 id="1、INFO：org-apache-catalina-startup-HostConfig-deployDirectory-Deploying-web-application-directory-xxx-war卡顿"><a href="#1、INFO：org-apache-catalina-startup-HostConfig-deployDirectory-Deploying-web-application-directory-xxx-war卡顿" class="headerlink" title="1、INFO：org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory  xxx.war卡顿"></a>1、INFO：org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory  xxx.war卡顿</h3><p><a href="https://www.cnblogs.com/mycifeng/p/6972446.html" target="_blank" rel="noopener">刺风</a>同学就是<strong>好记性不如烂笔头</strong>的实践者，被我也用上了。<br>找到jdk1.x.x_xx/jre/lib/security/<a href="http://lib.csdn.net/base/java" title="Java 知识库" target="_blank" rel="noopener">Java</a>.security文件，在文件中找到securerandom.source这个设置项，将其改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">securerandom.source=file:/dev/./urandom</span><br></pre></td></tr></table></figure></p><p>重启tomcat,这一步的速度明显加快。<br>原理据说是这样的：</p><blockquote><p>linux或者部分unix系统提供随机数设备是/dev/random 和/dev/urandom ，<br>两个有区别，urandom安全性没有random高，但random需要时间间隔生成随机数。jdk默认调用random。</p></blockquote><h3 id="2、-WARN-Establishing-SSL-connection-without-server’s-identity-verification-is-not-recommended"><a href="#2、-WARN-Establishing-SSL-connection-without-server’s-identity-verification-is-not-recommended" class="headerlink" title="2、 WARN: Establishing SSL connection without server’s identity verification is not recommended."></a>2、 WARN: Establishing SSL connection without server’s identity verification is not recommended.</h3><p>具体错误是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Mon Jul 09 09:30:13 CST 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</span><br><span class="line">Mon Jul 09 09:30:13 CST 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</span><br><span class="line">Mon Jul 09 09:30:14 CST 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</span><br></pre></td></tr></table></figure></p><p>这个错误会打几遍，每一遍都会卡一会儿，应该是在验证mysql的SSL配置。<br>查阅资料说mysql的高版本默认要求使用SSL链接，所以在没有配置SSL也没有说SSL不需要时，就会一直验证，验证好几遍以后放弃。<br>这个时间大概有1分钟。<br>当然，方案就是在jdbc的链接上加上userSSL=false这个参数，<br><code>jdbc:p6spy:mysql://127.0.0.1:3306/chuangke?characterEncoding=utf-8&amp;useSSL=false&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=Hongkong&amp;autoReconnect=true</code><br>类似这样。</p><h3 id="3、-禁用Springboot的JNDI功能"><a href="#3、-禁用Springboot的JNDI功能" class="headerlink" title="3、 禁用Springboot的JNDI功能"></a>3、 禁用Springboot的JNDI功能</h3><p>原来的log<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">10:40:24.103 [localhost-startStop-1] DEBUG org.springframework.web.context.support.StandardServletEnvironment - Replacing PropertySource &apos;servletContextInitParams&apos; with &apos;servletContextInitParams&apos;</span><br><span class="line">10:40:24.685 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging.exception-conversion-word]</span><br><span class="line">10:40:24.686 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging.exception-conversion-word] not found - trying original name [logging.exception-conversion-word]. javax.naming.NameNotFoundException: Name [logging.exception-conversion-word] is not bound in this Context. Unable to find [logging.exception-conversion-word].</span><br><span class="line">10:40:24.687 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging.exception-conversion-word]</span><br><span class="line">10:40:24.687 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging.exception-conversion-word] threw NamingException with message: Name [logging.exception-conversion-word] is not bound in this Context. Unable to find [logging.exception-conversion-word].. Returning null.</span><br><span class="line">10:40:24.687 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging.exception_conversion_word]</span><br><span class="line">10:40:24.688 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging.exception_conversion_word] not found - trying original name [logging.exception_conversion_word]. javax.naming.NameNotFoundException: Name [logging.exception_conversion_word] is not bound in this Context. Unable to find [logging.exception_conversion_word].</span><br><span class="line">10:40:24.688 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging.exception_conversion_word]</span><br><span class="line">10:40:24.688 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging.exception_conversion_word] threw NamingException with message: Name [logging.exception_conversion_word] is not bound in this Context. Unable to find [logging.exception_conversion_word].. Returning null.</span><br><span class="line">10:40:24.689 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging.exceptionConversionWord]</span><br><span class="line">10:40:24.689 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging.exceptionConversionWord] not found - trying original name [logging.exceptionConversionWord]. javax.naming.NameNotFoundException: Name [logging.exceptionConversionWord] is not bound in this Context. Unable to find [logging.exceptionConversionWord].</span><br><span class="line">10:40:24.689 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging.exceptionConversionWord]</span><br><span class="line">10:40:24.689 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging.exceptionConversionWord] threw NamingException with message: Name [logging.exceptionConversionWord] is not bound in this Context. Unable to find [logging.exceptionConversionWord].. Returning null.</span><br><span class="line">10:40:24.689 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging.exceptionconversionword]</span><br><span class="line">10:40:24.689 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging.exceptionconversionword] not found - trying original name [logging.exceptionconversionword]. javax.naming.NameNotFoundException: Name [logging.exceptionconversionword] is not bound in this Context. Unable to find [logging.exceptionconversionword].</span><br><span class="line">10:40:24.689 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging.exceptionconversionword]</span><br><span class="line">10:40:24.690 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging.exceptionconversionword] threw NamingException with message: Name [logging.exceptionconversionword] is not bound in this Context. Unable to find [logging.exceptionconversionword].. Returning null.</span><br><span class="line">10:40:24.690 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging.EXCEPTION-CONVERSION-WORD]</span><br><span class="line">10:40:24.690 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging.EXCEPTION-CONVERSION-WORD] not found - trying original name [logging.EXCEPTION-CONVERSION-WORD]. javax.naming.NameNotFoundException: Name [logging.EXCEPTION-CONVERSION-WORD] is not bound in this Context. Unable to find [logging.EXCEPTION-CONVERSION-WORD].</span><br><span class="line">10:40:24.690 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging.EXCEPTION-CONVERSION-WORD]</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging.EXCEPTION-CONVERSION-WORD] threw NamingException with message: Name [logging.EXCEPTION-CONVERSION-WORD] is not bound in this Context. Unable to find [logging.EXCEPTION-CONVERSION-WORD].. Returning null.</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging.EXCEPTION_CONVERSION_WORD]</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging.EXCEPTION_CONVERSION_WORD] not found - trying original name [logging.EXCEPTION_CONVERSION_WORD]. javax.naming.NameNotFoundException: Name [logging.EXCEPTION_CONVERSION_WORD] is not bound in this Context. Unable to find [logging.EXCEPTION_CONVERSION_WORD].</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging.EXCEPTION_CONVERSION_WORD]</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging.EXCEPTION_CONVERSION_WORD] threw NamingException with message: Name [logging.EXCEPTION_CONVERSION_WORD] is not bound in this Context. Unable to find [logging.EXCEPTION_CONVERSION_WORD].. Returning null.</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging.EXCEPTIONCONVERSIONWORD]</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging.EXCEPTIONCONVERSIONWORD] not found - trying original name [logging.EXCEPTIONCONVERSIONWORD]. javax.naming.NameNotFoundException: Name [logging.EXCEPTIONCONVERSIONWORD] is not bound in this Context. Unable to find [logging.EXCEPTIONCONVERSIONWORD].</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging.EXCEPTIONCONVERSIONWORD]</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging.EXCEPTIONCONVERSIONWORD] threw NamingException with message: Name [logging.EXCEPTIONCONVERSIONWORD] is not bound in this Context. Unable to find [logging.EXCEPTIONCONVERSIONWORD].. Returning null.</span><br><span class="line">10:40:24.691 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging_exception-conversion-word]</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging_exception-conversion-word] not found - trying original name [logging_exception-conversion-word]. javax.naming.NameNotFoundException: Name [logging_exception-conversion-word] is not bound in this Context. Unable to find [logging_exception-conversion-word].</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging_exception-conversion-word]</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging_exception-conversion-word] threw NamingException with message: Name [logging_exception-conversion-word] is not bound in this Context. Unable to find [logging_exception-conversion-word].. Returning null.</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging_exception_conversion_word]</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging_exception_conversion_word] not found - trying original name [logging_exception_conversion_word]. javax.naming.NameNotFoundException: Name [logging_exception_conversion_word] is not bound in this Context. Unable to find [logging_exception_conversion_word].</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging_exception_conversion_word]</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging_exception_conversion_word] threw NamingException with message: Name [logging_exception_conversion_word] is not bound in this Context. Unable to find [logging_exception_conversion_word].. Returning null.</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging_exceptionConversionWord]</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging_exceptionConversionWord] not found - trying original name [logging_exceptionConversionWord]. javax.naming.NameNotFoundException: Name [logging_exceptionConversionWord] is not bound in this Context. Unable to find [logging_exceptionConversionWord].</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging_exceptionConversionWord]</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiPropertySource - JNDI lookup for name [logging_exceptionConversionWord] threw NamingException with message: Name [logging_exceptionConversionWord] is not bound in this Context. Unable to find [logging_exceptionConversionWord].. Returning null.</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [java:comp/env/logging_exceptionconversionword]</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/logging_exceptionconversionword] not found - trying original name [logging_exceptionconversionword]. javax.naming.NameNotFoundException: Name [logging_exceptionconversionword] is not bound in this Context. Unable to find [logging_exceptionconversionword].</span><br><span class="line">10:40:24.692 [localhost-startStop-1] DEBUG org.springframework.jndi.JndiTemplate - Looking up JNDI object with name [logging_exceptionconversionword]</span><br></pre></td></tr></table></figure></p><p>参考<a href="https://blog.csdn.net/qq_30739519/article/details/78536965" target="_blank" rel="noopener">配置教程</a>修改。</p><p>摘要：在实际项目开发中使用springboot的时候，可以使用jar包的方式运行项目，也可以将springboot项目打成war包使用。springboot war包运行可能会出现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> [localhost-startStop-1] DEBUG org.springframework.jndi.JndiLocatorDelegate - Converted JNDI name [java:comp/env/LOGGING.pattern_level] not found - trying original name [LOGGING.pattern_level]. javax.naming.NameNotFoundException: Name [LOGGING.pattern_level] is not bound in this Context. Unable to find [LOGGING.pattern_level]。</span><br></pre></td></tr></table></figure></p><p>反正就是诸如此类的问题吧。</p><p>上述的问题，在高版本的spring boot中会出现的，低版本不会出现这个问题。因为高版本中引入了JNDI查询的操作。</p><p>解决方案：</p><p>在项目的根目录中新建<code>spring.properties</code>配置文件，如下图所示：</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-3d6174c65226a0c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>添加属性以及值，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.jndi.ignore=true</span><br></pre></td></tr></table></figure></p><p>原理:</p><p>打开<code>StandardServletEnvironment</code>类，该类中的<code>customizePropertySources</code>方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public static final String JNDI_PROPERTY_SOURCE_NAME = &quot;jndiProperties&quot;;</span><br><span class="line">protected void customizePropertySources(MutablePropertySources propertySources) &#123;</span><br><span class="line">propertySources.addLast(new StubPropertySource(SERVLET_CONFIG_PROPERTY_SOURCE_NAME));</span><br><span class="line">propertySources.addLast(new StubPropertySource(SERVLET_CONTEXT_PROPERTY_SOURCE_NAME));</span><br><span class="line">if (JndiLocatorDelegate.isDefaultJndiEnvironmentAvailable()) &#123;</span><br><span class="line">propertySources.addLast(new JndiPropertySource(JNDI_PROPERTY_SOURCE_NAME));</span><br><span class="line">&#125;</span><br><span class="line">    super.customizePropertySources(propertySources);</span><br><span class="line">&#125;</span><br><span class="line">JndiLocatorDelegate.isDefaultJndiEnvironmentAvailable()代码如下：</span><br><span class="line">public static final String IGNORE_JNDI_PROPERTY_NAME = &quot;spring.jndi.ignore&quot;;</span><br><span class="line">private static final boolean shouldIgnoreDefaultJndiEnvironment =</span><br><span class="line">SpringProperties.getFlag(IGNORE_JNDI_PROPERTY_NAME);</span><br><span class="line">public static boolean isDefaultJndiEnvironmentAvailable() &#123;</span><br><span class="line">//如果忽略jndi则返回false</span><br><span class="line">if (shouldIgnoreDefaultJndiEnvironment) &#123;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">try &#123;</span><br><span class="line">                  //准备jndi环境</span><br><span class="line">        new InitialContext().getEnvironment();</span><br><span class="line">        return true;</span><br><span class="line">&#125;</span><br><span class="line">catch (Throwable ex) &#123;</span><br><span class="line">        return false;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过上文可知：</p><p>1、如果我们需要忽略jndi则可以配置<code>spring.jndi.ignore</code>值为true即可。</p><p>2、在哪里配置呢？我们不妨跟进<code>SpringProperties</code>类中的getFlag方法。</p><p>spring.jndi.ignore获取原理</p><p>SpringProperties类的getFlag方法如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">public static boolean getFlag(String key) &#123;</span><br><span class="line">    return Boolean.parseBoolean(getProperty(key));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继续跟进getProperty方法，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public static String getProperty(String key) &#123;</span><br><span class="line">       //获取spring.jndi.ignore值</span><br><span class="line">String value = localProperties.getProperty(key);</span><br><span class="line">if (value == null) &#123;</span><br><span class="line">    try &#123;//获取系统的变量</span><br><span class="line">    value = System.getProperty(key);</span><br><span class="line">    &#125;</span><br><span class="line">        catch (Throwable ex) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述的方法可以总结如下：</p><p>从localProperties集合中获取<code>spring.jndi.ignore</code>属性，如果没有获取到则直接从环境变量中进行获取。localProperties集合在哪里初始化的呢？我们看一下SpringProperties类中的静态代码块，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">private static final String PROPERTIES_RESOURCE_LOCATION = &quot;spring.properties&quot;;</span><br><span class="line">static &#123;</span><br><span class="line">try &#123;</span><br><span class="line">    ClassLoader cl = SpringProperties.class.getClassLoader();</span><br><span class="line">    URL url = (cl != null ? cl.getResource(PROPERTIES_RESOURCE_LOCATION) :ClassLoader.getSystemResource(PROPERTIES_RESOURCE_LOCATION));</span><br><span class="line">    if (url != null) &#123;</span><br><span class="line">        logger.info(&quot;Found &apos;spring.properties&apos; file in local classpath&quot;);</span><br><span class="line">        InputStream is = url.openStream();</span><br><span class="line">        try &#123;</span><br><span class="line">            localProperties.load(is);</span><br><span class="line">        &#125;</span><br><span class="line">        finally &#123;</span><br><span class="line">            is.close();</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">catch (IOException ex) &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到上面的代码，我们明白了，原来这里是直接读取跟目录中的spring.properties文件中的所有属性。看到这里，焕然大悟。原来如此。</p><ul><li>调试中，我修改了<code>application.yml</code>或者<code>application-dev.yml</code>配置文件，在文件中加入了<code>spring.jndi.ignore=true</code>均为生效，必须新建一个<code>spring.properties</code>，我没有验证<code>spring.yml</code>行不行。</li></ul><p>重启tomcat容器，没有jndi的警告日志了。</p><p>注意：这种日志如果在本地以直接运行springboot的入口文件的方式启动，是没有的，只有当打成war包，放在tomcat里，启动<code>tomcat/bin/startup.sh</code>时才会有。</p><p>经过几步修改，tomcat启动速度明显提高。</p><p>部署慢修改原文：<a href="https://www.cnblogs.com/mycifeng/p/6972446.html" target="_blank" rel="noopener">https://www.cnblogs.com/mycifeng/p/6972446.html</a><br>禁用jndi方式原文：<a href="https://blog.csdn.net/qq_30739519/article/details/78536965" target="_blank" rel="noopener">https://blog.csdn.net/qq_30739519/article/details/78536965</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> tools </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>reactJS项目build时发生“v8::internal::V8::FatalProcessOutOfMemory”异常</title>
      <link href="/2018/07/07/reactJS%E9%A1%B9%E7%9B%AEbuild%E6%97%B6%E5%8F%91%E7%94%9F%E2%80%9Cv8::internal::V8::FatalProcessOutOfMemory%E2%80%9D%E5%BC%82%E5%B8%B8/"/>
      <url>/2018/07/07/reactJS%E9%A1%B9%E7%9B%AEbuild%E6%97%B6%E5%8F%91%E7%94%9F%E2%80%9Cv8::internal::V8::FatalProcessOutOfMemory%E2%80%9D%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<p>jenkins上build Ant design Pro管理后台项目时内存溢出异常解决<br><a href="https://www.jianshu.com/p/9c531b065018" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>最近工程里有个用<a href="https://pro.ant.design/index-cn" target="_blank" rel="noopener">Ant Design Pro</a>搭建的前后端分离的后台管理系统，一直使用jenkins自动部署的，但是今天一不小心build失败了。虽然很快就搞定了，但是还是记录一下，好记性不如烂笔头。</p><h2 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h2><p>构建失败信息是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre class=&quot;console-output&quot; style=&quot;box-sizing: border-box; white-space: pre-wrap; word-wrap: break-word; margin: 0px; color: rgb(51, 51, 51); font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;Started by user [超级管理员](http://jenkins.haier.haiqiang.xin:7776/user/admin)</span><br><span class="line">Building in workspace /var/lib/jenkins/workspace/chuangke_pre_portal_web_auto_deploy</span><br><span class="line"> &gt; git rev-parse --is-inside-work-tree # timeout=10</span><br><span class="line">Fetching changes from the remote Git repository</span><br><span class="line"> &gt; git config remote.origin.url git@git.3vyd.com:portalmanage.git # timeout=10</span><br><span class="line">Fetching upstream changes from git@git.3vyd.com:portalmanage.git</span><br><span class="line"> &gt; git --version # timeout=10</span><br><span class="line"> &gt; git fetch --tags --progress git@git.3vyd.com:portalmanage.git +refs/heads/*:refs/remotes/origin/*</span><br><span class="line"> &gt; git rev-parse refs/remotes/origin/master^&#123;commit&#125; # timeout=10</span><br><span class="line"> &gt; git rev-parse refs/remotes/origin/origin/master^&#123;commit&#125; # timeout=10</span><br><span class="line">Checking out Revision c9a9d48ae6453a8d84734920f8718abec5598f2a (refs/remotes/origin/master)</span><br><span class="line"> &gt; git config core.sparsecheckout # timeout=10</span><br><span class="line"> &gt; git checkout -f c9a9d48ae6453a8d84734920f8718abec5598f2a</span><br><span class="line">Commit message: &quot;直播统计&quot;</span><br><span class="line"> &gt; git rev-list --no-walk 34ede46c51b5a223746b1c07d0845952d7d0eefd # timeout=10</span><br><span class="line">[chuangke_pre_portal_web_auto_deploy] $ /bin/sh -xe /tmp/jenkins1426166608252484443.sh</span><br><span class="line">+ yarn</span><br><span class="line">yarn install v1.3.2</span><br><span class="line">[1/4] Resolving packages...</span><br><span class="line">success Already up-to-date.</span><br><span class="line">Done in 2.31s.</span><br><span class="line">+ REACT_APP_BRANCH=PRE</span><br><span class="line">+ yarn build</span><br><span class="line">yarn run v1.3.2</span><br><span class="line">$ node scripts/build.js</span><br><span class="line">Creating an optimized production build...</span><br><span class="line"></span><br><span class="line">&lt;--- Last few GCs ---&gt;</span><br><span class="line"></span><br><span class="line">  780502 ms: Mark-sweep 1323.4 (1408.7) -&gt; 1317.3 (1408.7) MB, 955.6 / 0.0 ms [allocation failure] [GC in old space requested].</span><br><span class="line">  781304 ms: Mark-sweep 1317.3 (1408.7) -&gt; 1317.3 (1410.7) MB, 802.4 / 0.0 ms [allocation failure] [GC in old space requested].</span><br><span class="line">  782171 ms: Mark-sweep 1317.3 (1410.7) -&gt; 1326.8 (1403.7) MB, 866.5 / 0.0 ms [last resort gc].</span><br><span class="line">  782958 ms: Mark-sweep 1326.8 (1403.7) -&gt; 1336.9 (1403.7) MB, 787.3 / 0.0 ms [last resort gc].</span><br><span class="line"></span><br><span class="line">&lt;--- JS stacktrace ---&gt;</span><br><span class="line"></span><br><span class="line">==== JS stack trace =========================================</span><br><span class="line"></span><br><span class="line">Security context: 0x1116596cf781 &lt;JS Object&gt;</span><br><span class="line">    1: stringify [native json.js:~176] [pc=0x1ab7d7e562d3] (this=0x1116596c92a1 &lt;a JSON with map 0xa5d18e09b09&gt;,E=0x27fe2de64711 &lt;an Object with map 0x23d396b32619&gt;,F=0x111659604381 &lt;undefined&gt;,S=0x111659604381 &lt;undefined&gt;)</span><br><span class="line">    2: arguments adaptor frame: 1-&gt;3</span><br><span class="line">    3: /* anonymous */(aka /* anonymous */) [/var/lib/jenkins/workspace/chuangke_pre_portal_web_auto_deploy/node_modules/webpack/lib/Sou...</span><br><span class="line"></span><br><span class="line">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory</span><br><span class="line"> 1: node::Abort() [node]</span><br><span class="line"> 2: 0xdf1d9c [node]</span><br><span class="line"> 3: v8::Utils::ReportApiFailure(char const*, char const*) [node]</span><br><span class="line"> 4: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [node]</span><br><span class="line"> 5: v8::internal::Factory::NewRawTwoByteString(int, v8::internal::PretenureFlag) [node]</span><br><span class="line"> 6: v8::internal::String::SlowFlatten(v8::internal::Handle&lt;v8::internal::ConsString&gt;, v8::internal::PretenureFlag) [node]</span><br><span class="line"> 7: v8::internal::String::Flatten(v8::internal::Handle&lt;v8::internal::String&gt;, v8::internal::PretenureFlag) [node]</span><br><span class="line"> 8: v8::internal::BasicJsonStringifier::SerializeString(v8::internal::Handle&lt;v8::internal::String&gt;) [node]</span><br><span class="line"> 9: v8::internal::BasicJsonStringifier::Result v8::internal::BasicJsonStringifier::Serialize_&lt;false&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle&lt;v8::internal::Object&gt;) [node]</span><br><span class="line">10: v8::internal::BasicJsonStringifier::SerializeJSArraySlow(v8::internal::Handle&lt;v8::internal::JSArray&gt;, unsigned int, unsigned int) [node]</span><br><span class="line">11: v8::internal::BasicJsonStringifier::Result v8::internal::BasicJsonStringifier::Serialize_&lt;true&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle&lt;v8::internal::Object&gt;) [node]</span><br><span class="line">12: v8::internal::BasicJsonStringifier::Result v8::internal::BasicJsonStringifier::Serialize_&lt;false&gt;(v8::internal::Handle&lt;v8::internal::Object&gt;, bool, v8::internal::Handle&lt;v8::internal::Object&gt;) [node]</span><br><span class="line">13: v8::internal::BasicJsonStringifier::Stringify(v8::internal::Handle&lt;v8::internal::Object&gt;) [node]</span><br><span class="line">14: v8::internal::Runtime_BasicJSONStringify(int, v8::internal::Object**, v8::internal::Isolate*) [node]</span><br><span class="line">15: 0x1ab7ca0092a7</span><br><span class="line">error Command failed with signal &quot;SIGABRT&quot;.</span><br><span class="line">info Visit [https://yarnpkg.com/en/docs/cli/run](https://yarnpkg.com/en/docs/cli/run) for documentation about this command.</span><br><span class="line">Build step &apos;Execute shell&apos; marked build as failure</span><br><span class="line">Sending e-mails to: marvin.ma@3vyd.com damon.shen@3vyd.com</span><br><span class="line">Finished: FAILURE&lt;/pre&gt;</span><br></pre></td></tr></table></figure></p><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><p>1、Jenkins服务器系统内存不够<br>看了看jenkins所在服务器的内存，在jenkins执行这个job的时候，内存最高也就140%，因为服务器是Centos 4核16G的配置，用free查看，可用内存仍然9G多。当时没有截图，所以就不贴图了，但是肯定不是说服务器内存吃紧导致的。</p><p>2、排除了服务器本身内存小的问题，考虑本次build新进的代码的问题，看了一下就两个commit，因为网上有说是调用file.write的时候处理不当，会导致该问题的产生的，正好本次build有一个commit是添加了富文本编辑器。<br>但是检查一圈好像没有问题。</p><p>3、框架问题，限制了内存。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>最后通过<a href="https://stackoverflow.com/questions/38558989/node-js-heap-out-of-memory一文找到了解决方案。先做本地部署尝试，修改该job的build命令，将原来的" target="_blank" rel="noopener">https://stackoverflow.com/questions/38558989/node-js-heap-out-of-memory一文找到了解决方案。先做本地部署尝试，修改该job的build命令，将原来的</a></p><blockquote><p>yarn<br>REACT_APP_BRANCH=PRE yarn build</p></blockquote><p>改成了</p><blockquote><p>yarn<br>REACT_APP_BRANCH=PRE node –max-old-space-size=4096 scripts/build.js<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4060ebe238c7a7bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="jenkins build shell"></p></blockquote><p>重新build，success。</p><p>然后因为该项目分开发，测试、生产等多个环境，因此打算在代码框架里直接作为配置项，具体的做法是在package.json的build命令前加上指定内存的参数<code>--max-old-space-size=4096</code>。将原来的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;start&quot;: &quot;node scripts/start.js&quot;,</span><br><span class="line">    &quot;build&quot;: &quot;node scripts/build.js&quot;,</span><br><span class="line">    &quot;test&quot;: &quot;node scripts/test.js --env=jsdom&quot;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>修改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;start&quot;: &quot;node scripts/start.js&quot;,</span><br><span class="line">  &quot;build&quot;: &quot;node --max-old-space-size=4096 scripts/build.js&quot;,</span><br><span class="line">  &quot;test&quot;: &quot;node scripts/test.js --env=jsdom&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>提交代码，jenkins修改回原来的<code>yarn start</code>，重新build， SUCCESS。<br>一劳永逸。</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>tcpdump抓包并用WireShark进行数据分析</title>
      <link href="/2018/07/07/tcpdump%E6%8A%93%E5%8C%85%E5%B9%B6%E7%94%A8WireShark%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
      <url>/2018/07/07/tcpdump%E6%8A%93%E5%8C%85%E5%B9%B6%E7%94%A8WireShark%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>在linux上使用tcpdump抓取http/tcp报文，使用WireShark进行参数分析。<br><a href="https://www.jianshu.com/p/4af0d0fe5624" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="1、使用背景"><a href="#1、使用背景" class="headerlink" title="1、使用背景"></a>1、使用背景</h2><p>最近在项目开发时遇到一种情况，写的接口前端同事反馈是400，后端同事认为http status 是4开头的，肯定是前端的问题，前端的同事又不知道接口是怎么写的，需要传的参数也传了，但是就是400，那么作为负责人，不能任由两边踢皮球吧，得拿出个方案看看为啥400。<br>当然tacpdump这款强大的抓包工具不只是用使用解决我这个很low的问题，我的场景如果是前后端配合得当的话，或者已有默契的话，更好点，如果有文档，就不会有这个问题了。废话少说，直接说怎么做的吧。<br>最后选择linux服务器上抓好报文，用WireShark这款强大的抓包工具来分析一下啦。</p><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><ul><li><p>Wireshark是一个网络协议检测工具，支持Windows平台和Unix平台，我一般只在Windows平台下使用Wireshark，如果是Linux的话，我直接用tcpdump了，因为我工作环境中的Linux一般只有字符界面，且一般而言Linux都自带的tcpdump，或者用tcpdump抓包以后用Wireshark打开分析。<br>在Windows平台下，Wireshark通过WinPcap进行抓包，封装的很好，使用起来很方便，可以很容易的制定抓包过滤器或者显示过滤器，具体在下面介绍。Wireshark是一个免费的工具，只要google一下就能很容易找到下载的地方。</p></li><li><p>tcpdump是基于Unix系统的命令行式的数据包嗅探工具。如果要使用tcpdump抓取其他主机MAC地址的数据包，必须开启网卡混杂模式，所谓混杂模式，用最简单的语言就是让网卡抓取任何经过它的数据包，不管这个数据包是不是发给它或者是它发出的，点击【<a href="http://en.wikipedia.org/wiki/Promiscuous_mode" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Promiscuous_mode</a>】获取更多有关混杂模式的资料。一般而言，Unix不会让普通用户设置混杂模式，因为这样可以看到别人的信息，比如telnet的用户名和密码，这样会引起一些安全上的问题，所以只有root用户可以开启混杂模式，开启混杂模式的命令是：ifconfig eth0 promisc, eth0是你要打开混杂模式的网卡。肯定有人要问如果在windows下要不要打开混杂模式，windows下网卡没有什么混杂模式不混杂模式，在于应用程序本身，如使用Wireshark抓包的时候可以通过设置为在混杂模式下抓包（这就是为什么该死的ARP欺骗病毒可以猖狂的原因）。<br>tcpdump当然也可以指定抓包过滤器，而且其过滤器语言非常著名，叫做Berkeley包过滤，简称BPF语言。</p></li></ul><h2 id="2、实际操作"><a href="#2、实际操作" class="headerlink" title="2、实际操作"></a>2、实际操作</h2><p>实际操作过程因为我作为后端工程师，没有前端环境，因此用我本地接口调试神奇postman来模拟前端。<br>服务端有一个接口是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@PostMapping(&quot;tests&quot;)</span><br><span class="line">public RtnResult&lt;String&gt; testPost(@RequestBody DataVo vo) &#123;</span><br><span class="line">    logger.info(&quot;post data:&#123;&#125;&quot; , JSONObject.toJSONString(vo));</span><br><span class="line">    return new RtnResult&lt;&gt;(0,&quot;保存成功&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>用postman本地测试，故意不传参数，效果如下：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-0eb65273110f37b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="参数错误400的场景"><br>接下来，抓包查看。</p><h3 id="2-1、准备工作"><a href="#2-1、准备工作" class="headerlink" title="2.1、准备工作"></a>2.1、准备工作</h3><ul><li>先看看自己本地的ip，有个比较坑的地方，就是不要想当然的认为在本地命令行ipconfig或者ifconfig查看到的就是所谓的本地ip，要看外网出去的对公IP地址。比如<a href="http://www.ip138.com/" target="_blank" rel="noopener">http://www.ip138.com/</a>这个网站可以就可以产看本地ip，可以试试，两种方式得到的ip地址是不一样的。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-a60592db30bb3417.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="我的本地IP地址"></li><li>确保服务器安装了tcpdump，一般linux都自带了这个命令，如果没有的自行百度安装。</li><li>确定服务器的网卡号，一般默认是eth0。<h3 id="2-2、抓取服务端报文"><a href="#2-2、抓取服务端报文" class="headerlink" title="2.2、抓取服务端报文"></a>2.2、抓取服务端报文</h3>例如我截取本机<code>112.224.67.134</code>和主机<code>39.106.35.56</code>之间的数据，在服务器<code>39.106.35.56</code>的任意目录执行如下命令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@dev ~]# tcpdump -A -i eth0 -w dump-file1 host 112.224.67.134</span><br><span class="line">tcpdump: listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br></pre></td></tr></table></figure></li></ul><p>在本地用post请求服务器的接口<br><img src="https://upload-images.jianshu.io/upload_images/4109786-838d2589c586a4c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="9.png"></p><p>Ctrl+C停止保存抓包，报文内容保存在dump-file1文件内<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@dev ~]# tcpdump -A -i eth0 -w dump-file1 host 112.224.67.134</span><br><span class="line">tcpdump: listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes</span><br><span class="line">^C24 packets captured</span><br><span class="line">25 packets received by filter</span><br><span class="line">0 packets dropped by kernel</span><br><span class="line">[root@dev ~]# ll</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 tcpdump tcpdump 2880 Jul  3 14:05 dump-file1</span><br><span class="line">[root@dev ~]#</span><br></pre></td></tr></table></figure></p><p>可以使用<code>tcpdump -r dump-file1</code>命令查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@dev ~]# tcpdump -r dump-file1 </span><br><span class="line">reading from file dump-file1, link-type EN10MB (Ethernet)</span><br><span class="line">14:04:30.636260 IP dev.ssh &gt; 112.224.67.134.26919: Flags [P.], seq 332116900:332116952, ack 3962938602, win 255, length 52</span><br><span class="line">14:04:30.661616 IP dev.ssh &gt; 112.224.67.134.26919: Flags [P.], seq 52:184, ack 1, win 255, length 132</span><br><span class="line">14:04:30.710115 IP 112.224.67.134.26919 &gt; dev.ssh: Flags [.], ack 184, win 66, length 0</span><br><span class="line">14:04:49.658756 IP 112.224.67.134.26920 &gt; dev.ssh: Flags [P.], seq 3449703456:3449703492, ack 3469026640, win 64, length 36</span><br><span class="line">14:04:49.698057 IP dev.ssh &gt; 112.224.67.134.26920: Flags [.], ack 36, win 255, length 0</span><br><span class="line">14:05:04.771846 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [S], seq 3379667287, win 17520, options [mss 1400,nop,wscale 8,nop,nop,sackOK], length 0</span><br><span class="line">14:05:04.771914 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [S.], seq 2331290743, ack 3379667288, win 29200, options [mss 1460,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">14:05:04.811492 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [.], ack 1, win 68, length 0</span><br><span class="line">14:05:04.820465 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [P.], seq 1:415, ack 1, win 68, length 414</span><br><span class="line">14:05:04.820496 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [.], ack 415, win 237, length 0</span><br><span class="line">14:05:04.824051 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [P.], seq 1:354, ack 415, win 237, length 353</span><br><span class="line">14:05:04.824297 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [P.], seq 354:359, ack 415, win 237, length 5</span><br><span class="line">14:05:04.871458 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [.], ack 359, win 67, length 0</span><br><span class="line">14:05:05.911468 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [.], seq 414:415, ack 359, win 67, length 1</span><br><span class="line">14:05:05.911526 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [.], ack 415, win 237, options [nop,nop,sack 1 &#123;414:415&#125;], length 0</span><br><span class="line">14:05:06.951486 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [.], seq 414:415, ack 359, win 67, length 1</span><br><span class="line">14:05:06.951537 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [.], ack 415, win 237, options [nop,nop,sack 1 &#123;414:415&#125;], length 0</span><br><span class="line">14:05:08.011588 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [.], seq 414:415, ack 359, win 67, length 1</span><br><span class="line">14:05:08.011644 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [.], ack 415, win 237, options [nop,nop,sack 1 &#123;414:415&#125;], length 0</span><br><span class="line">14:05:09.051406 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [.], seq 414:415, ack 359, win 67, length 1</span><br><span class="line">14:05:09.051452 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [.], ack 415, win 237, options [nop,nop,sack 1 &#123;414:415&#125;], length 0</span><br><span class="line">14:05:10.091399 IP 112.224.67.134.58166 &gt; dev.d-s-n: Flags [.], seq 414:415, ack 359, win 67, length 1</span><br><span class="line">14:05:10.091451 IP dev.d-s-n &gt; 112.224.67.134.58166: Flags [.], ack 415, win 237, options [nop,nop,sack 1 &#123;414:415&#125;], length 0</span><br><span class="line">14:05:10.130248 IP 112.224.67.134.26919 &gt; dev.ssh: Flags [P.], seq 1:53, ack 184, win 66, length 52</span><br><span class="line">[root@dev ~]#</span><br></pre></td></tr></table></figure></p><h3 id="2-2、用wireshark分析报文内容"><a href="#2-2、用wireshark分析报文内容" class="headerlink" title="2.2、用wireshark分析报文内容"></a>2.2、用wireshark分析报文内容</h3><p>了解tcp网络协议的，看到以上报文，应该已经了解一二了。<br>为了将其转换成常用的http协议，我们用wireshark这款工具再分析一下。<br>下载该文件，在windows上可以直接将该文件拖入到wireshark，会自动打开。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-f34ad2b9ed3d62e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tcpdump文件在WireShark中打开"><br>可以看到三次握手的具体报文。同时看到了一个post的http request和一个http status为200的http response。右击post请求，选择【追踪流】-&gt;【TCP流】：<br><img src="https://upload-images.jianshu.io/upload_images/4109786-9abc599bc4633018.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TCP流查看"><br>看到了前端传过来的参数和返回值。</p><p>当然，查看服务器log，也看到了日志信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2018-07-03 14:24:16.660  INFO 29004 --- [nio-8086-exec-6] com.hczt.shop.weixin.config.CorsFilter   : requesturi is : /weixin/tests</span><br><span class="line">2018-07-03 14:24:16.661  INFO 29004 --- [nio-8086-exec-6] c.h.s.weixin.controller.TestController   : post data:&#123;&quot;address&quot;:&quot;山东青岛&quot;,&quot;age&quot;:28,&quot;name&quot;:&quot;张三&quot;,&quot;sex&quot;:&quot;男&quot;&#125;</span><br></pre></td></tr></table></figure></p><p>这里演示的正常返回的，如果接口是400，服务端也就没有这条log，这时候抓包也才更有意义了。<br>到这里，基本的使用就介绍完了。至于WireShark在本地怎么使用，怎么添加过滤器等，查看其它博文学习。</p><h2 id="3、推荐"><a href="#3、推荐" class="headerlink" title="3、推荐"></a>3、推荐</h2><p><a href="https://www.cnblogs.com/Jerry-zhao2110/p/8282427.html" target="_blank" rel="noopener">WireShark抓包使用教程</a><br><a href="https://www.jianshu.com/p/a62ed1bb5b20" target="_blank" rel="noopener">tcpdump语法介绍与常用参数举例</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>“SpringBoot2.0不容错过的新特性 WebFlux响应式编程”学习笔记(一)</title>
      <link href="/2018/07/07/springboot2.0-webflux-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
      <url>/2018/07/07/springboot2.0-webflux-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<p>WebFlux响应式编程好记性不如烂笔头<br><a href="https://www.jianshu.com/p/682caeeb468d" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>慕课网学习地址：<a href="https://coding.imooc.com/class/209.html" target="_blank" rel="noopener">https://coding.imooc.com/class/209.html</a><br>原课程是付费的，但是同事发了我下载离线版，拿来抽空学呗，学无止境。</p><h2 id="第一节-课程介绍"><a href="#第一节-课程介绍" class="headerlink" title="第一节  课程介绍"></a>第一节  课程介绍</h2><p><img src="https://upload-images.jianshu.io/upload_images/4109786-ddcc9cce64a44a23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="学习之路"></p><h2 id="第二节-函数式编程和lambda表达式"><a href="#第二节-函数式编程和lambda表达式" class="headerlink" title="第二节  函数式编程和lambda表达式"></a>第二节  函数式编程和lambda表达式</h2><ul><li><p>数组里取最小值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">int[] nums = &#123;33,55,-55,90,-666,90&#125;;</span><br><span class="line"></span><br><span class="line">int min = Integer.MAX_VALUE;</span><br><span class="line">for (int i : nums) &#123;</span><br><span class="line">if(i &lt; min) &#123;</span><br><span class="line">min = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(min);</span><br><span class="line"></span><br><span class="line">// jdk8 </span><br><span class="line">int min2 = IntStream.of(nums).parallel().min().getAsInt();</span><br><span class="line">System.out.println(min2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>多线程 匿名内部类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Object target = new Runnable() &#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void run() &#123;</span><br><span class="line">System.out.println(&quot;ok&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">new Thread((Runnable) target).start();</span><br><span class="line"></span><br><span class="line">// jdk8 lambda</span><br><span class="line">Object target2 = (Runnable)() -&gt; System.out.println(&quot;ok&quot;);</span><br><span class="line">Runnable target3 = () -&gt; System.out.println(&quot;ok&quot;);</span><br><span class="line">System.out.println(target2 == target3); // false</span><br><span class="line"></span><br><span class="line">new Thread((Runnable) target2).start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>函数接口以及链式操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import java.text.DecimalFormat;</span><br><span class="line">import java.util.function.Function;</span><br><span class="line"></span><br><span class="line">class MyMoney &#123;</span><br><span class="line">private final int money;</span><br><span class="line"></span><br><span class="line">public MyMoney(int money) &#123;</span><br><span class="line">this.money = money;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void printMoney(Function&lt;Integer, String&gt; moneyFormat) &#123;</span><br><span class="line">System.out.println(&quot;我的存款：&quot; + moneyFormat.apply(this.money));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class MoneyDemo &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">MyMoney me = new MyMoney(99999999);</span><br><span class="line">Function&lt;Integer, String&gt; moneyFormat = i -&gt; new DecimalFormat(&quot;#,###&quot;)</span><br><span class="line">.format(i);</span><br><span class="line">// 函数接口链式操作</span><br><span class="line">me.printMoney(moneyFormat.andThen(s -&gt; &quot;人民币 &quot; + s));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>运行效果</p><blockquote><p>我的存款：人民币 99,999,999</p><ul><li>函数式接口<br><img src="https://upload-images.jianshu.io/upload_images/4109786-1877565bbb6f559b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="常用的lambda接口"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// 断言函数接口</span><br><span class="line">IntPredicate predicate = i -&gt; i &gt; 0;</span><br><span class="line">System.out.println(predicate.test(-9));</span><br><span class="line"></span><br><span class="line">//建议使用带类型的接口，这样就不用写泛型了</span><br><span class="line">// IntConsumer</span><br><span class="line">// 消费函数接口</span><br><span class="line">Consumer&lt;String&gt; consumer = s -&gt; System.out.println(s);</span><br><span class="line">consumer.accept(&quot;输入的数据&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>方法引用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.function.Consumer;</span><br><span class="line">import java.util.function.IntUnaryOperator;</span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author marvin.ma</span><br><span class="line"> * @create 2018-07-03 18:58</span><br><span class="line"> * @desc $&#123;DESCRIPTION&#125;</span><br><span class="line"> **/</span><br><span class="line">class Dog &#123;</span><br><span class="line">    private String name = &quot;哮天犬&quot;;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 默认10斤狗粮</span><br><span class="line">     */</span><br><span class="line">    private int food = 10;</span><br><span class="line"></span><br><span class="line">    public Dog() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 带参数的构造函数</span><br><span class="line">     *</span><br><span class="line">     * @param name</span><br><span class="line">     */</span><br><span class="line">    public Dog(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 狗叫，静态方法</span><br><span class="line">     *</span><br><span class="line">     * @param dog</span><br><span class="line">     */</span><br><span class="line">    public static void bark(Dog dog) &#123;</span><br><span class="line">        System.out.println(dog + &quot;叫了&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 吃狗粮 JDK</span><br><span class="line">     *</span><br><span class="line">     * 默认会把当前实例传入到非静态方法，参数名为this，位置是第一个；</span><br><span class="line">     *</span><br><span class="line">     * @param num</span><br><span class="line">     * @return 还剩下多少斤</span><br><span class="line">     */</span><br><span class="line">    public int eat(int num) &#123;</span><br><span class="line">        System.out.println(&quot;吃了&quot; + num + &quot;斤狗粮&quot;);</span><br><span class="line">        this.food -= num;</span><br><span class="line">        return this.food;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return this.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class MethodRefrenceDemo &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Dog dog = new Dog();</span><br><span class="line">        dog.eat(3);</span><br><span class="line"></span><br><span class="line">        // 方法引用</span><br><span class="line">        Consumer&lt;String&gt; consumer = System.out::println;</span><br><span class="line">        consumer.accept(&quot;接受的数据&quot;);</span><br><span class="line"></span><br><span class="line">        // 静态方法的方法引用</span><br><span class="line">        Consumer&lt;Dog&gt; consumer2 = Dog::bark;</span><br><span class="line">        consumer2.accept(dog);</span><br><span class="line"></span><br><span class="line">        // 非静态方法，使用对象实例的方法引用</span><br><span class="line">        // Function&lt;Integer, Integer&gt; function = dog::eat;</span><br><span class="line">        // UnaryOperator&lt;Integer&gt; function = dog::eat;   //入参出参都是Integer，可以用这个</span><br><span class="line">        IntUnaryOperator function = dog::eat;</span><br><span class="line"></span><br><span class="line">        // dog置空，不影响下面的函数执行，因为java 参数是传值</span><br><span class="line">        dog = null;</span><br><span class="line">        System.out.println(&quot;还剩下&quot; + function.applyAsInt(2) + &quot;斤&quot;);</span><br><span class="line">        //</span><br><span class="line">        // // 使用类名来方法引用</span><br><span class="line">        // BiFunction&lt;Dog, Integer, Integer&gt; eatFunction = Dog::eat;</span><br><span class="line">        // System.out.println(&quot;还剩下&quot; + eatFunction.apply(dog, 2) + &quot;斤&quot;);</span><br><span class="line">        //</span><br><span class="line">        // // 构造函数的方法引用</span><br><span class="line">        // Supplier&lt;Dog&gt; supplier = Dog::new;</span><br><span class="line">        // System.out.println(&quot;创建了新对象：&quot; + supplier.get());</span><br><span class="line">        //</span><br><span class="line">        // 带参数的构造函数的方法引用</span><br><span class="line">        Function&lt;String, Dog&gt; function2 = Dog::new;</span><br><span class="line">        System.out.println(&quot;创建了新对象：&quot; + function2.apply(&quot;旺财&quot;));</span><br><span class="line"></span><br><span class="line">        // 测试java变量是传值还是穿引用</span><br><span class="line">        List&lt;String&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">        test(list);</span><br><span class="line"></span><br><span class="line">        System.err.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static void test(List&lt;String&gt; list) &#123;</span><br><span class="line">        list = null;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>运行输出：<br>吃了3斤狗粮<br>接受的数据<br>哮天犬叫了<br>吃了2斤狗粮<br>还剩下5斤<br>创建了新对象：旺财</p><ul><li>类型引用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@FunctionalInterface</span><br><span class="line">interface IMath &#123;</span><br><span class="line">int add(int x, int y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@FunctionalInterface</span><br><span class="line">interface IMath2 &#123;</span><br><span class="line">int sub(int x, int y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class TypeDemo &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// 变量类型定义</span><br><span class="line">IMath lambda = (x, y) -&gt; x + y;</span><br><span class="line"></span><br><span class="line">// 数组里</span><br><span class="line">IMath[] lambdas = &#123; (x, y) -&gt; x + y &#125;;</span><br><span class="line"></span><br><span class="line">// 强转</span><br><span class="line">Object lambda2 = (IMath) (x, y) -&gt; x + y;</span><br><span class="line"></span><br><span class="line">// 通过返回类型</span><br><span class="line">IMath createLambda = createLambda();</span><br><span class="line"></span><br><span class="line">TypeDemo demo = new TypeDemo();</span><br><span class="line">// 当有二义性的时候，使用强转对应的接口解决</span><br><span class="line">demo.test( (IMath2)(x, y) -&gt; x + y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void test(IMath math) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public void test(IMath2 math) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static IMath createLambda() &#123;</span><br><span class="line">return  (x, y) -&gt; x + y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>级联表达式和珂里化<br>级联表达式：有多个箭头的函数<br>柯里化：把多个参数的函数转换为只有一个参数的函数<br>高阶函数：就是返回函数的函数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.util.function.Function;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 级联表达式和柯里化 </span><br><span class="line"> * 柯里化:把多个参数的函数转换为只有一个参数的函数 </span><br><span class="line"> * 柯里化的目的：函数标准化</span><br><span class="line"> * 高阶函数：就是返回函数的函数</span><br><span class="line"> */</span><br><span class="line">public class CurryDemo &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">// 实现了x+y的级联表达式</span><br><span class="line">Function&lt;Integer, Function&lt;Integer, Integer&gt;&gt; fun = x -&gt; y -&gt; x</span><br><span class="line">+ y;</span><br><span class="line">System.out.println(fun.apply(2).apply(3));</span><br><span class="line"></span><br><span class="line">Function&lt;Integer, Function&lt;Integer, Function&lt;Integer, Integer&gt;&gt;&gt; fun2 = x -&gt; y -&gt; z -&gt; x</span><br><span class="line">+ y + z;</span><br><span class="line">System.out.println(fun2.apply(2).apply(3).apply(4));</span><br><span class="line"></span><br><span class="line">int[] nums = &#123; 2, 3, 4 &#125;;</span><br><span class="line">Function f = fun2;</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; nums.length; i++) &#123;</span><br><span class="line">if (f instanceof Function) &#123;</span><br><span class="line">Object obj = f.apply(nums[i]);</span><br><span class="line">if (obj instanceof Function) &#123;</span><br><span class="line">f = (Function) obj;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">System.out.println(&quot;调用结束：结果为&quot; + obj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>执行结果</p><blockquote><p>5<br>9<br>调用结束：结果为9</p></blockquote><h2 id="第三节-Stream流编程"><a href="#第三节-Stream流编程" class="headerlink" title="第三节  Stream流编程"></a>第三节  Stream流编程</h2><ul><li>demo1<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">import java.util.stream.IntStream;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-03 22:17</span><br><span class="line"> * @desc $&#123;DESCRIPTION&#125;</span><br><span class="line"> **/</span><br><span class="line">public class StreamDemo1 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int[] nums = &#123;1, 2, 3&#125;;</span><br><span class="line">        // 外部迭代</span><br><span class="line">        int sum = 0;</span><br><span class="line">        for (int i : nums) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;结果为：&quot; + sum);</span><br><span class="line"></span><br><span class="line">        // 使用stream的内部迭代</span><br><span class="line">        // map就是中间操作（返回stream的操作）</span><br><span class="line">        // sum就是终止操作</span><br><span class="line">        System.out.println(&quot;结果为：&quot; + IntStream.of(nums).sum());</span><br><span class="line"></span><br><span class="line">        int sum2 = IntStream.of(nums).map(i -&gt; i*2).sum();</span><br><span class="line">        System.out.println(&quot;结果为：&quot; + sum2);</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;惰性求值就是终止没有调用的情况下，中间操作不会执行&quot;);</span><br><span class="line">        IntStream.of(nums).map(StreamDemo1::doubleNum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static int doubleNum(int i) &#123;</span><br><span class="line">        System.out.println(&quot;执行了乘以2&quot;);</span><br><span class="line">        return i * 2;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>执行结果:</p><blockquote><p>结果为：6<br>结果为：6<br>结果为：12<br>惰性求值就是终止没有调用的情况下，中间操作不会执行</p><ul><li>demo 2, 流的创建<br><img src="https://upload-images.jianshu.io/upload_images/4109786-6aca61443d5439ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="流的创建方式"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">public class StreamDemo2 &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">List&lt;String&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">// 从集合创建</span><br><span class="line">list.stream();</span><br><span class="line">list.parallelStream();</span><br><span class="line"></span><br><span class="line">// 从数组创建</span><br><span class="line">Arrays.stream(new int[] &#123; 2, 3, 5 &#125;);</span><br><span class="line"></span><br><span class="line">// 创建数字流</span><br><span class="line">IntStream.of(1, 2, 3);</span><br><span class="line">IntStream.rangeClosed(1, 10);</span><br><span class="line"></span><br><span class="line">// 使用random创建一个无限流</span><br><span class="line">new Random().ints().limit(10);</span><br><span class="line">Random random = new Random();</span><br><span class="line"></span><br><span class="line">// 自己产生流</span><br><span class="line">Stream.generate(() -&gt; random.nextInt()).limit(20);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li><p>demo3，流的中间操作<br><img src="https://upload-images.jianshu.io/upload_images/4109786-0eeddae844f4982f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="流的中间操作"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">import java.util.Random;</span><br><span class="line">import java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-03 22:39</span><br><span class="line"> * @desc 流的中间操作</span><br><span class="line"> **/</span><br><span class="line">public class StreamDemo3 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String str = &quot;my name is 007&quot;;</span><br><span class="line"></span><br><span class="line">        //把每个单词的长度调用出来</span><br><span class="line">        Stream.of(str.split(&quot; &quot;)).filter(s -&gt; s.length() &gt; 2).map(s -&gt; s.length()).forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">        //flatMap 适合A元素下面有B属性，B属性是集合，最终得到所有A元素里面的所有B属性的集合</span><br><span class="line">        // intStream/longStream 并不是Stream的子类，所以要进行装箱  boxed</span><br><span class="line">        Stream.of(str.split(&quot; &quot;)).flatMap(s -&gt; s.chars().boxed())</span><br><span class="line">            .forEach(i -&gt; System.out.println((char)i.intValue()));</span><br><span class="line"></span><br><span class="line">        //peek 用于debug，是个中间操作，与foreach不同，foreach是终止操作</span><br><span class="line">        System.out.println(&quot;--------------peek------------&quot;);</span><br><span class="line">        Stream.of(str.split(&quot; &quot;)).peek(System.out::println)</span><br><span class="line">                .forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">        //limit的使用</span><br><span class="line">        new Random().ints().filter(i -&gt; i &gt; 100 &amp;&amp; i &lt; 1000).limit(10)</span><br><span class="line">                .forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>stream的终止操作<br><img src="https://upload-images.jianshu.io/upload_images/4109786-6eb9843e164771f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="stream终止操作"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">import java.util.*;</span><br><span class="line">import java.util.stream.Collectors;</span><br><span class="line">import java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-06 13:33</span><br><span class="line"> * @desc $&#123;DESCRIPTION&#125;</span><br><span class="line"> **/</span><br><span class="line">public class StreamDemo4 &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String str = &quot;my name is 007&quot;;</span><br><span class="line"></span><br><span class="line">        //使用并行流</span><br><span class="line">        str.chars().parallel().forEach(i -&gt; System.out.print((char)i));</span><br><span class="line">        System.out.println();</span><br><span class="line">        // 使用 forEachOrdered 保证顺序</span><br><span class="line">        str.chars().parallel().forEachOrdered(i -&gt; System.out.print((char) i));</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        //收集到list/set   set时最后使用toSet方法</span><br><span class="line">        List&lt;String&gt; list  = Stream.of(str.split(&quot; &quot;)).collect(Collectors.toList());</span><br><span class="line">        System.out.println(list);</span><br><span class="line"></span><br><span class="line">        //使用reduce拼接字符串</span><br><span class="line">        Optional&lt;String&gt; letters = Stream.of(str.split(&quot; &quot;)).reduce((s1, s2) -&gt; s1 + &quot;|&quot; + s2);</span><br><span class="line">        System.out.println(letters.orElse(&quot;&quot;));</span><br><span class="line"></span><br><span class="line">        //带初始值的reduce</span><br><span class="line">        String reduce = Stream.of(str.split(&quot; &quot;)).reduce(&quot;&quot;,</span><br><span class="line">                (s1, s2) -&gt; s1 + &quot;|&quot; + s2);</span><br><span class="line">        System.out.println(reduce);</span><br><span class="line"></span><br><span class="line">        //计算所有单词总长度</span><br><span class="line">        Integer length = Stream.of(str.split(&quot; &quot;)).map(s -&gt; s.length())</span><br><span class="line">                .reduce(0, (s1, s2) -&gt; s1 +s2);</span><br><span class="line">        System.out.println(length);</span><br><span class="line"></span><br><span class="line">        //使用max函数</span><br><span class="line">        Optional&lt;String&gt; max = Stream.of(str.split(&quot; &quot;)).max(Comparator.comparingInt(String::length));</span><br><span class="line">        System.out.println(max.get());</span><br><span class="line"></span><br><span class="line">        //// 使用 findFirst 短路操作</span><br><span class="line">        OptionalInt findFirst = new Random().ints().filter(i -&gt; i &gt; 10000).findFirst();</span><br><span class="line">        System.out.println(findFirst.getAsInt());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>运行结果：</p><blockquote><p>immnae7y 0 0 s<br>my name is 007<br>[my, name, is, 007]&gt;<br>my|name|is|007<br>|my|name|is|007<br>11<br>name<br>113660557</p></blockquote><ul><li>并行流 &amp; 串行流知识点<br>1、调用parallel 产生一个并行流.<br>2、调用sequential 产生串行流.<br>3、多次调用 parallel / sequential, 以最后一次调用为准.<br>4、并行流使用的默认线程池名称: ForkJoinPool.commonPool，默认的线程数是 当前机器的cpu个数.<br>5、使用这个属性可以修改默认的线程数：System.setProperty(“java.util.concurrent.ForkJoinPool.common.parallelism”, “20”);<br>6、一般地，推荐使用自己的线程池, 不使用默认线程池, 防止任务被阻塞。注意在main函数中调用，要让main函数不退出，等会儿再退出。自己新起的线程要用shutdown关闭，不然会一直执行着。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">  ForkJoinPool pool = new ForkJoinPool(20);</span><br><span class="line">pool.submit(() -&gt; IntStream.range(1, 100).parallel()</span><br><span class="line">.peek(StreamDemo5::debug).count());</span><br><span class="line">pool.shutdown();</span><br><span class="line"></span><br><span class="line">synchronized (pool) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">pool.wait();</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void debug(int i) &#123;</span><br><span class="line">System.out.println(Thread.currentThread().getName() + &quot; debug &quot; + i);</span><br><span class="line">try &#123;</span><br><span class="line">TimeUnit.SECONDS.sleep(3);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>运行结果</p><blockquote><p>ForkJoinPool-1-worker-25 debug 65<br>ForkJoinPool-1-worker-18 debug 31<br>ForkJoinPool-1-worker-11 debug 90<br>ForkJoinPool-1-worker-4 debug 15<br>ForkJoinPool-1-worker-19 debug 56<br>ForkJoinPool-1-worker-15 debug 81<br>ForkJoinPool-1-worker-8 debug 21<br>ForkJoinPool-1-worker-26 debug 40<br>ForkJoinPool-1-worker-29 debug 43<br>ForkJoinPool-1-worker-12 debug 93<br>ForkJoinPool-1-worker-5 debug 28<br>ForkJoinPool-1-worker-30 debug 78<br>ForkJoinPool-1-worker-22 debug 96<br>ForkJoinPool-1-worker-23 debug 87<br>ForkJoinPool-1-worker-1 debug 6<br>ForkJoinPool-1-worker-9 debug 12<br>ForkJoinPool-1-worker-16 debug 18<br>ForkJoinPool-1-worker-2 debug 3<br>ForkJoinPool-1-worker-27 debug 48<br>ForkJoinPool-1-worker-20 debug 37</p></blockquote><ul><li>收集器<br>所收集的对象信息<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">public class Student &#123;</span><br><span class="line">    private String name;</span><br><span class="line">    private int age;</span><br><span class="line">    private Gender gender;</span><br><span class="line">    private Grade grade;</span><br><span class="line"></span><br><span class="line">    public Student(String name, int age, Gender gender, Grade grade) &#123;</span><br><span class="line">        super();</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.age = age;</span><br><span class="line">        this.gender = gender;</span><br><span class="line">        this.grade = grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setName(String name) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getAge() &#123;</span><br><span class="line">        return age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setAge(int age) &#123;</span><br><span class="line">        this.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Gender getGender() &#123;</span><br><span class="line">        return gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setGender(Gender gender) &#123;</span><br><span class="line">        this.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Grade getGrade() &#123;</span><br><span class="line">        return grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setGrade(Grade grade) &#123;</span><br><span class="line">        this.grade = grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String toString() &#123;</span><br><span class="line">        return &quot;[name=&quot; + name + &quot;, age=&quot; + age + &quot;, gender=&quot; + gender</span><br><span class="line">                + &quot;, grade=&quot; + grade + &quot;]&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 性别</span><br><span class="line"> */</span><br><span class="line">enum Gender &#123;</span><br><span class="line">    MALE, FEMALE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 班级</span><br><span class="line"> */</span><br><span class="line">enum Grade &#123;</span><br><span class="line">    ONE, TWO, THREE, FOUR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>测试类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.commons.collections.MapUtils;</span><br><span class="line"></span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.IntSummaryStatistics;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line">import java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-07 22:37</span><br><span class="line"> * @desc 流收集器demo</span><br><span class="line"> **/</span><br><span class="line">public class CollectDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        // 测试数据</span><br><span class="line">        List&lt;Student&gt; students = Arrays.asList(</span><br><span class="line">                new Student(&quot;小明&quot;, 10, Gender.MALE, Grade.ONE),</span><br><span class="line">                new Student(&quot;大明&quot;, 9, Gender.MALE, Grade.THREE),</span><br><span class="line">                new Student(&quot;小白&quot;, 8, Gender.FEMALE, Grade.TWO),</span><br><span class="line">                new Student(&quot;小黑&quot;, 13, Gender.FEMALE, Grade.FOUR),</span><br><span class="line">                new Student(&quot;小红&quot;, 7, Gender.FEMALE, Grade.THREE),</span><br><span class="line">                new Student(&quot;小黄&quot;, 13, Gender.MALE, Grade.ONE),</span><br><span class="line">                new Student(&quot;小青&quot;, 13, Gender.FEMALE, Grade.THREE),</span><br><span class="line">                new Student(&quot;小紫&quot;, 9, Gender.FEMALE, Grade.TWO),</span><br><span class="line">                new Student(&quot;小王&quot;, 6, Gender.MALE, Grade.ONE),</span><br><span class="line">                new Student(&quot;小李&quot;, 6, Gender.MALE, Grade.ONE),</span><br><span class="line">                new Student(&quot;小马&quot;, 14, Gender.FEMALE, Grade.FOUR),</span><br><span class="line">                new Student(&quot;小刘&quot;, 13, Gender.MALE, Grade.FOUR));</span><br><span class="line"></span><br><span class="line">        // 得到所有学生的年龄列表</span><br><span class="line">        // 推荐使用方法引用Student::getAge，不要使用s-&gt;s.getAge(),就不会多生成一个类似 lambda$0这样的函数</span><br><span class="line">        List&lt;Integer&gt; ages = students.stream().map(Student::getAge).collect(Collectors.toList());</span><br><span class="line">        System.out.println(&quot;所有学生的年龄:&quot; + ages);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 统计汇总信息</span><br><span class="line">        IntSummaryStatistics agesSummaryStatistics = students.stream().collect(Collectors.summarizingInt(Student::getAge));</span><br><span class="line">        System.out.println(&quot;年龄汇总信息:&quot; + agesSummaryStatistics);</span><br><span class="line"></span><br><span class="line">        //分块</span><br><span class="line">        Map&lt;Boolean, List&lt;Student&gt;&gt; genders = students.stream().collect(Collectors.partitioningBy(s -&gt; s.getGender() == Gender.MALE));</span><br><span class="line">        //System.out.println(&quot;男女学生列表:&quot; + genders);</span><br><span class="line">        MapUtils.verbosePrint(System.out, &quot;男女学生列表&quot;, genders);</span><br><span class="line"></span><br><span class="line">        //分组，比如分块就是分两组，返回boolean</span><br><span class="line">        Map&lt;Grade, List&lt;Student&gt;&gt; grades = students.stream().collect(Collectors.groupingBy(Student::getGrade));</span><br><span class="line">        MapUtils.verbosePrint(System.out, &quot;学生班级列表&quot;, grades);</span><br><span class="line"></span><br><span class="line">        //得到所有班级学生的个数</span><br><span class="line">        Map&lt;Grade, Long&gt; gradesCount = students.stream().collect(Collectors.groupingBy(Student::getGrade, Collectors.counting()));</span><br><span class="line">        MapUtils.verbosePrint(System.out, &quot;学生班级个数列表&quot;, gradesCount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行结果：</p><blockquote><p>Connected to the target VM, address: ‘javadebug’, transport: ‘shared memory’<br>所有学生的年龄:[10, 9, 8, 13, 7, 13, 13, 9, 6, 6, 14, 13]<br>年龄汇总信息:IntSummaryStatistics{count=12, sum=121, min=6, average=10.083333, max=14}<br>男女学生列表 =<br>{<br>    false = [[name=小白, age=8, gender=FEMALE, grade=TWO], [name=小黑, age=13, gender=FEMALE, grade=FOUR], [name=小红, age=7, gender=FEMALE, grade=THREE], [name=小青, age=13, gender=FEMALE, grade=THREE], [name=小紫, age=9, gender=FEMALE, grade=TWO], [name=小马, age=14, gender=FEMALE, grade=FOUR]]<br>    true = [[name=小明, age=10, gender=MALE, grade=ONE], [name=大明, age=9, gender=MALE, grade=THREE], [name=小黄, age=13, gender=MALE, grade=ONE], [name=小王, age=6, gender=MALE, grade=ONE], [name=小李, age=6, gender=MALE, grade=ONE], [name=小刘, age=13, gender=MALE, grade=FOUR]]<br>}<br>学生班级列表 =<br>{<br>    ONE = [[name=小明, age=10, gender=MALE, grade=ONE], [name=小黄, age=13, gender=MALE, grade=ONE], [name=小王, age=6, gender=MALE, grade=ONE], [name=小李, age=6, gender=MALE, grade=ONE]]<br>    FOUR = [[name=小黑, age=13, gender=FEMALE, grade=FOUR], [name=小马, age=14, gender=FEMALE, grade=FOUR], [name=小刘, age=13, gender=MALE, grade=FOUR]]<br>    TWO = [[name=小白, age=8, gender=FEMALE, grade=TWO], [name=小紫, age=9, gender=FEMALE, grade=TWO]]<br>    THREE = [[name=大明, age=9, gender=MALE, grade=THREE], [name=小红, age=7, gender=FEMALE, grade=THREE], [name=小青, age=13, gender=FEMALE, grade=THREE]]<br>}<br>Disconnected from the target VM, address: ‘javadebug’, transport: ‘shared memory’<br>学生班级个数列表 =<br>{<br>    ONE = 4<br>    FOUR = 3<br>    TWO = 2<br>    THREE = 3<br>}</p></blockquote><ul><li>Stream 运行机制<br>验证：<ol><li>所有操作是链式调用, 一个元素只迭代一次 </li><li>每一个中间操作返回一个新的流. 流里面有一个属性sourceStage<br>指向同一个 地方,就是Head </li><li>Head-&gt;nextStage-&gt;nextStage-&gt;… -&gt; null</li></ol></li></ul><ol start="4"><li>有状态操作会把无状态操作阶段,单独处理</li><li>并行环境下, 有状态的中间操作不一定能并行操作</li><li>parallel/ sequetial 这2个操作也是中间操作(也是返回stream)<br>但是他们不创建流, 他们只修改 Head的并行标志</li></ol><h2 id="第三节-reactive-stream-响应式流"><a href="#第三节-reactive-stream-响应式流" class="headerlink" title="第三节  reactive stream 响应式流"></a>第三节  reactive stream 响应式流</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">import java.util.concurrent.Flow;</span><br><span class="line">import java.util.concurrent.SubmissionPublisher;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-08 0:03</span><br><span class="line"> * @desc 响应式流</span><br><span class="line"> **/</span><br><span class="line">public class FlowDemo &#123;</span><br><span class="line">    public static void main(String[] args) throws InterruptedException &#123;</span><br><span class="line">        //1.定义发布者，发布的数据类型是Integer</span><br><span class="line">        // 直接使用jdk自带的SubmissionPublisher，它实现了Publisher接口</span><br><span class="line">        SubmissionPublisher&lt;Integer&gt; publisher = new SubmissionPublisher&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        //2. 定义订阅者</span><br><span class="line">        Flow.Subscriber&lt;Integer&gt; subscriber = new Flow.Subscriber&lt;Integer&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            private Flow.Subscription subscription;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onSubscribe(Flow.Subscription subscription) &#123;</span><br><span class="line">                // 保存订阅关系，需要用它来给发布者响应</span><br><span class="line">                this.subscription = subscription;</span><br><span class="line"></span><br><span class="line">                // 请求一个数据</span><br><span class="line">                this.subscription.request(1);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onNext(Integer item) &#123;</span><br><span class="line">                // 接收一个数据，并处理</span><br><span class="line">                System.out.println(&quot;接收到的数据：&quot; + item);</span><br><span class="line"></span><br><span class="line">                try &#123;</span><br><span class="line">                    TimeUnit.SECONDS.sleep(3);</span><br><span class="line">                &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                // 处理完调用request再请求一个数据</span><br><span class="line">                this.subscription.request(1);</span><br><span class="line"></span><br><span class="line">                //或者 已经达到了目标，调用cancel告诉发布者不再接收数据了</span><br><span class="line">                //this.subscription.cancel();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onError(Throwable throwable) &#123;</span><br><span class="line">                //出现了异常（例如处理数据的时候产生了异常）</span><br><span class="line">                throwable.printStackTrace();</span><br><span class="line"></span><br><span class="line">                //我们可以告诉发布者，后面不接收数据了</span><br><span class="line">                this.subscription.cancel();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onComplete() &#123;</span><br><span class="line">                // 全部数据处理完了（发布者关闭了）</span><br><span class="line">                System.out.println(&quot;处理完了！&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        //3. 发布者和订阅者建立订阅关系</span><br><span class="line">        publisher.subscribe(subscriber);</span><br><span class="line"></span><br><span class="line">        //4. 生产数据，并发布   这里忽略数据生产过程</span><br><span class="line">        for (int i=0;i&lt;1000;i++) &#123;</span><br><span class="line">            System.out.println(&quot;生成数据：&quot; + i);</span><br><span class="line">            //submit 是个block方法</span><br><span class="line">            publisher.submit(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //5. 结束后  关闭发布者</span><br><span class="line">        // 正式环境应该放在finally或者使用try-resource 确保关闭</span><br><span class="line">        publisher.close();</span><br><span class="line"></span><br><span class="line">        //主线程延迟停止， 否则数据没有消费就退出了</span><br><span class="line">        Thread.currentThread().join(1000);</span><br><span class="line"></span><br><span class="line">        //debug的时候，下面这行需要有断点。否则主线程结束无法debug</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行效果</p><blockquote><p>生成数据：262<br>接收到的数据：6<br>生成数据：263<br>接收到的数据：7<br>生成数据：264<br>接收到的数据：8<br>生成数据：265<br>接收到的数据：9<br>生成数据：266<br>接收到的数据：10<br>生成数据：267<br>接收到的数据：11<br>生成数据：268</p></blockquote><p>另一个例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import java.util.concurrent.Flow;</span><br><span class="line">import java.util.concurrent.SubmissionPublisher;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author 马海强</span><br><span class="line"> * @create 2018-07-08 23:14</span><br><span class="line"> * @desc 带 process 的 flow demo</span><br><span class="line"> *  Processor, 需要继承SubmissionPublisher并实现Processor接口</span><br><span class="line"> *  输入源数据 integer, 过滤掉小于0的, 然后转换成字符串发布出去</span><br><span class="line"> **/</span><br><span class="line"></span><br><span class="line">class MyProcessor extends SubmissionPublisher&lt;String&gt; implements Flow.Processor&lt;Integer, String&gt; &#123;</span><br><span class="line">    private Flow.Subscription subscription;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onSubscribe(Flow.Subscription subscription) &#123;</span><br><span class="line">        // 保存订阅关系, 需要用它来给发布者响应</span><br><span class="line">        this.subscription = subscription;</span><br><span class="line"></span><br><span class="line">        // 请求一个数据</span><br><span class="line">        this.subscription.request(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onNext(Integer item) &#123;</span><br><span class="line">        // 接受到一个数据, 处理</span><br><span class="line">        System.out.println(&quot;处理器接受到数据: &quot; + item);</span><br><span class="line"></span><br><span class="line">        // 过滤掉小于0的, 然后发布出去</span><br><span class="line">        if (item &gt; 0) &#123;</span><br><span class="line">            this.submit(&quot;转换后的数据:&quot; + item);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 处理完调用request再请求一个数据</span><br><span class="line">        this.subscription.request(1);</span><br><span class="line"></span><br><span class="line">        // 或者 已经达到了目标, 调用cancel告诉发布者不再接受数据了</span><br><span class="line">        // this.subscription.cancel();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onError(Throwable throwable) &#123;</span><br><span class="line">        // 出现了异常(例如处理数据的时候产生了异常)</span><br><span class="line">        throwable.printStackTrace();</span><br><span class="line"></span><br><span class="line">        // 我们可以告诉发布者, 后面不接受数据了</span><br><span class="line">        this.subscription.cancel();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onComplete() &#123;</span><br><span class="line">        // 全部数据处理完了(发布者关闭了)</span><br><span class="line">        System.out.println(&quot;处理器处理完了!&quot;);</span><br><span class="line">        // 关闭发布者</span><br><span class="line">        this.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public class FlowDemo2 &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        // 1. 定义发布者, 发布的数据类型是 Integer</span><br><span class="line">        // 直接使用jdk自带的SubmissionPublisher</span><br><span class="line">        SubmissionPublisher&lt;Integer&gt; publiser = new SubmissionPublisher&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">        // 2. 定义处理器, 对数据进行过滤, 并转换为String类型</span><br><span class="line">        MyProcessor processor = new MyProcessor();</span><br><span class="line"></span><br><span class="line">        // 3. 发布者 和 处理器 建立订阅关系</span><br><span class="line">        publiser.subscribe(processor);</span><br><span class="line"></span><br><span class="line">        // 4. 定义最终订阅者, 消费 String 类型数据</span><br><span class="line">        Flow.Subscriber&lt;String&gt; subscriber = new Flow.Subscriber&lt;String&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            private Flow.Subscription subscription;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onSubscribe(Flow.Subscription subscription) &#123;</span><br><span class="line">                // 保存订阅关系, 需要用它来给发布者响应</span><br><span class="line">                this.subscription = subscription;</span><br><span class="line"></span><br><span class="line">                // 请求一个数据</span><br><span class="line">                this.subscription.request(1);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onNext(String item) &#123;</span><br><span class="line">                // 接受到一个数据, 处理</span><br><span class="line">                System.out.println(&quot;接受到数据: &quot; + item);</span><br><span class="line"></span><br><span class="line">                // 处理完调用request再请求一个数据</span><br><span class="line">                this.subscription.request(1);</span><br><span class="line"></span><br><span class="line">                // 或者 已经达到了目标, 调用cancel告诉发布者不再接受数据了</span><br><span class="line">                // this.subscription.cancel();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onError(Throwable throwable) &#123;</span><br><span class="line">                // 出现了异常(例如处理数据的时候产生了异常)</span><br><span class="line">                throwable.printStackTrace();</span><br><span class="line"></span><br><span class="line">                // 我们可以告诉发布者, 后面不接受数据了</span><br><span class="line">                this.subscription.cancel();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            public void onComplete() &#123;</span><br><span class="line">                // 全部数据处理完了(发布者关闭了)</span><br><span class="line">                System.out.println(&quot;处理完了!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        // 5. 处理器 和 最终订阅者 建立订阅关系</span><br><span class="line">        processor.subscribe(subscriber);</span><br><span class="line"></span><br><span class="line">        // 6. 生产数据, 并发布</span><br><span class="line">        // 这里忽略数据生产过程</span><br><span class="line">        publiser.submit(-111);</span><br><span class="line">        publiser.submit(111);</span><br><span class="line"></span><br><span class="line">        // 7. 结束后 关闭发布者</span><br><span class="line">        // 正式环境 应该放 finally 或者使用 try-resouce 确保关闭</span><br><span class="line">        publiser.close();</span><br><span class="line"></span><br><span class="line">        // 主线程延迟停止, 否则数据没有消费就退出</span><br><span class="line">        Thread.currentThread().join(1000);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>运行结果:</p><blockquote><p>处理器接受到数据: -111<br>处理器接受到数据: 111<br>处理器处理完了!<br>接受到数据: 转换后的数据:111<br>处理完了!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> webflux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot之“服务端推送事件SSE（server-send-events）”</title>
      <link href="/2018/07/01/springboot%E4%B9%8B%E2%80%9C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8E%A8%E9%80%81%E4%BA%8B%E4%BB%B6SSE%EF%BC%88server-send-events%EF%BC%89%E2%80%9D/"/>
      <url>/2018/07/01/springboot%E4%B9%8B%E2%80%9C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8E%A8%E9%80%81%E4%BA%8B%E4%BB%B6SSE%EF%BC%88server-send-events%EF%BC%89%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<p>server-send-events简单应用demo<br><a href="https://www.jianshu.com/p/9a0e802b2297" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="1-应用场景"><a href="#1-应用场景" class="headerlink" title="1.应用场景"></a>1.应用场景</h2><p>当我们做异步请求处理的时候，客户端向服务端的请求不是立即返回的，而是在服务端有数据的时候才发送给客户端的。本例演示是服务端数据是另外的事件触发并推送给客户端的。</p><p>当使用微信或者支付宝扫码支付的时候，在客户支付成功之后，后台得到微信(支付宝)回调需要通知我们的客户端支付已经完成，客户端得到通知后可以做一些后续的操作。<br>这涉及到后台需要将支付成功的消息主动推送给客户端，让客户端记性后续的操作。</p><ul><li>客户端向后台(<code>SseController-&gt;push</code>)发送异步请求，客户端处于监听等待状态;</li><li>微信(支付宝)支付成功后回调后台(<code>SseController-&gt;payCallback</code>模拟);</li><li><code>payCallback</code>方法通过<code>applicationContext.publishEvent</code>向系统内部发送支付完成事件;</li><li>push方法通过<code>payCompletedListener</code>监听事件并通过<code>SseEmitter</code>发送给客户端。<br>名词解释：<code>SSE–server send event</code>是一种服务端推送的技术，本例使用<code>SseEmitter</code>来实现。<h2 id="2-上代码"><a href="#2-上代码" class="headerlink" title="2. 上代码"></a>2. 上代码</h2>web api 接口类<code>SseController</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@RestController</span><br><span class="line">public class SseController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    ApplicationContext applicationContext;</span><br><span class="line">    @Autowired</span><br><span class="line">    PayCompletedListener payCompletedListener;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/push&quot;)</span><br><span class="line">    public SseEmitter push(@RequestParam Long payRecordId)&#123;</span><br><span class="line">        final SseEmitter emitter = new SseEmitter();</span><br><span class="line">        try &#123;</span><br><span class="line">           payCompletedListener.addSseEmitters(payRecordId,emitter);</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            emitter.completeWithError(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return emitter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/pay-callback&quot;)</span><br><span class="line">    public String payCallback(@RequestParam Long payRecordId)&#123;</span><br><span class="line">        applicationContext.publishEvent(new PayCompletedEvent(this,payRecordId));</span><br><span class="line">        return &quot;请到监听处查看消息&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>支付完成事件 <code>PayCompletedEvent</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Getter</span><br><span class="line">@Setter</span><br><span class="line">public class PayCompletedEvent extends ApplicationEvent &#123;</span><br><span class="line">    private Long payRecordId;</span><br><span class="line"></span><br><span class="line">    public PayCompletedEvent(Object source, Long payRecordId) &#123;</span><br><span class="line">        super(source);</span><br><span class="line">        this.payRecordId = payRecordId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>支付完成事件监听器<code>PayCompletedListener</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class PayCompletedListener &#123;</span><br><span class="line">    private static Map&lt;Long,SseEmitter&gt; sseEmitters = new Hashtable&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public void addSseEmitters(Long payRecordId, SseEmitter sseEmitter) &#123;</span><br><span class="line">        sseEmitters.put(payRecordId, sseEmitter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @EventListener</span><br><span class="line">    public void deployEventHandler(PayCompletedEvent payCompletedEvent) throws IOException &#123;</span><br><span class="line">        Long payRecordId = payCompletedEvent.getPayRecordId();</span><br><span class="line">        SseEmitter sseEmitter = sseEmitters.get(payRecordId);</span><br><span class="line">        sseEmitter.send(&quot;支付成功&quot;);</span><br><span class="line">        sseEmitter.complete();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-效果演示"><a href="#3-效果演示" class="headerlink" title="3. 效果演示"></a>3. 效果演示</h2><ul><li><p>先访问<code>http://localhost:8080/push?payRecordId=123</code>,此时客户端处于等待状态.<br><img src="https://upload-images.jianshu.io/upload_images/4109786-44e4e03248a65e36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sse1.png"></p></li><li><p>再访问<code>http://localhost:8080/pay-callback?payRecordId=123</code>,模拟回调通知客户端支付成功,这是会通知上一步并推送到客户端.<br><img src="https://upload-images.jianshu.io/upload_images/4109786-eb01f625308dc88b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sse2.png"></p></li></ul><h2 id="4-另外一个极简的例子"><a href="#4-另外一个极简的例子" class="headerlink" title="4. 另外一个极简的例子"></a>4. 另外一个极简的例子</h2><ul><li><p>服务端模拟servlet的一个get请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line">import javax.servlet.ServletException;</span><br><span class="line">import javax.servlet.annotation.WebServlet;</span><br><span class="line">import javax.servlet.http.HttpServlet;</span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Servlet implementation class SSE</span><br><span class="line"> */</span><br><span class="line">@WebServlet(&quot;/SSE&quot;)</span><br><span class="line">public class SSE extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#HttpServlet()</span><br><span class="line"> */</span><br><span class="line">public SSE() &#123;</span><br><span class="line">super();</span><br><span class="line">// TODO Auto-generated constructor stub</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse</span><br><span class="line"> *      response)</span><br><span class="line"> */</span><br><span class="line">protected void doGet(HttpServletRequest request,</span><br><span class="line">HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">response.setContentType(&quot;text/event-stream&quot;);</span><br><span class="line">response.setCharacterEncoding(&quot;utf-8&quot;);</span><br><span class="line"></span><br><span class="line">for (int i = 0; i &lt; 5; i++) &#123;</span><br><span class="line">// 指定事件标识</span><br><span class="line">response.getWriter().write(&quot;event:me\n&quot;);</span><br><span class="line">// 格式: data: + 数据 + 2个回车</span><br><span class="line">response.getWriter().write(&quot;data:&quot; + i + &quot;\n\n&quot;);</span><br><span class="line">response.getWriter().flush();</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">TimeUnit.SECONDS.sleep(1);</span><br><span class="line">&#125; catch (InterruptedException e) &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse</span><br><span class="line"> *      response)</span><br><span class="line"> */</span><br><span class="line">protected void doPost(HttpServletRequest request,</span><br><span class="line">HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>模拟客户端的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">// 初始化, 参数为url</span><br><span class="line">// 依赖H5</span><br><span class="line">var sse = new EventSource(&quot;SSE&quot;);</span><br><span class="line"></span><br><span class="line">sse.onmessage = function(e) &#123;</span><br><span class="line">console.log(&quot;message&quot;, e.data, e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 监听指定事件, (就不会进入onmessage了)</span><br><span class="line">sse.addEventListener(&quot;me&quot;, function(e) &#123;</span><br><span class="line">console.log(&quot;me event&quot;, e.data);</span><br><span class="line">// 如果不关闭,会自动重连</span><br><span class="line">if (e.data == 3) &#123;</span><br><span class="line">sse.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>效果<br><img src="https://upload-images.jianshu.io/upload_images/4109786-4d58309419d1a315.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="没有加特殊事件监听之前"></p></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4109786-d9085d8c2b6035b9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="只监听me事件"></p><h2 id="5-鸣谢"><a href="#5-鸣谢" class="headerlink" title="5.鸣谢"></a>5.鸣谢</h2><p><a href="http://www.wisely.top/2018/03/01/sse-eventlistener/" target="_blank" rel="noopener">http://www.wisely.top/2018/03/01/sse-eventlistener/</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> sse </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springboot 之 “定时任务-动态修改表达式”</title>
      <link href="/2018/06/29/springboot%20%E4%B9%8B%20%E2%80%9C%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E8%A1%A8%E8%BE%BE%E5%BC%8F%E2%80%9D/"/>
      <url>/2018/06/29/springboot%20%E4%B9%8B%20%E2%80%9C%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1-%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E8%A1%A8%E8%BE%BE%E5%BC%8F%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<p>定时任务主要用于定时发送邮件、夜间自动维护等。<br><a href="https://www.jianshu.com/p/dedb5f8ecfc0" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>（1）开启定时任务功能<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@Configuration  </span><br><span class="line">@EnableScheduling  </span><br><span class="line">public class SpringTaskScheduleConfig &#123;  </span><br><span class="line">    @Bean  </span><br><span class="line">    public TaskScheduler poolScheduler() &#123;  </span><br><span class="line">        ThreadPoolTaskScheduler scheduler = new ThreadPoolTaskScheduler();  </span><br><span class="line">        scheduler.setThreadNamePrefix(&quot;poolScheduler&quot;);  </span><br><span class="line">        scheduler.setPoolSize(10);  </span><br><span class="line">        return scheduler;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>或者在运行类TaskApplication添加上<strong>@EnableScheduling</strong>注解。<br>（2）主角登场，添加定时任务</p><ul><li><p>简单方式：修改定时任务的执行周期；</p><p>按正常来讲，修改定时任务的执行周期，把服务停下来，改下任务的cron参数，再重启服务就搞搞定了。这种方式很简单，没有可说的，但是有没有一种可能，在不停服务的情况下，就可以动态的修改任务的cron参数呢？哈哈，那是必须的必。<br>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import com.hczt.haier.task.service.UserTaskService;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 用户菜单定时设置</span><br><span class="line"> */</span><br><span class="line">@Slf4j</span><br><span class="line">@Component</span><br><span class="line">public class UserMenuTask &#123;</span><br><span class="line"></span><br><span class="line">    @Resource</span><br><span class="line">    private UserTaskService userTaskService;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 每天一点进行同步</span><br><span class="line">     */</span><br><span class="line">    @Scheduled(cron = &quot;0 0 1 * * *&quot;)</span><br><span class="line">    public void setUserMenu()&#123;</span><br><span class="line">        log.info(&quot;-----Start Set User Menus -----&quot;);</span><br><span class="line">        userTaskService.timeSetMenus();</span><br><span class="line">        log.info(&quot;-----End Set User Menus -----&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>动态修改定时任务的执行周期；</p></li></ul><p>首先我们先会回顾下，我们之前是使用了@Scheduled(cron =“0/5 <em> </em> <em> </em> *”)这种方式适用于固定任务周期的任务，若要修改任务执行周期，只能走“停服务—修改任务执行周期—重启服务”这条路。那么如何动态修改呢，我们看下步骤：</p><p>① 在定时任务类上增加@EnabledScheduling注解，并实现SchedulingConfigurer接口。<br>② 设置一个静态的cron，用于存放任务执行周期参数。<br>③ 开启一个线程，用于模拟实际业务中外部原因修改了任务执行周期。<br>④ 设置任务触发器，触发任务执行。<br> 本项目是基于spring data jpa的，数据检索使用的是repository，具体创建数据表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `t_scheduled_task_cron` (</span><br><span class="line">`task_cron_id` INT(11) NOT NULL AUTO_INCREMENT COMMENT &apos;id自增&apos;,</span><br><span class="line">`task_code` VARCHAR(40) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;定时任务编码&apos;,</span><br><span class="line">`task_name` VARCHAR(40) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;定时任务名称&apos;,</span><br><span class="line">`task_package` VARCHAR(400) NULL DEFAULT &apos;&apos; COMMENT &apos;定时任务包名&apos;,</span><br><span class="line">`task_cron` VARCHAR(40) NOT NULL DEFAULT &apos;&apos; COMMENT &apos;定时任务执行表达式&apos;,</span><br><span class="line">`task_cron_description` VARCHAR(400) NOT NULL DEFAULT &apos;&apos;,</span><br><span class="line">`remark` VARCHAR(400) NULL DEFAULT NULL COMMENT &apos;备注&apos;,</span><br><span class="line">PRIMARY KEY (`task_cron_id`)</span><br><span class="line">)</span><br><span class="line">COMMENT=&apos;定时任务执行时间存储表&apos;</span><br><span class="line">COLLATE=&apos;utf8mb4_general_ci&apos;</span><br><span class="line">ENGINE=InnoDB</span><br><span class="line">;</span><br></pre></td></tr></table></figure></p><p>创建实体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import javax.persistence.*;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author marvin.ma</span><br><span class="line"> * @create 2018-06-28 22:35</span><br><span class="line"> * @desc 定时任务表达式实体</span><br><span class="line"> **/</span><br><span class="line">@Data</span><br><span class="line">@Entity</span><br><span class="line">@Table(name = &quot;t_scheduled_task_cron&quot;)</span><br><span class="line">public class ScheduledTaskCron &#123;</span><br><span class="line">    @Id</span><br><span class="line">    @GeneratedValue(strategy = GenerationType.IDENTITY)</span><br><span class="line">    @Column(name = &quot;task_cron_id&quot;)</span><br><span class="line">    private String taskCronId;</span><br><span class="line"></span><br><span class="line">    private String taskCode;</span><br><span class="line">    private String taskName;</span><br><span class="line">    private String taskPackage;</span><br><span class="line">    private String taskCron;</span><br><span class="line">    private String taskCronDescription;</span><br><span class="line">    private String remark;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建repository<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import com.hczt.haier.db.user.entity.ScheduledTaskCron;</span><br><span class="line">import org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author marvin.ma</span><br><span class="line"> * @create 2018-06-28 22:37</span><br><span class="line"> * @desc 定时任务表达式dao</span><br><span class="line"> **/</span><br><span class="line">public interface ScheduledTaskCronRepository extends JpaRepository&lt;ScheduledTaskCron, String&gt; &#123;</span><br><span class="line"></span><br><span class="line">    ScheduledTaskCron findByTaskCode(String taskCode);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>创建定时任务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.hczt.haier.db.user.entity.ScheduledTaskCron;</span><br><span class="line">import com.hczt.haier.db.user.repository.ScheduledTaskCronRepository;</span><br><span class="line">import com.hczt.haier.task.service.UserTaskService;</span><br><span class="line">import org.apache.commons.lang3.StringUtils;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.scheduling.Trigger;</span><br><span class="line">import org.springframework.scheduling.TriggerContext;</span><br><span class="line">import org.springframework.scheduling.annotation.SchedulingConfigurer;</span><br><span class="line">import org.springframework.scheduling.config.ScheduledTaskRegistrar;</span><br><span class="line">import org.springframework.scheduling.support.CronTrigger;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 精诚所至，金石为开。</span><br><span class="line"> * 石の上にも三年;陽気の発する所金石亦透る。</span><br><span class="line"> * Faith moves mountains.</span><br><span class="line"> *</span><br><span class="line"> * @author marvin.ma</span><br><span class="line"> * @create 2018-06-28 13:27</span><br><span class="line"> * @desc 动态表达式定时任务</span><br><span class="line"> **/</span><br><span class="line">@Component</span><br><span class="line">public class DynamicScheduledTask implements SchedulingConfigurer &#123;</span><br><span class="line">    private static final SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;HH:mm:ss&quot;);</span><br><span class="line"></span><br><span class="line">    private static final String DEFAULT_CRON = &quot;0/5 * * * * ?&quot;;</span><br><span class="line">    private String cron = DEFAULT_CRON;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private ScheduledTaskCronRepository scheduledTaskCronRepository;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private UserTaskService userTaskService;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void configureTasks(ScheduledTaskRegistrar taskRegistrar) &#123;</span><br><span class="line">        Runnable task = new Runnable() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void run() &#123;</span><br><span class="line">                // 定时任务的业务逻辑</span><br><span class="line">                System.out.println(&quot;动态修改定时任务cron参数，当前时间：&quot; + dateFormat.format(new Date()));</span><br><span class="line">                userTaskService.timeSetMenus();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Trigger trigger = new Trigger() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public Date nextExecutionTime(TriggerContext triggerContext) &#123;</span><br><span class="line">                // 定时任务触发，可修改定时任务的执行周期</span><br><span class="line">                ScheduledTaskCron scheduledTaskCronEntity = scheduledTaskCronRepository.findByTaskCode(&quot;1&quot;);</span><br><span class="line">                if (null == scheduledTaskCronEntity || StringUtils.isEmpty(scheduledTaskCronEntity.getTaskCron())) &#123;</span><br><span class="line">                    cron = DEFAULT_CRON;</span><br><span class="line">                &#125;</span><br><span class="line">                CronTrigger trigger = new CronTrigger(cron);</span><br><span class="line">                Date nextExecDate = trigger.nextExecutionTime(triggerContext);</span><br><span class="line">                return nextExecDate;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        taskRegistrar.addTriggerTask(task, trigger);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setCron(String cron) &#123;</span><br><span class="line">        this.cron = cron;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>修改数据库后定时任务立即生效。</p><p>参考文章：<br><a href="http://412887952-qq-com.iteye.com/blog/2367537" target="_blank" rel="noopener">http://412887952-qq-com.iteye.com/blog/2367537</a><br><a href="http://rensanning.iteye.com/blog/2361912" target="_blank" rel="noopener">http://rensanning.iteye.com/blog/2361912</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> springboot </tag>
            
            <tag> 定时任务 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用ngrok一分钟实现内网穿透</title>
      <link href="/2018/06/26/%E4%BD%BF%E7%94%A8ngrok%E4%B8%80%E5%88%86%E9%92%9F%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
      <url>/2018/06/26/%E4%BD%BF%E7%94%A8ngrok%E4%B8%80%E5%88%86%E9%92%9F%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<p>一分钟有点夸张，5分钟总可以将本地web服务映射到公网了吧。<br><a href="https://www.jianshu.com/p/4f008e2b7622" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="1、-因果"><a href="#1、-因果" class="headerlink" title="1、 因果"></a>1、 因果</h2><p>周末作为纯后端，与前端同事联调微信jsapi的授权接口，听说就一个接口，不用数据库，不鸟权限的事，就是从服务端向微信发起一个请求token和ticket的接口，返回给前端而已。原计划半个小时搞定的，结果搞了三个多小时，如果不是参考原来一个项目里的实现，估计在加两个小时也不一定能搞出个成品。<br>因为微信限制调用频次，而且本地获取还需要加白名单，但是给前端同事联调的话还需要打包扔到一台公网服务器上，甚是麻烦啊，于是想这次弄完看看搞一个内网穿透，再有类似场景，直接使用。</p><h2 id="2、名词解释"><a href="#2、名词解释" class="headerlink" title="2、名词解释"></a>2、名词解释</h2><h3 id="2-1、为什么需要内网穿透"><a href="#2-1、为什么需要内网穿透" class="headerlink" title="2.1、为什么需要内网穿透"></a>2.1、为什么需要内网穿透</h3><p>当内网中的主机没有静态IP地址要被外网稳定访问时可以使用内网穿透</p><p>在互联网中唯一定位一台主机的方法是通过公网的IP地址，但固定IP是一种非常稀缺的资源，不可能给每个公司都分配一个，且许多中小公司不愿意为高昂的费用买单，多数公司直接或间接的拨号上网，电信部门会给接入网络的用户分配IP地址，以前上网用户少的时候基本分配的都是临时的静态IP地址，租约过了之后可能会更换成另一个IP地址，这样外网访问就不稳定，因为内网的静态IP地址一直变化，为了解决这个问题可以使用动态域名解析的办法变换域名指向的静态IP地址。但是现在越来越多的上网用户使得临时分配的静态IP地址也不够用了，电信部门开始分配一些虚拟的静态IP地址，这些IP是公网不能直接访问的，如以125开头的一些IP地址，以前单纯的动态域名解析就不好用了。</p><h3 id="2-2、内网穿透的定义与障碍"><a href="#2-2、内网穿透的定义与障碍" class="headerlink" title="2.2、内网穿透的定义与障碍"></a>2.2、内网穿透的定义与障碍</h3><p>简单来说实现不同局域网内的主机之间通过互联网进行通信的技术叫内网穿透。</p><p><strong>障碍一</strong>：位于局域网内的主机有两套 IP 地址，一套是局域网内的 IP 地址，通常是动态分配的，仅供局域网内的主机间通信使用；一套是经过网关转换后的外网 IP 地址，用于与外网程。</p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-f1f0d04aa356aa2d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><strong>障碍二：</strong>位于不同局域网内的两台主机，即使是知道了对方的 IP 地址和端口号，“一厢情愿”地将数据包发送过去，对方也是接收不到的。</p><p>因为出于安全起见，除非是主机主动向对方发出了连接请求（这时会在该主机的数据结构中留下一条记录），否则，当主机接收到数据包时，如果在其数据结构中查询不到对应的记录，那些不请自来的数据包将会被丢弃。</p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-ea6e83e710aa05d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>解决办法：要想解决以上两大障碍，我们需要借助一台具有公网 IP 的服务器进行桥接。</p><h2 id="3、-选型"><a href="#3、-选型" class="headerlink" title="3、 选型"></a>3、 选型</h2><h3 id="3-1、花生壳"><a href="#3-1、花生壳" class="headerlink" title="3.1、花生壳"></a>3.1、花生壳</h3><p>花生壳既是内网穿透软件、内网映射软件,也是端口映射软件。规模最大，较正规，完善。</p><p>收费高，使用简单</p><p>官网：<a href="http://www.oray.com/" target="_blank" rel="noopener">http://www.oray.com/</a></p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-fbeeec9067bd4603.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2"></p><h3 id="3-2、Nat123"><a href="#3-2、Nat123" class="headerlink" title="3.2、Nat123"></a>3.2、Nat123</h3><p>nat123是内网端口映射与动态域名解析软件，在内网启动映射后，可在外网访问连接内网网站等应用。整个网站我都没有找到客服电话，网友发了一些反面的评价</p><p>收费，使用简单</p><p>官网：<a href="http://www.nat123.com/" target="_blank" rel="noopener">http://www.nat123.com</a></p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-e04d8b2da6c1be2a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h3 id="3-3、NATAPP"><a href="#3-3、NATAPP" class="headerlink" title="3.3、NATAPP"></a>3.3、NATAPP</h3><p>NATAPP基于ngrok的国内内网穿透服务，免费版会强制更换域名，临时用一下可以</p><p>收费，使用简单</p><p>官网：<a href="https://natapp.cn/" target="_blank" rel="noopener">https://natapp.cn/</a></p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-09a7cef5dc15462b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h3 id="3-4、frp与其它"><a href="#3-4、frp与其它" class="headerlink" title="3.4、frp与其它"></a>3.4、frp与其它</h3><p>frp 是一个高性能的反向代理应用，可以帮助您轻松地进行内网穿透，对外网提供服务，支持 tcp, http, https 等协议类型，并且 web 服务支持根据域名进行路由转发。</p><p>开源免费</p><p>使用相对复杂，需要代理服务器支持</p><p>官网：<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a></p><p>文档：<a href="http://www.cnblogs.com/%E6%9F%A5%E7%9C%8B%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3" target="_blank" rel="noopener">查看帮助文档</a>，<a href="http://www.jianshu.com/p/e8e26bcc6fe6" target="_blank" rel="noopener">简书示例</a></p><p>利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。</p><p>对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。</p><p>利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-139be99c4e795652.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>因为frp 仍然处于前期开发阶段，未经充分测试与验证，不推荐用于生产环境，所有我选择了ngrok，资料比较多。</p><p>还有如圣剑内网通、ngrok（开源免费）、<a href="https://post.smzdm.com/p/564494/" target="_blank" rel="noopener">更多办法</a></p><h3 id="3-5、ngrok"><a href="#3-5、ngrok" class="headerlink" title="3.5、ngrok"></a>3.5、ngrok</h3><p>ngrok是一个反向代理，通过在公共的端点和本地运行的Web服务器之间建立一个安全的通道。ngrok可捕获和分析所有通道上的流量，便于后期分析与响应。</p><p>开源免费</p><p>官网：<a href="https://ngrok.com/" target="_blank" rel="noopener">https://ngrok.com/</a></p><p>源码：<a href="https://github.com/inconshreveable/ngrok" target="_blank" rel="noopener">https://github.com/inconshreveable/ngrok</a></p><p><img src="http://upload-images.jianshu.io/upload_images/4109786-4ddb8902c6c1360c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>ngrok1.x开源，ngrok2.x不开源</p><p>ngrok使用go语言开发，源代码分为客户端与服务器端。</p><p>国内免费服务器：<a href="http://ngrok.ciqiuwl.cn/" target="_blank" rel="noopener">http://ngrok.ciqiuwl.cn/</a>，更多免费服务器请大家挖掘，资源共享，我随时更新：）</p><p>如果有服务器，仅客户端的使用是不复杂的，以上面的免费服务器为示例完成内网穿透</p><p><strong>本屌丝一向没有多余钱给服务商，只能搜索免费的，最后选了ngrok</strong></p><h2 id="3、-搭建"><a href="#3、-搭建" class="headerlink" title="3、 搭建"></a>3、 搭建</h2><p>搭建过程很简单，如果参考官网估计会走点弯路，因为windows对很多东西都有这要求。不过还好，找到了<a href="http://ngrok.ciqiuwl.cn/" target="_blank" rel="noopener">小米球ngrok</a>，让所谓的搭建好像没什么可以说的了。<br>复制一下使用教程。</p><blockquote><p><strong>●windows用户:</strong><br>1、下载windows版本的客户端，解压到你喜欢的目录<br>2、在命令行下进入到ngrok客户端目录下<br>3、执行 ngrok -config=ngrok.cfg -subdomain xxx 80 //(xxx 是你自定义的域名前缀)<br>4、如果开启成功 你就可以使用 xxx.ngrok.xiaomiqiu.cn 来访问你本机的 127.0.0.1:80 的服务啦<br>5、如果你自己有顶级域名，想通过自己的域名来访问本机的项目，那么先将自己的顶级域名解析到&gt;120.25.161.137(域名需要已备案哦)，然后执行 ngrok -config=ngrok.cfg -hostname xxx.xxx.xxx 80 //(xxx.xxx.xxx是你自定义的顶级域名)<br>6、如果开启成功 你就可以使用你的顶级域名来访问你本机的 127.0.0.1:80 的服务啦<br>7、如果失败 就加下交流群 反馈下问题 本屌会看看什么原因….吧<br>8、如果实在闲命令打开麻烦，windows版提供了一键启动脚本！直接启动即可（其它版本没有脚本）<br><strong>●linux用户:</strong><br>只在centos6.5 amd64 下测试没有问题<br>1、下载linux版本的客户端，解压到你喜欢的目录,注意：要给ngrok文件的可执行权限<br>2、在命令行下进入到ngrok客户端目录下<br>3、执行 ./ngrok -config=ngrok.cfg -subdomain xxx 80 //(xxx 是你自定义的域名前缀)<br>4、如果开启成功 你就可以使用 xxx.ngrok.xiaomiqiu.cn 来访问你本机的 127.0.0.1:80 的服务啦<br>5、如果你自己有顶级域名，想通过自己的域名来访问本机的项目，那么先将自己的顶级域名解析到120.25.161.137 (域名需要已备案哦),然后执行./ngrok -config=ngrok.cfg -hostname xxx.xxx.xxx 80 //(xxx.xxx.xxx是你自定义的顶级域名)<br>6、如果开启成功 你就可以使用你的顶级域名来访问你本机的 127.0.0.1:80 的服务啦<br>7、最近有很多同学提到需要linux32位与arm版本，这边也新增了两个客户端，由于本屌没有相应设备或环境，请自行测试，如果有问题，可以反馈。<br>8、如果失败 就加下交流群 反馈下问题 本屌会看看什么原因….吧<br><strong>●Mac 用户:</strong><br>1、呃,虽然提供了mac版的客户端，但是本屌没有mac，所有没有测试！<br>2、所以你下载了之后 自己琢磨吧(应该和linux的使用一样….吧)…….<br><strong>●其他使用方法</strong><br>1、呃,虽然搭建了ngrok服务，但是实际上上面的教程只介绍了一些简单的操作<br>2、ngrok还有许多使用方法，大家可以多了解探索一下<br>3、比如，同时开启多个服务，TCP端口转发，这些大家可以在.cfg上进行配置，本屌就不一一叙述了。</p></blockquote><h3 id="3-1、下载"><a href="#3-1、下载" class="headerlink" title="3.1、下载"></a>3.1、下载</h3><p><a href="https://pan.baidu.com/s/1xiKDwzaTnOZFloKnGxSM6g" target="_blank" rel="noopener">下载</a> windows 64位版（密码: p6n6），并解压，内包含3个文件：</p><blockquote><p>ngrok.cfg<br>ngrok.exe<br>小米球Ngrok启动工具.bat</p></blockquote><h3 id="3-2、运行本地web服务"><a href="#3-2、运行本地web服务" class="headerlink" title="3.2、运行本地web服务"></a>3.2、运行本地web服务</h3><p>我现在本地运行我的程序，在80端口上，运行起来以后访问我写的获取微信签名的接口：<br><img src="http://upload-images.jianshu.io/upload_images/4109786-8360d74880f83873.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="本地web接口"></p><h3 id="3-3、启动ngrok，配置映射"><a href="#3-3、启动ngrok，配置映射" class="headerlink" title="3.3、启动ngrok，配置映射"></a>3.3、启动ngrok，配置映射</h3><p><img src="http://upload-images.jianshu.io/upload_images/4109786-72236256c8d7044a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置访问域名和端口"><br>回车，提示配置成功，显示出访问地址：<br><img src="http://upload-images.jianshu.io/upload_images/4109786-fe10a808880a5a91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="显示出穿透地址"><br>按照提示在浏览器访问一下:<br><img src="http://upload-images.jianshu.io/upload_images/4109786-8d8eebf34bc05d77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="用公用域名访问"><br>然后再观察ngrok的控制台，发现已经记录了一条访问access log：<br><img src="http://upload-images.jianshu.io/upload_images/4109786-80eb15d8fedba42c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ngrok控制台log"><br>到此，穿透完毕，so easy！</p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>感谢<a href="http://ngrok.ciqiuwl.cn/" target="_blank" rel="noopener">小米球</a>的分享<br><a href="https://www.jianshu.com/p/c273d3009ded" target="_blank" rel="noopener">这篇</a>文章用ngrok官网的指导使用也不错</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> server </tag>
            
            <tag> 网络 </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>react-native 安卓项目gradle优化</title>
      <link href="/2018/06/15/react-native%20%E5%AE%89%E5%8D%93%E9%A1%B9%E7%9B%AEgradle%E4%BC%98%E5%8C%96/"/>
      <url>/2018/06/15/react-native%20%E5%AE%89%E5%8D%93%E9%A1%B9%E7%9B%AEgradle%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>大前端学习之安卓项目编译速度优化<br><a href="https://www.jianshu.com/p/d039b1ba4b0c" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>profile报告命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew clean app:assembleDebug --profile</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-7b7ba59721e695fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1.png"></p><p>1、debug环境禁止crashLytics上报<br>2、避免Legacy Multidex</p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-41af75052b667ba6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-8e48236839f406c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2.png"></p><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><p>2018-11-06  11:05  clean<br>gradlew clean app:assembleDebug –profile</p><p>1、修改参数，加快build<br>org.gradle.jvmargs=-Xmx4608M -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8<br>安卓：非发布版禁用fabric上报，修改jvmargs参数，使开发环境build时间降至2min以内<br><a href="http://www.easemob.com/news/852" target="_blank" rel="noopener">http://www.easemob.com/news/852</a><br><a href="https://medium.com/exploring-code/how-to-decrease-your-gradle-build-time-by-65-310b572b0c43" target="_blank" rel="noopener">https://medium.com/exploring-code/how-to-decrease-your-gradle-build-time-by-65-310b572b0c43</a></p><p>debug环境禁用fabric<br>非发布版本关闭Fabirc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        debug &#123;</span><br><span class="line">          // Disable fabric build ID generation for debug builds</span><br><span class="line">          ext.enableCrashlytics = false</span><br><span class="line">          ...</span><br></pre></td></tr></table></figure></p><p>参考：<a href="https://www.cnblogs.com/zhou-guobao/p/disable-crashlytics-for-debug-builds.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhou-guobao/p/disable-crashlytics-for-debug-builds.html</a></p><p>2、配置不同的图标<br><a href="https://blog.csdn.net/MAIMIHO/article/details/76106700?utm_source=blogxgwz4" target="_blank" rel="noopener">https://blog.csdn.net/MAIMIHO/article/details/76106700?utm_source=blogxgwz4</a></p><p>配置不同app名称<br>遇到一个错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">FAILURE: Build failed with an exception.</span><br><span class="line"></span><br><span class="line">* What went wrong:</span><br><span class="line">Execution failed for task &apos;:app:processDebugManifest&apos;.</span><br><span class="line">&gt; Manifest merger failed : Attribute application@label value=(@string/app_name_debug) from AndroidManifest.xml:86:9-37</span><br><span class="line">  is also present at [:react-native-fetch-blob] AndroidManifest.xml:11:18-50 value=(@string/app_name).</span><br><span class="line">  Suggestion: add &apos;tools:replace=&quot;android:label&quot;&apos; to &lt;application&gt; element at AndroidManifest.xml:80:5-324:19 to override.</span><br><span class="line"></span><br><span class="line">* Try:</span><br><span class="line">Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.</span><br><span class="line"></span><br><span class="line">* Get more help at https://help.gradle.org</span><br></pre></td></tr></table></figure></p><p>按照提示解决，解释：<a href="https://www.2cto.com/kf/201712/702939.html" target="_blank" rel="noopener">https://www.2cto.com/kf/201712/702939.html</a></p><p>3、配置不同applicationId<br>fileprovider  修改，<a href="https://www.jianshu.com/p/1afa7d4c0afd" target="_blank" rel="noopener">https://www.jianshu.com/p/1afa7d4c0afd</a> 提醒<br>FileHelp.java中使用父项目的BuildConf.applicationId</p><p>4、打jsbundle后生成的这个垃圾文件<br>D:\Git\pingtai\Portal\android\app\src\main\res\drawable-mdpi\js_commonview_echarts_tpl.html</p><p>5、android studio 中distributionUrl使用本地文件<br>D:\Git\pingtai\Portal\android\gradle\wrapper\gradle-wrapper.properties<br><img src="https://upload-images.jianshu.io/upload_images/4109786-e5ce7fbaa9752cbf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="distributionUrl.png"></p><p>6、修改combile</p><p>7、开发环境使用比android studio 自带的【apply changes】更牛逼的【JRebel for Android】</p><ul><li>1、安装Jrebel插件：<a href="https://zeroturnaround.com/software/jrebel-for-android/quick-start/#!/installation" target="_blank" rel="noopener">https://zeroturnaround.com/software/jrebel-for-android/quick-start/#!/installation</a></li><li>2、激活帮助：<a href="http://blog.lanyus.com/archives/299.html" target="_blank" rel="noopener">http://blog.lanyus.com/archives/299.html</a><blockquote><p>生成GUID：<a href="https://www.qvdv.com/tools/guid.html" target="_blank" rel="noopener">https://www.qvdv.com/tools/guid.html</a><br>我生成的：<a href="http://idea.lanyus.com/E086630D-638A-07A7-58D2-68ED4762D053" target="_blank" rel="noopener">http://idea.lanyus.com/E086630D-638A-07A7-58D2-68ED4762D053</a></p></blockquote></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4109786-3145e44d01ddda49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="activate.png"><br><img src="https://upload-images.jianshu.io/upload_images/4109786-ebf0d845e5b2b91b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="activated.png"></p><ul><li>3、配置参考博客地址：<a href="http://www.czhzero.com/2016/08/10/jrebel-for-android-guide/" target="_blank" rel="noopener">http://www.czhzero.com/2016/08/10/jrebel-for-android-guide/</a></li></ul><p>8、减小APP的体积</p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react-native </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>react native项目编译，打包成android APP</title>
      <link href="/2018/06/15/react%20native%E9%A1%B9%E7%9B%AE%E7%BC%96%E8%AF%91%EF%BC%8C%E6%89%93%E5%8C%85%E6%88%90android%20APP/"/>
      <url>/2018/06/15/react%20native%E9%A1%B9%E7%9B%AE%E7%BC%96%E8%AF%91%EF%BC%8C%E6%89%93%E5%8C%85%E6%88%90android%20APP/</url>
      
        <content type="html"><![CDATA[<p>编译react native项目，并最终打包成安卓的apk包<br><a href="https://www.jianshu.com/p/2cd763f11004" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h3 id="第十章-离线打包发布"><a href="#第十章-离线打包发布" class="headerlink" title="第十章 离线打包发布"></a>第十章 离线打包发布</h3><h4 id="10-2-Android打包发布"><a href="#10-2-Android打包发布" class="headerlink" title="10.2 Android打包发布"></a>10.2 Android打包发布</h4><h6 id="1）将js代码打包成jsbundle包"><a href="#1）将js代码打包成jsbundle包" class="headerlink" title="1）将js代码打包成jsbundle包"></a>1）将js代码打包成jsbundle包</h6><ul><li><p>在android工程中创建assets文件夹，可以用命令行创建，也可以手动创建，命令如下:</p><blockquote><p>mkdir  android/app/src/main/assets </p></blockquote></li></ul><ul><li>在工程的根目录输入如下命令进行打包</li></ul><blockquote><p>react-native bundle –entry-file demo/index.js –bundle-output ./android/app/src/main/assets/index.android.jsbundle –platform android –assets-dest ./android/app/src/main/res/ –dev false</p></blockquote><p>【注意：上述命令中 “demo/index/.js”是你工程的安卓入口文件目录】</p><blockquote><p>-entry-file 指定入口文件 因为要打包ios平台，所以指定为rn项目的index.ios.js作为入口<br>  –bundle-output 指定输出的jsbundle文件路径和文件名 指定到rn项目的ios工程文件夹下，记得一定要先创建bundle文件夹，不然终端会报文件夹找不到的错误<br>  –platform 指定平台类型<br>  –assets-dest 指定资源文件夹路径 assets文件夹的路径，包含图片、node模块等资源<br>  –dev 是否为开发模式 如果设置为false，不会产生警告，并且bundle会被压缩<br>  还有其他命令，比如：transformer、prepack、bundle-encoding等，可以到官网查看具体介绍。</p></blockquote><ul><li><p>在<code>MyApplication.java</code>中的ReactNativeHost<code>中添加</code>getBundleAssetName`方法，该方法的返回值，必须与上一步中生成的jsbundle文件的文件名保持一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Nullable</span><br><span class="line">@Override</span><br><span class="line">protected String getBundleAssetName() &#123;</span><br><span class="line">    return &quot;index.android.bundle&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="2）利用命令行打包安卓APK"><a href="#2）利用命令行打包安卓APK" class="headerlink" title="2）利用命令行打包安卓APK"></a>2）利用命令行打包安卓APK</h6><p>Android要求所有应用都必须有一个签名证书才允许安装在手机上，所以，在把应用发布到应用市场之前必须生成1个签名的apk包。</p><ul><li><p>生成签名秘钥</p><p>在Windows上<code>keytool</code>命令放在JDK的bin目录中（比如<code>C:\Program Files\Java\jdkx.x.x_x\bin</code>），你可能需要在命令行中先进入那个目录才能执行此命令。在mac上，建议在工程目录下生成：</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;$ keytool -genkey -v -keystore my-release-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote></li></ul><p>【注：keystore名称可自己修改】</p><p>这条命令会要求你输入密钥库（keystore）和对应密钥的密码，然后设置一些发行相关的信息。最后它会生成一个叫做<code>my-release-key.keystore</code>的密钥库文件。</p><p>在运行上面这条语句之后，密钥库里应该已经生成了一个单独的密钥，有效期为10000天。–alias参数后面的别名是你将来为应用签名时所需要用到的，所以记得记录这个别名。</p><ul><li><p>设置gradle变量</p><ol><li><p>把<code>my-release-key.keystore</code>文件放到你工程中的<code>android/app</code>文件夹下。</p></li><li><p>在<code>android</code>工程的<code>gradle.properties</code>文件中加入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MYAPP_RELEASE_STORE_FILE=my-release-key.keystore</span><br><span class="line">MYAPP_RELEASE_KEY_ALIAS=my-key-alias</span><br><span class="line">MYAPP_RELEASE_STORE_PASSWORD=hongchuang</span><br><span class="line">MYAPP_RELEASE_KEY_PASSWORD=hongchuang</span><br></pre></td></tr></table></figure></li></ol></li><li><p>添加签名到gradle配置文件</p><p>编辑你项目目录下的<code>android/app/build.gradle</code>，添加如下的签名配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    defaultConfig &#123; ... &#125;</span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            storeFile file(MYAPP_RELEASE_STORE_FILE)</span><br><span class="line">            storePassword MYAPP_RELEASE_STORE_PASSWORD</span><br><span class="line">            keyAlias MYAPP_RELEASE_KEY_ALIAS</span><br><span class="line">            keyPassword MYAPP_RELEASE_KEY_PASSWORD</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            ...</span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>生成签名apk包</p><blockquote><p>cd android</p><p>./gradlew  assembleRelease</p></blockquote></li></ul><p><code>./gradlew assembleRelease</code>在macOS、Linux或是windows的PowerShell环境中表示执行当前目录下的名为gradlew的脚本文件，且其运行参数为assembleRelease，注意这个<code>./</code>不可省略；而在windows的传统CMD命令行下则需要去掉<code>./</code>。</p><p>Gradle的<code>assembleRelease</code>参数会把所有用到的JavaScript代码都打包到一起，然后内置到APK包中。如果你想调整下这个行为（比如js代码以及静态资源打包的默认文件名或是目录结构等），可以看看<code>android/app/build.gradle</code>文件，然后琢磨下应该怎么修改以满足你的需求。</p><p>生成的APK文件位于<code>android/app/build/outputs/apk/app-release.apk</code>，它已经可以用来发布了。</p><ul><li><p>测试签名包</p><p>输入以下命令来安装上一步生成的签名包，来进行测试。</p><blockquote><p>cd android</p><p>./gradlew installRelease</p></blockquote><p>注意<code>installRelease</code>参数只能在你完成了上面的签名配置之后才可以使用。 你现在可以关掉运行中的packager了，因为你所有的代码和框架依赖已经都被打包到apk包中，可以离线运行了。</p><p>在debug和release版本间来回切换安装时可能会报错签名不匹配，此时需要先卸载前一个版本再尝试安装。</p></li><li><p>启用Proguard代码混淆来缩小apk文件大小（可选）</p><p>Proguard是一个Java字节码混淆压缩工具，它可以移除掉React Native Java（和它的依赖库中）中没有被使用到的部分，最终有效的减少APK的大小。</p><p>【启用Proguard之后，你必须再次全面地测试你的应用。Proguard有时候需要为你引入的每个原生库做一些额外的配置。参见<code>app/proguard-rules.pro</code>文件。】</p><p>启用方法是修改android工程的<code>build.gradle</code>文件，设置<code>minifyEnabled</code>选项为<code>true</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">buildTypes &#123;  </span><br><span class="line">       release &#123;  </span><br><span class="line">           signingConfig signingConfigs.release  </span><br><span class="line">       minifyEnabled true  </span><br><span class="line">           proguardFile &apos;proguard.txt&apos;  </span><br><span class="line">       &#125;  </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h6 id="3）利用androidStudio打包生成apk"><a href="#3）利用androidStudio打包生成apk" class="headerlink" title="3）利用androidStudio打包生成apk"></a>3）利用androidStudio打包生成apk</h6><ul><li><p>利用AndroidStudio生成签名秘钥</p><p>具体方法是，androidStudio—&gt;Build—&gt;Generate Signed apk—&gt;点击【next】—&gt;【Create new】</p><p>如下图所示：</p><p><img src="http://7xqi6y.com1.z0.glb.clouddn.com/keystore1.png" alt=""></p><p>然后进入创建窗口，选择keystore路径，key store密码，然后下面如图所示输入公司及开发者信息，信息输入完成后点击【ok】即可生成keystore。</p><p><img src="http://7xqi6y.com1.z0.glb.clouddn.com/keystore2.png" alt=""></p><p>此处的keystore password 跟key  Alias 以及password 需要记住，当利用keystore打包时需要填写。</p></li><li><p>利用AndroidStudio打包生成签名apk</p><p>方法还是，androidStudio—&gt;Build—&gt;Generate Signed apk—&gt;点击【next】—&gt;【Choose existing】—&gt;选择上一步生成的keystore文件路径—&gt;输入keystore相关信息—&gt;【Next】</p><p><img src="http://7xqi6y.com1.z0.glb.clouddn.com/keystore3.png" alt=""></p><p> 然后选择apk存储路径—&gt;Signature Versions 选择【V2（Full APK Signature）】—&gt;【Finish】然后等待apk 打包完成即可</p><p><img src="http://7xqi6y.com1.z0.glb.clouddn.com/keystore4.png" alt=""></p><p> 到这里，打包工作就完成了，把apk上传应用商店即可。</p></li></ul><h3 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h3><p>   <a href="https://blog.csdn.net/u011272795/article/details/77161942" target="_blank" rel="noopener">另一篇好博文</a></p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react-native </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mysql数据库安装和一般配置</title>
      <link href="/2018/06/15/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%92%8C%E4%B8%80%E8%88%AC%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/06/15/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85%E5%92%8C%E4%B8%80%E8%88%AC%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>在linux上安装mysql server，进行常规设置<br><a href="https://www.jianshu.com/p/e3eca6195969" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><p>同事那里的总结拿过来自己保存一份，类似的教程太多了。</p><p>在linux上安装mysql server，进行常规设置</p><h2 id="MySQL数据库安装"><a href="#MySQL数据库安装" class="headerlink" title="MySQL数据库安装"></a>MySQL数据库安装</h2><ol><li><p><strong>安装</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 更新包索引</span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure><p> 安装过程中会提示设置root密码。</p></li><li><p><strong>设置</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 执行安全脚本设置</span><br><span class="line">sudo mysql_secure_installation</span><br><span class="line"></span><br><span class="line"># 执行初始化脚本(按此方法安装不用执行)</span><br><span class="line"></span><br><span class="line"># 5.7.6之前的版本执行</span><br><span class="line">mysql_install_db</span><br><span class="line"></span><br><span class="line"># 5.7.6及后续版本执行</span><br><span class="line">mysqld --initialize</span><br></pre></td></tr></table></figure></li><li><p><strong>测试</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 查看mysql运行状态</span><br><span class="line">systemctl status mysql.service</span><br><span class="line"></span><br><span class="line"># 启动Mysql</span><br><span class="line">sudo systemctl start mysql</span><br><span class="line"></span><br><span class="line"># 停止Mysql</span><br><span class="line">sudo systemctl stop mysql</span><br><span class="line"></span><br><span class="line"># 重启Mysql</span><br><span class="line">sudo systemctl restart mysql</span><br></pre></td></tr></table></figure></li></ol><h2 id="MySQL数据库配置"><a href="#MySQL数据库配置" class="headerlink" title="MySQL数据库配置"></a>MySQL数据库配置</h2><p>按此种方式安装完Mysql后，配置文件默认位于/etc/msyql下，其中mysql.conf.d下的mysqld.cnf用于配置服务端，conf.d下的mysql.cnf用于配置客户端。</p><ol><li><p><strong>忽略大小写</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑my.cnf文件</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在[msyqld]下添加如下代码</span></span><br><span class="line">[mysqld]</span><br><span class="line">lower_case_table_names=1</span><br></pre></td></tr></table></figure></li><li><p><strong>设置编码格式为utf8mb4，并支持emoji表情</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑my.cnf文件</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[client]</span><br><span class="line"></span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">character-set-client-handshake = FALSE</span><br><span class="line"></span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line"></span><br><span class="line">collation-server = utf8mb4_unicode_ci</span><br><span class="line"></span><br><span class="line">init_connect=’SET NAMES utf8mb4<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[mysql]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">default-character-set=utf8mb4</span></span><br></pre></td></tr></table></figure><p>数据库、表和字段的设置分别如下：</p></li></ol><blockquote><p>1） 修改database的字符集：</p><p> ALTER DATABASE <a href="http://lib.csdn.net/base/mysql" target="_blank" rel="noopener">数据库</a>名 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;</p><p>示例：</p><p>ALTER DATABASE xxxdb CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;</p><p>2） 步骤1）执行完成之后，需要执行use 数据库名，指明当前需要进行字符集修改的数据库；示例：use xxxdb;</p><p>3）修改table的字符集：</p><p>ALTER TABLE 表名 CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</p><p>示例：</p><p>ALTER TABLE user_comments CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</p><p>4） 修改column的字符集：</p><p>ALTER TABLE 表名 CHANGE 字段名 字段名 该字段原来的数据类型 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</p><p>示例：</p><p> ALTER TABLE user_comments CHANGE content content TEXT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</p></blockquote><ol start="3"><li><p><strong>设置max_allowed_package</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑my.cnf文件</span></span><br><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">max_allowed_packet=100M</span><br></pre></td></tr></table></figure></li><li><p><strong>允许远程访问</strong></p><p>4.1 排队网络或防火墙问题</p><p>先看能否ping通远程服务器，如果不可以就是网络问题。然后，检查端口是否被防火墙挡住了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet ip地址 3306</span><br></pre></td></tr></table></figure><p>如果连接失败，配置防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 防火墙放开Mysql端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 3306 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --dport 3306 -j ACCEPT</span><br></pre></td></tr></table></figure><p>4.2 检查MySQL配置<br>如果开启了防火墙，telnet还是失败，通过netstat查看3306的端口状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -apn | grep 3306</span><br><span class="line"></span><br><span class="line"># 返回结果</span><br><span class="line">tcp6 0 0 127.0.0.1:3306 :::* LISTEN 13524/mysqld</span><br></pre></td></tr></table></figure><p>如果显示127.0.0.1：3306表示3306被绑定到了本地。需要修改mysqld.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 编辑mysqld.cnf文件</span><br><span class="line">vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">bind-address=addr</span><br></pre></td></tr></table></figure><p>不配置或者IP配置为0.0.0.0，表示监听所有客户端连接。</p><p>4.3 检查用户访问权限    MySQ建用户的时候会指定一个host,默认是127.0.0.1/localhost，那么这个用户就只能本机访问，其他机器用这个账号访问会提示没有权限，host改为%，表示允许所有机器访问。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 登录mysql服务器</span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line"># 使用mysql数据库</span><br><span class="line">mysql&gt; use mysql;</span><br><span class="line">Database changed</span><br><span class="line"></span><br><span class="line"># 修改root用户访问权限</span><br><span class="line">mysql&gt; update user set host=&apos;%&apos; where user=&apos;root&apos;;</span><br><span class="line">Query OK, 0 rows affected(0.00 sec)</span><br><span class="line">Row matched: 1 Changed: 0 Warnings: 0</span><br><span class="line"></span><br><span class="line"># 查看结果</span><br><span class="line">mysql&gt; select host, user from user;</span><br><span class="line">+------+-------+</span><br><span class="line">|host  |user    |</span><br><span class="line">+------+-------+</span><br><span class="line">|%     |root    |</span><br></pre></td></tr></table></figure><p>重启Mysql使用修改生效</p></li><li><p><strong>设置开机启动及禁止</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 禁止启动</span><br><span class="line">sudo systemctl disable mysqld</span><br><span class="line"></span><br><span class="line"># 开机启动</span><br><span class="line">sudo systemctl enable mysqld</span><br></pre></td></tr></table></figure></li></ol><h2 id="MySQL用户及数据库-表权限配置"><a href="#MySQL用户及数据库-表权限配置" class="headerlink" title="MySQL用户及数据库/表权限配置"></a>MySQL用户及数据库/表权限配置</h2><p>基本操作命令：</p><ul><li><p>1、查询用户权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show grants for username;</span><br></pre></td></tr></table></figure></li><li><p>2、用户授权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant select on db.* to username;</span><br></pre></td></tr></table></figure></li><li><p>3、回收用户权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">revoke select on db.* from username;(权限不存在会报错)</span><br></pre></td></tr></table></figure></li></ul><h4 id="1、新建用户"><a href="#1、新建用户" class="headerlink" title="1、新建用户"></a>1、新建用户</h4><p>　1.1 登录MYSQL：<br>　　root@bin&gt;mysql -u root -p<br>    Enter password: <strong><strong>**</strong></strong><br>　　1.2 创建用户：</p><p>　　mysql&gt; insert into mysql.user(Host,User,Password) values(“localhost”,”demo”,password(“1234”));</p><p>　　这样就创建了一个名为：demo 密码为：1234 的用户。</p><p>　　注意：此处的”localhost”，是指该用户只能在本地登录，不能在另外一台机器上远程登录。如果想远程登录的话，将”localhost”改为”%”，表示在任何一台电脑上都可以登录。也可以指定某台机器可以远程登录。</p><p>　　1.3 然后登录一下：</p><p>　　mysql&gt;exit;</p><p>　　root@bin&gt;mysql -u demo -p<br>    Enter password: <strong><strong>**</strong></strong></p><h4 id="2、用户授权"><a href="#2、用户授权" class="headerlink" title="2、用户授权"></a>2、用户授权</h4><p>授权格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by “密码”;　</p><p>　　2.1 登录MYSQL（有ROOT权限），这里以ROOT身份登录：</p><p>　　root@bin&gt;mysql -u demo -p<br>    Enter password: <strong><strong>**</strong></strong></p><p>　　2.2 首先为用户创建一个数据库(testDB)：</p><p>　　mysql&gt;create database demoDB;</p><p>　　2.3 授权test用户拥有testDB数据库的所有权限（某个数据库的所有权限）：</p><p>　　 mysql&gt;grant all privileges on demoDB.* to demo@localhost identified by ‘1234’;</p><p> 　　mysql&gt;flush privileges;//刷新系统权限表</p><p>　　格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by “密码”;　</p><p>　　2.4 如果想指定部分权限给一用户，可以这样来写:</p><p>　　mysql&gt;grant select,update on demoDB.* to demo@localhost identified by ‘1234’;</p><p>　　mysql&gt;flush privileges; //刷新系统权限表</p><p>　　2.5 授权test用户拥有所有数据库的某些权限： 　 </p><p>　　mysql&gt;grant select,delete,update,create,drop on <em>.</em> to demo@”%” identified by “1234”;</p><pre><code>//test用户对所有数据库都有select,delete,update,create,drop 权限。</code></pre><p>　 //@”%” 表示对所有非本地主机授权，不包括localhost。（localhost地址设为127.0.0.1，如果设为真实的本地地址，不知道是否可以，没有验证。）</p><p>　//对localhost授权：加上一句grant all privileges on demoDB.* to demo@localhost identified by ‘1234’;即可。 </p><h4 id="3、删除用户"><a href="#3、删除用户" class="headerlink" title="3、删除用户"></a>3、删除用户</h4><p>root@bin&gt;mysql -u demo -p<br>    Enter password: <strong><strong>**</strong></strong><br> 　　mysql&gt;Delete FROM user Where User=’demo’ and Host=’localhost’;<br> 　　mysql&gt;flush privileges;<br> 　　mysql&gt;drop database demoDB; //删除用户的数据库<br>删除账户及权限：&gt;drop user 用户名@’%’;<br>　　　　　　　　&gt;drop user 用户名@ localhost; </p><h4 id="4、修改用户密码"><a href="#4、修改用户密码" class="headerlink" title="4、修改用户密码"></a>4、修改用户密码</h4><p>root@bin&gt;mysql -u demo -p<br>      Enter password: <strong><strong>**</strong></strong><br>  　　mysql&gt;update mysql.user set password=password(‘新密码’) where User=”demo” and Host=”localhost”;<br>  　　mysql&gt;flush privileges;</p><p><strong>说明：grant和revoke可以在几个层次上控制访问权限</strong><br>1.整个服务器：grant all /revoke all<br>2.整个数据库：on database.*<br>3.特定的表：on database.table<br>4.特定的列：grant select(id, se, rank) on testdb.apache_log to dba@localhost;<br>5.特定的存储过程：grant execute on procedure testdb.pr_add to ’dba’@’localhost’<br>6.特定的函数：grant execute on function testdb.fn_add to ’dba’@’localhost’</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux上搭建热更服务器并在移动端通过react native项目验证</title>
      <link href="/2018/06/13/Linux%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%83%AD%E6%9B%B4%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E5%9C%A8%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%9A%E8%BF%87react%20native%E9%A1%B9%E7%9B%AE%E9%AA%8C%E8%AF%81/"/>
      <url>/2018/06/13/Linux%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%83%AD%E6%9B%B4%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E5%9C%A8%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%9A%E8%BF%87react%20native%E9%A1%B9%E7%9B%AE%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<p>本文介绍搭建热更服务器并在手机上测试react native热更的全过程。<br><a href="https://www.jianshu.com/p/7fd2dc0352d2" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a><a href="https://link.jianshu.com/?t=https%3A%2F%2Fwww.mysql.com%2Fdownloads%2F" target="_blank" rel="noopener">安装MySQL</a></h2><p>安装完成后，会弹出初始密码，粗细的我，随手点了OK，此处挖坑半天。<br><a href="https://link.jianshu.com/?t=http%3A%2F%2Fblog.csdn.net%2Fu014410695%2Farticle%2Fdetails%2F50630233" target="_blank" rel="noopener">权限密码问题可以参考这篇博客，其它的都是小问题</a></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-429725387cd40b07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="app热更原理.png"></p><h2 id="code-push热更服务器搭建："><a href="#code-push热更服务器搭建：" class="headerlink" title="code-push热更服务器搭建："></a>code-push热更服务器搭建：</h2><h4 id="安装code-push-server"><a href="#安装code-push-server" class="headerlink" title="安装code-push-server"></a>安装code-push-server</h4><ul><li><p>npm安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装code-push-server</span><br><span class="line">npm install code-push-server -g</span><br></pre></td></tr></table></figure></li><li><p>源码安装（推荐）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 从git库下载最新代码</span><br><span class="line">git clone https://github.com/lisong/code-push-server.git</span><br><span class="line"># 进入到code-push-server目录</span><br><span class="line">cd code-push-server</span><br><span class="line"># 安装</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li></ul><h4 id="Code-Push-Server配置"><a href="#Code-Push-Server配置" class="headerlink" title="Code-Push-Server配置"></a>Code-Push-Server配置</h4><p>修改config/config.js文件，指定数据库，数据存放位置</p><ul><li><p>配置数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db: &#123;</span><br><span class="line">  username: &quot;root&quot;,</span><br><span class="line">  password: &quot;Your PWD&quot;,</span><br><span class="line">  database: &quot;codepush&quot;,</span><br><span class="line">  host: &quot;127.0.0.1&quot;,</span><br><span class="line">  port: 3306,</span><br><span class="line">  dialect: &quot;mysql&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置存储（默认为local,本次也采用local）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">common: &#123;</span><br><span class="line">   // dataDir用于进行存放比对文件</span><br><span class="line">   dataDir: &quot;/Users/tablee/workspaces/data&quot;,</span><br><span class="line">   // 存储类型，可选值有local,oss,qiniu,s3</span><br><span class="line">   storageType: &quot;local&quot;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">// 文件存储在本地 当storageType为local时需要配置</span><br><span class="line">local: &#123;</span><br><span class="line">   // 二进制文件存放目录，文件下载目录，不要使用临时目录</span><br><span class="line">   storageDir: &quot;/Users/tablee/workspaces/storage&quot;,</span><br><span class="line">   // 文件下载地址 CodePushServer地址 + ’/download‘,download对应app.js里面的地址</span><br><span class="line">   //默认此处的下载地址是127.0.0.1:3000这个自然是错误的，要外网ip地址</span><br><span class="line">   downloadUrl: &quot;https://tech.haier.net:7788/download&quot;,</span><br><span class="line">   // public static download spacename</span><br><span class="line">   public: &apos;/download&apos;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//七牛云存储配置 当storageType为qiniu时需要配置</span><br><span class="line">qiniu: &#123;</span><br><span class="line">  accessKey: &quot;&quot;,</span><br><span class="line">  secretKey: &quot;&quot;,</span><br><span class="line">  bucketName: &quot;&quot;,</span><br><span class="line">  //文件下载域名地址</span><br><span class="line">  downloadUrl: &quot;&quot;</span><br><span class="line">&#125;,</span><br><span class="line">//阿里云存储配置 当storageType为oss时需要配置</span><br><span class="line">oss: &#123;</span><br><span class="line">  accessKeyId: &quot;&quot;,</span><br><span class="line">  secretAccessKey: &quot;&quot;,</span><br><span class="line">  endpoint: &quot;&quot;,</span><br><span class="line">  bucketName: &quot;&quot;,</span><br><span class="line">  // 对象Key的前缀，允许放到子文件夹里面</span><br><span class="line">  prefix: &quot;&quot;, </span><br><span class="line">  // 文件下载域名地址，需要包含前缀</span><br><span class="line">  downloadUrl: &quot;&quot;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置签名,可以不修改，但是推荐更改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jwt: &#123;</span><br><span class="line">    // 登录jwt签名密钥，必须更改，否则有安全隐患，可以使用随机生成的字符串</span><br><span class="line">    // Recommended: 63 random alpha-numeric characters</span><br><span class="line">    // Generate using: https://www.grc.com/passwords.htm</span><br><span class="line">    tokenSecret: &apos;https://www.grc.com/passwords.htm&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><p>配置完成后，进行数据初始化工作</p><ul><li><p>npm安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 初始化数据库,**替换为数据库密码**（参考后面配置说明）</span><br><span class="line">code-push-server-db init --dbhost localhost --dbuser root --dbpassword **Your PWD** --dbport 3306</span><br></pre></td></tr></table></figure></li><li><p>源码安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 初始化数据库</span><br><span class="line">./bin/db init --dbhost localhost --dbuser root --dbpassword **Your PWD** --dbport 3306</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意事项</strong>：</p><ul><li><ol><li>不论采取哪种安装方式，初始化数据库时要保证数据库用户名密码正确；数据库中不能存在codepush数据库(默认数据库为codepush)</li></ol></li><li><ol start="2"><li>采用源码安装，执行bin目录下的db命令时，要保证此文件具有可执行权限，如果没有，需要添加权限<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 添加db文件的可执行权限</span><br><span class="line">chmod +x bin/db</span><br></pre></td></tr></table></figure></li></ol></li><li><ol start="3"><li>如果数据库密码复杂，带有特殊符号，初始化语句将执行失败。此时因为是第一次安装，可以在数据库服务器手动创建名为<strong><code>codepush</code></strong>(必须是这个名字)的数据库，然后执行<code>/opt/chuangke/code-push-server/sql/</code>目录下的<code>codepush-all.sql</code>脚本来初始化数据库。<br>初始化成功后数据库中的表如下：<br><img src="http://upload-images.jianshu.io/upload_images/4109786-4975e1c5d8e408c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="codepush database"><h4 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h4>安装配置文件中的目录结构，到/Users目录中建立如下文件夹 /Users/tablee/workspaces/storage </li></ol></li><li><p>npm启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务，默认使用3000端口,可以在浏览器中打开 http://127.0.0.1:3000</span><br><span class="line">code-push-server</span><br><span class="line"></span><br><span class="line"># 指定端口号运行</span><br><span class="line">PORT=3000 HOST=127.0.0.1 NODE_ENV=production code-push-server</span><br></pre></td></tr></table></figure></li><li><p>源码启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 启动服务(保证www具有可执行权限)，在浏览器中打开 http://127.0.0.1:3000</span><br><span class="line">./bin/www</span><br><span class="line"></span><br><span class="line"># 以守护进程的方式运行</span><br><span class="line">nohup ./bin/www &amp;</span><br><span class="line"></span><br><span class="line"># 指定端口号运行</span><br><span class="line">PORT=3000 HOST=127.0.0.1 NODE_ENV=production node ./bin/www</span><br></pre></td></tr></table></figure></li><li><p>forever 后台启动（推荐）<br><strong>先安装forever</strong><br>当然，有人说forever已经过时了，推荐使用pm2代替forever，请参考<a href="https://www.jianshu.com/p/420ec3665d2f" target="_blank" rel="noopener">linux npm start 保持后台运行</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 全局安装</span><br><span class="line">$ npm install forever -g</span><br><span class="line"># 查看是否安装成功</span><br><span class="line">$ forever list</span><br><span class="line">info:    No forever processes running</span><br></pre></td></tr></table></figure></li></ul><p>很抱歉，如果不顺利的话，会有这么个情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z lib]# npm install forever -g</span><br><span class="line">/opt/software/node-v10.0.0-linux-x64/bin/forever -&gt; /opt/software/node-v10.0.0-linux-x64/lib/node_modules/forever/bin/forever</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.7 (node_modules/forever/node_modules/fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.7: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"></span><br><span class="line">+ forever@0.15.3</span><br><span class="line">updated 1 package in 2.109s</span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z lib]# forever list</span><br><span class="line">-bash: forever: 未找到命令</span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z lib]#</span><br></pre></td></tr></table></figure></p><p>不美丽了，命名安装成功了，但是还是提示找不到命令，怎么办呢？我来教你，这个是因为这个-g是吧命令安装到了node所在目录，可以看看具体在哪<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z ~]# npm list -g --depth 0</span><br><span class="line">/opt/software/node-v10.0.0-linux-x64/lib</span><br><span class="line">├── forever@0.15.3</span><br><span class="line">└── npm@5.6.0</span><br><span class="line"></span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z ~]# cd /opt/software/node-v10.0.0-linux-x64/lib</span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z lib]# ls</span><br><span class="line">node_modules</span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z lib]# cd node_modules/forever/bin/</span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z bin]# ls</span><br><span class="line">forever  monitor</span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z bin]#</span><br></pre></td></tr></table></figure></p><p>这次是真的看见forever被安装到哪里，接下来就来个软链到<code>/usr/bin</code>下就可以了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z bin]# ln -s /opt/software/node-v10.0.0-linux-x64/lib/node_modules/forever/bin/forever /usr/bin/forever</span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z bin]# forever list</span><br><span class="line">info:    No forever processes running</span><br><span class="line">[root@izm5e3m6sxwr4dw9w7r6h4z bin]#</span><br></pre></td></tr></table></figure></p><p>完美，接着使用forever启动应用啦。<br>比如我的server源码的位置在<code>/opt/chuangke/code-push-server/</code>，在当前目录下执行如下命令启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NODE_ENV=production forever start -l log/forever.log -o log/info.log -e log/err.log bin/www</span><br></pre></td></tr></table></figure></p><p>可以用如下绝对路径命令启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NODE_ENV=production forever start -l /opt/chuangke/code-push-server/log/forever.log -o /home/haieradmin/codepush/code-push-server/log/info.log -e /home/haieradmin/codepush/code-push-server/log/err.log /home/haieradmin/codepush/code-push-server/bin/www</span><br></pre></td></tr></table></figure></p><ul><li>服务启动验证<br>命令行验证<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ forever list</span><br><span class="line">info:    Forever processes running</span><br><span class="line">data:        uid  command                   script                                 forever pid   id logfile                                        uptime        </span><br><span class="line">data:    [0] 8Or8 /usr/local/node8/bin/node /opt/chuangke/code-push-server/bin/www 60199   60209    /opt/chuangke/code-push-server/log/forever.log 0:15:2:21.503</span><br></pre></td></tr></table></figure></li></ul><p>如果服务器启动成功，则用浏览器访问默认的3000端口，可以看到如下效果<br><img src="http://upload-images.jianshu.io/upload_images/4109786-3c67822345f455b2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="首页"><br>到此服务器端到配置就完成了。</p><h2 id="客户端热更验证"><a href="#客户端热更验证" class="headerlink" title="客户端热更验证"></a>客户端热更验证</h2><p>客户端测试代码以 <a href="https://github.com/lisong/code-push-demo-app" target="_blank" rel="noopener">https://github.com/lisong/code-push-demo-app</a> 为例</p><h4 id="客户端安装code-push-cli"><a href="#客户端安装code-push-cli" class="headerlink" title="客户端安装code-push-cli"></a>客户端安装code-push-cli</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 全局安装</span><br><span class="line">$ npm install -g code-push-cli </span><br><span class="line"># 查看版本</span><br><span class="line">$ code-push -v</span><br><span class="line">2.1.8</span><br></pre></td></tr></table></figure><h4 id="下载客户端验证程序，并安装第一版"><a href="#下载客户端验证程序，并安装第一版" class="headerlink" title="下载客户端验证程序，并安装第一版"></a>下载客户端验证程序，并安装第一版</h4><ol><li>clone程序并install<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git clone git@github.com:lisong/code-push-demo-app.git</span><br><span class="line">#  cd  到demo路径，执行npm install 安装node依赖包</span><br><span class="line">$ cd code-push-demo-app</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li></ol><p>打开命令终端，登录code-push-server服务器，这里配置为local，所以登录地址为<a href="http://127.0.0.1:3000" target="_blank" rel="noopener">http://127.0.0.1:3000</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ code-push login http://127.0.0.1:3000  //账号密码为博主提供  account:  admin password:  123456</span><br><span class="line">登录成功之后获取token</span><br></pre></td></tr></table></figure></p><p>将文本框中的key复制粘贴到登录终端，点击回车登录成功<br><img src="http://upload-images.jianshu.io/upload_images/4109786-5ed0dd3b34e078e6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录页面"><br>输入账号密码，点击登录。获取token：<br><img src="http://upload-images.jianshu.io/upload_images/4109786-a0dc9ad5f2a2231f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="获取token"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ code-push login http://127.0.0.1:3000</span><br><span class="line">Please login to Mobile Center in the browser window we&apos;ve just opened.</span><br><span class="line">Enter your token from the browser:  HugyOJpzvzhEhB05galUftoL4zrz4ksvOXqog</span><br><span class="line">Successfully logged-in. Your session file was written to C:\Users\marvin\AppData\Local\.code-push.config. You can run the code-push logout command at any time to delete this file and terminate your session.</span><br></pre></td></tr></table></figure></p><p>在命令行查看当前热更服务器的部署信息，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ code-push app list</span><br><span class="line">┌──────┬─────────────┐</span><br><span class="line">│ Name │ Deployments │</span><br><span class="line">└──────┴─────────────┘</span><br></pre></td></tr></table></figure></p><ol start="2"><li><p>添加新的APP（以安卓为例）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 安卓版</span><br><span class="line">$ code-push app add CodePushReactNativeDemo-android android react-native</span><br><span class="line">Successfully added the &quot;CodePushReactNativeDemo-android&quot; app, along with the following default deployments:</span><br><span class="line">┌────────────┬───────────────────────────────────────┐</span><br><span class="line">│ Name       │ Deployment Key                        │</span><br><span class="line">├────────────┼───────────────────────────────────────┤</span><br><span class="line">│ Production │ VKNbn9Oe5Wj9bPoGkYCUVuzRuqHV4ksvOXqog │</span><br><span class="line">├────────────┼───────────────────────────────────────┤</span><br><span class="line">│ Staging    │ 6KfLoVvhgdsnFzFCIohRb2t5grmD4ksvOXqog │</span><br><span class="line">└────────────┴───────────────────────────────────────┘</span><br><span class="line"># 再运行命令查看</span><br><span class="line">$ code-push app list</span><br><span class="line">┌─────────────────────────────────┬─────────────────────┐</span><br><span class="line">│ Name                            │ Deployments         │</span><br><span class="line">├─────────────────────────────────┼─────────────────────┤</span><br><span class="line">│ CodePushReactNativeDemo-android │ Production, Staging │</span><br><span class="line">└─────────────────────────────────┴─────────────────────┘</span><br></pre></td></tr></table></figure></li><li><p>修改配置<br>添加完成之后可以用code-push app list命令查看创建好的app，并将测试的Staging key拷贝到MainApplication.java中的 “Your Key“ 的位置，推送的时候通过key将app和服务器端关联。</p></li></ol><p>用Android Studio打开<code>code-push-demo-app/android</code>目录到MainApplication.java里面修改以下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line"></span><br><span class="line">protected List&lt;ReactPackage&gt; getPackages() &#123;</span><br><span class="line"></span><br><span class="line">  return Arrays.&lt;ReactPackage&gt;asList(</span><br><span class="line"></span><br><span class="line">      new MainReactPackage(),</span><br><span class="line"></span><br><span class="line">      new CodePush(</span><br><span class="line"></span><br><span class="line">         &quot;YourKey&quot;,  // code-push app add项目后生成的app 推送key</span><br><span class="line"></span><br><span class="line">         MainApplication.this,</span><br><span class="line"></span><br><span class="line">         BuildConfig.DEBUG,</span><br><span class="line"></span><br><span class="line">         &quot;YourCodePushServerUrl&quot;   // config.js中配置的downloadUrl 地址 不需要/download后缀</span><br><span class="line"></span><br><span class="line">      )</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我的配置是：<br>修改MainApplication.java的代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected List&lt;ReactPackage&gt; getPackages() &#123;</span><br><span class="line">  return Arrays.&lt;ReactPackage&gt;asList(</span><br><span class="line">      new MainReactPackage(),</span><br><span class="line">      new CodePushBuilder(getResources().getString(R.string.reactNativeCodePush_androidDeploymentKey),getApplicationContext())</span><br><span class="line">            .setIsDebugMode(BuildConfig.DEBUG)</span><br><span class="line">            .setServerUrl(getResources().getString(R.string.reactNativeCodePush_androidServerURL))</span><br><span class="line">            .build()</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>修改<code>android/app/src/main/res/values/strings.xml</code>文件，指定reactNativeCodePush_androidDeploymentKey和reactNativeCodePush_androidServerURL的值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;string moduleConfig=&quot;true&quot; name=&quot;reactNativeCodePush_androidDeploymentKey&quot;&gt;6KfLoVvhgdsnFzFCIohRb2t5grmD4ksvOXqog&lt;/string&gt;</span><br><span class="line">    &lt;string moduleConfig=&quot;true&quot; name=&quot;reactNativeCodePush_androidServerURL&quot;&gt;http://xxx.xxx:3000/&lt;/string&gt;</span><br><span class="line">    &lt;string name=&quot;app_name&quot;&gt;CodePushDemoApp&lt;/string&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure></p><ol start="4"><li>cd 到code-push-demo-app目录，允许react-native start 启动react-native 服务。可以选择用数据线连接手机，手机开启开发者模式。也可以直接将<code>code-push-demo-app\android\app\build\outputs\apk\debug</code>以后的apk包发送到手机上，直接打开安装。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ react-native run-android</span><br></pre></td></tr></table></figure></li></ol><p>在手机上运行app的截图如下：<br><img src="http://upload-images.jianshu.io/upload_images/4109786-50b93d71f61fe113.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="code-push-demo-app"></p><ol start="5"><li>Android Studio编译并将项目运行到手机上，reload更新到最新js包在code-push-demo-app中首页随意做一些修改，这里是将CodePushDemoApp/App.js文件做了如下修改。<br><img src="http://upload-images.jianshu.io/upload_images/4109786-dc556461f48bcdef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="一些修改"><br>执行推送命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># 测试环境执行：</span><br><span class="line">$ code-push release-react CodePushReactNativeDemo-android android</span><br><span class="line">Detecting android app version:</span><br><span class="line"></span><br><span class="line">Using the target binary version value &quot;2.1.0&quot; from &quot;android\app\build.gradle&quot;.</span><br><span class="line"></span><br><span class="line">Running &quot;react-native bundle&quot; command:</span><br><span class="line"></span><br><span class="line">node node_modules\react-native\local-cli\cli.js bundle --assets-dest C:\Users\marvin\AppData\Local\Temp\CodePush\CodePush --bundle-output C:\Users\marvin\AppData\Local\Temp\CodePush\CodePush\index.android.bundle --dev false --entry-file index.js --platform android</span><br><span class="line">Scanning folders for symlinks in D:\Git\oschina\react\code-push-demo-app\node_modules (101ms)</span><br><span class="line">Scanning folders for symlinks in D:\Git\oschina\react\code-push-demo-app\node_modules (48ms)</span><br><span class="line">Loading dependency graph, done.</span><br><span class="line">bundle: Writing bundle output to: C:\Users\marvin\AppData\Local\Temp\CodePush\CodePush\index.android.bundle</span><br><span class="line">bundle: Done writing bundle output</span><br><span class="line">bundle: Copying 1 asset files</span><br><span class="line">bundle: Done copying assets</span><br><span class="line"></span><br><span class="line">Releasing update contents to CodePush:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Successfully released an update containing the &quot;C:\Users\marvin\AppData\Local\Temp\CodePush\CodePush&quot; directory to the &quot;Staging&quot; deployment of the &quot;CodePushReactNativeDemo-android&quot; app.</span><br><span class="line"></span><br><span class="line"># 生产环境执行：</span><br><span class="line">$ code-push release-react CodePushReactNativeDemo-android android -d Production</span><br><span class="line"></span><br><span class="line">#指定版本，添加注释</span><br><span class="line">$ code-push release-react CodePushReactNativeDemo-android android -d Production --des &quot;marvin code push testing&quot; -t &quot;1.0.0&quot;</span><br></pre></td></tr></table></figure></li></ol><p>Successfully 表示热更包推送成功，然后在手机上点击<strong>Press for dialog-driven sync</strong>链接。<br>弹出下载确认<br><img src="http://upload-images.jianshu.io/upload_images/4109786-18c3d1a89c799c81.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="确认更新"></p><p>点击【install】<br><img src="http://upload-images.jianshu.io/upload_images/4109786-66fcf62d7789c8da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="已更新"><br>至此，热更服务器搭建，及android版app体验完毕。</p><h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><p>1、产看更新包安装情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># code-push deployment history appName deploymentName</span><br><span class="line">code-push deployment history CodePushReactNativeDemo-android Staging</span><br></pre></td></tr></table></figure></p><p>Staging 或者 Production<br><img src="https://upload-images.jianshu.io/upload_images/4109786-7912f2739b4edd06.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>2、列表部署名称<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code-push deployment ls CodePushReactNativeDemo-android</span><br></pre></td></tr></table></figure></p><p><img src="https://upload-images.jianshu.io/upload_images/4109786-1ec0da855309e131.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="部署名"></p><p>3、常见错误<br>3.1、 download地址写错，默认是<a href="http://127.0.0.1:3000" target="_blank" rel="noopener">http://127.0.0.1:3000</a> 如果不改成外网域名和端口，下载将失败。<br>app启动抓包查看的结果就是，返回的下载地址无法下载到资源。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-f32d3631189ba63b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>3.2、nginx限制资源大小<br>需要修改配置，我们的一个app打包后约70M，上传时就报错了，后来才知道是nginx指定的上传大小是50M，所以要修改nginx配置文件，加上<code>client_max_body_size 100M;</code>这个样配置。</p><p>3.3、数据库配置错误<br>将数据库的端口，或者用户名密码写错也很常见</p><p>3.4、目录权限问题<br>配置文件里默认的dataDir和storeage目录必须有code-push运行用户的操作权限，否则会有以下错误。<br><img src="https://upload-images.jianshu.io/upload_images/4109786-13c3240c61b7afde.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 账户相关</span><br><span class="line">code-push login 登陆</span><br><span class="line">code-push loout 注销</span><br><span class="line">code-push access-key ls 列出登陆的token</span><br><span class="line">code-push access-key rm &lt;accessKye&gt; 删除某个 access-key</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// app操作相关</span><br><span class="line">code-push app add &lt;appName&gt; &lt;platform&gt; react-native  在账号里面添加一个新的app</span><br><span class="line">code-push app remove 或者 rm 在账号里移除一个 app</span><br><span class="line">code-push app rename 重命名一个存在 app</span><br><span class="line">code-push app list 或则 ls 列出账号下面的所有 app</span><br><span class="line">code-push app transfer 把app的所有权转移到另外一个账号</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 应用信息相关</span><br><span class="line">code-push deployment add &lt;appName&gt; 部署</span><br><span class="line">code-push deployment rm &lt;appName&gt; 删除部署</span><br><span class="line">code-push deployment rename &lt;appName&gt; 重命名</span><br><span class="line">code-push deployment ls &lt;appName&gt; 列出应用的部署情况</span><br><span class="line">code-push deployment ls &lt;appName&gt; -k 查看部署的key</span><br><span class="line">code-push deployment history &lt;appName&gt; &lt;deploymentName&gt; 查看历史版本</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 发布</span><br><span class="line">code-push release-react &lt;appName&gt; &lt;platform&gt; -t 版本  -d 环境  --des 描述 -m true （强制更新）</span><br><span class="line"></span><br><span class="line">// 清除历史部署记录</span><br><span class="line">code-push deployment clear &lt;appName&gt; Production or Staging</span><br><span class="line"></span><br><span class="line">// 回滚</span><br><span class="line">code-push rollback &lt;appName&gt; Production --targetRelease v4(codepush服务部署的版本号)</span><br></pre></td></tr></table></figure><p>注意事项：</p><ol><li><p>更新规则<br>  1&gt; CodePush部署版本 &gt; App版本</p><p>  更新可用，但当前版本比运行版本高。不作更新</p><p>  2&gt; CodePush部署版本 &lt; App版本</p><p>   不执行更新处理</p><p>  3&gt; CodePush部署版本 == App版本</p><p>   自动下载更新，并根据加载策略加载最新bundle</p></li></ol><ol start="2"><li><p>回滚 </p><p> 当部署的版本不同时，不能跨版本回滚。</p><p> 例如：CodePush历史版本中为2.10.1，此时发布2.10.2版本。当从2.10.2发起回滚操作回到2.10.1时，是不可行的。</p></li></ol><h2 id="部署信息参数"><a href="#部署信息参数" class="headerlink" title="部署信息参数"></a>部署信息参数</h2><p>在部署了版本之后，执行 【code-push deployment ls uniApp-Android】可以查看当前版本、当前部署环境下的部署信息：</p><ol><li><p>Update Metadata（更新信息）<br> Label：标识当前部署版本，每部署新版本，版本号增加1</p><p> App Version：当前部署的App版本号</p><p> Mandatory：是否强制更新</p><p> Release Time：部署时间</p><p> Released By：部署用户</p><p> Description：部署 描述信息</p></li></ol><p>从上面内容不难发现，这些信息基本都会在我们执行 code-push release 时配置</p><ol start="2"><li><p>Install Metrics（安装指标） </p><p> Active：成功安装并运行当前release的用户的数量，即表示当前下载更新部署的活跃用户数量，of 左边数会随着用户安装、卸载而 增加、减少。of右边数代表当前安装或收                    到部署版本的用户数，当有用户卸载App，该数值会降低。</p><p> 因此它很好的解释了当前更新包有多少活跃用户，多少用户接收过这个安装包</p><p> Total：成功安装部署当前release的用户量，只增不减</p><p> Pending：当前release版本被下载的数量，但是还没有被安装，该值会随着用户下载安装后增加， 在卸载时降低。</p></li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://222xiaohuan.iteye.com/blog/2347617" target="_blank" rel="noopener">code-push-server 搭建自己的推送服务器流程</a><br><a href="https://www.jianshu.com/p/d6a155a6f6f4" target="_blank" rel="noopener">热更新（android）windows系统code-push-server 的使用</a><br><a href="https://blog.csdn.net/mad2man/article/details/51096829" target="_blank" rel="noopener">ReactNative集成CodePush教程  集成Code Push的案例说明</a><br><a href="https://www.jianshu.com/p/8e08c7661275" target="_blank" rel="noopener">react-native热更新全方位讲解</a><br><a href="https://juejin.im/post/5911dca544d904007bfdf8ab" target="_blank" rel="noopener">零客户端开发经验 React Native 热更新 CodePush 打包集成指北</a><br><a href="https://www.jianshu.com/p/fa362da953c7" target="_blank" rel="noopener">react native codepush热更新解决成功更新</a><br><a href="https://blog.csdn.net/yy1300326388/article/details/48344411" target="_blank" rel="noopener">Android Studio 权威教程 打包、生成jks密钥、签名Apk、多渠道打包</a><br><a href="http://www.tl628.com/index.php/2018/05/31/code-push_fa_bu_de_shi_hou_chu_xian_error_upload_error/" target="_blank" rel="noopener">http://www.tl628.com/index.php/2018/05/31/code-push_fa_bu_de_shi_hou_chu_xian_error_upload_error/</a></p>]]></content>
      
      
      <categories>
          
          <category> 大前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> codepush </tag>
            
            <tag> react-native </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>学习书单</title>
      <link href="/2018/06/10/%E5%AD%A6%E4%B9%A0%E4%B9%A6%E5%8D%95/"/>
      <url>/2018/06/10/%E5%AD%A6%E4%B9%A0%E4%B9%A6%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<p>免费的计算机编程类中文书籍。<br><a href="https://www.jianshu.com/p/31ad74be1ba1" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><blockquote><p>你想要的干货，都在这里哟！</p></blockquote><p><strong>摘自:github上由justjavac整理的free-programming-books-zh_CN(免费的计算机编程类中文书籍)觉得不错的可以去star和fork一下哟!</strong></p><h3 id="写在最前面的话"><a href="#写在最前面的话" class="headerlink" title="写在最前面的话"></a>写在最前面的话</h3><p>首先声明,本篇博文并非本人原创,而是摘自github上大神<code>justjavac</code>发起并整理的<code>free-programming-books-zh_CN</code>(免费的计算机编程类中文书籍)开源项目,旨在帮助不经常逛github的童鞋发掘优质的学习干货,节省学习时间成本.最后再次感谢<code>justjavac</code>的整理与分享.</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><p><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AF%AD%E8%A8%80%E6%97%A0%E5%85%B3%E7%B1%BB" target="_blank" rel="noopener">语言无关类</a></p><ul><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">操作系统</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E6%99%BA%E8%83%BD%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">智能系统</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">分布式系统</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86" target="_blank" rel="noopener">编译原理</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E5%87%BD%E6%95%B0%E5%BC%8F%E6%A6%82%E5%BF%B5" target="_blank" rel="noopener">函数式概念</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6" target="_blank" rel="noopener">计算机图形学</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#web%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener">WEB服务器</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6" target="_blank" rel="noopener">版本控制</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%BC%96%E8%BE%91%E5%99%A8" target="_blank" rel="noopener">编辑器</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#nosql" target="_blank" rel="noopener">NoSQL</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#postgresql" target="_blank" rel="noopener">PostgreSQL</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#mysql" target="_blank" rel="noopener">MySQL</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%AE%A1%E7%90%86%E5%92%8C%E7%9B%91%E6%8E%A7" target="_blank" rel="noopener">管理和监控</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3" target="_blank" rel="noopener">项目相关</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">设计模式</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#web" target="_blank" rel="noopener">Web</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E5%A4%A7%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener">大数据</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF" target="_blank" rel="noopener">编程艺术</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E5%85%B6%E5%AE%83" target="_blank" rel="noopener">其它</a></li></ul></li><li><p><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3%E7%B1%BB" target="_blank" rel="noopener">语言相关类</a></p><ul><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#android" target="_blank" rel="noopener">Android</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#app" target="_blank" rel="noopener">APP</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#awk" target="_blank" rel="noopener">AWK</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#cc" target="_blank" rel="noopener">C/C++</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#c" target="_blank" rel="noopener">C#</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#clojure" target="_blank" rel="noopener">Clojure</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#csshtml" target="_blank" rel="noopener">CSS/HTML</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#dart" target="_blank" rel="noopener">Dart</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#elixir" target="_blank" rel="noopener">Elixir</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#erlang" target="_blank" rel="noopener">Erlang</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#fortran" target="_blank" rel="noopener">Fortran</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#go" target="_blank" rel="noopener">Go</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#groovy" target="_blank" rel="noopener">Groovy</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#haskell" target="_blank" rel="noopener">Haskell</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#ios" target="_blank" rel="noopener">iOS</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#java" target="_blank" rel="noopener">Java</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#javascript" target="_blank" rel="noopener">JavaScript</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#latex" target="_blank" rel="noopener">LaTeX</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#lisp" target="_blank" rel="noopener">LISP</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#lua" target="_blank" rel="noopener">Lua</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#OCaml" target="_blank" rel="noopener">OCaml</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#perl" target="_blank" rel="noopener">Perl</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#php" target="_blank" rel="noopener">PHP</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#prolog" target="_blank" rel="noopener">Prolog</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#python" target="_blank" rel="noopener">Python</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#r" target="_blank" rel="noopener">R</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#ruby" target="_blank" rel="noopener">Ruby</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#rust" target="_blank" rel="noopener">Rust</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#scala" target="_blank" rel="noopener">Scala</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#shell" target="_blank" rel="noopener">Shell</a></li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN#swift" target="_blank" rel="noopener">Swift</a></li></ul></li><li><p><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%8F%8A%E5%85%B6%E5%AE%83" target="_blank" rel="noopener">读书笔记及其它</a></p></li><li><p><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3" target="_blank" rel="noopener">测试相关</a></p></li></ul><h2 id="置顶"><a href="#置顶" class="headerlink" title="置顶"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%BD%AE%E9%A1%B6" target="_blank" rel="noopener"></a>置顶</h2><ul><li><a href="https://shenbao.github.io/2017/04/22/justjavac-live/" target="_blank" rel="noopener">[笔记]前端工程师的入门与进阶</a> </li><li><a href="https://github.com/i5ting/How-to-learn-node-correctly" target="_blank" rel="noopener">[全文]如何正确的学习 Node.js</a> <h2 id="语言无关类"><a href="#语言无关类" class="headerlink" title="语言无关类"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AF%AD%E8%A8%80%E6%97%A0%E5%85%B3%E7%B1%BB" target="_blank" rel="noopener"></a>语言无关类</h2></li></ul><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener"></a>操作系统</h3><ul><li><a href="http://i.linuxtoy.org/docs/guide/index.html" target="_blank" rel="noopener">开源世界旅行手册</a></li><li><a href="http://vbird.dic.ksu.edu.tw/" target="_blank" rel="noopener">鸟哥的Linux私房菜</a></li><li><a href="http://billie66.github.io/TLCL/index.html" target="_blank" rel="noopener">The Linux Command Line</a> (中英文版)</li><li><a href="http://oss.org.cn/kernel-book/ldd3/index.html" target="_blank" rel="noopener">Linux 设备驱动</a> (第三版)</li><li><a href="http://www.kerneltravel.net/kernel-book/%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90Linux%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81.html" target="_blank" rel="noopener">深入分析Linux内核源码</a></li><li><a href="http://cb.vu/unixtoolbox_zh_CN.xhtml" target="_blank" rel="noopener">UNIX TOOLBOX</a></li><li><a href="https://github.com/widuu/chinese_docker" target="_blank" rel="noopener">Docker中文指南</a></li><li><a href="https://github.com/yeasy/docker_practice" target="_blank" rel="noopener">Docker —— 从入门到实践</a></li><li><a href="http://yuedu.baidu.com/ebook/d817967416fc700abb68fca1" target="_blank" rel="noopener">Docker入门实战</a></li><li><a href="https://github.com/wsargent/docker-cheat-sheet/tree/master/zh-cn#docker-cheat-sheet" target="_blank" rel="noopener">Docker Cheat Sheet</a></li><li><a href="http://freeradius.akagi201.org/" target="_blank" rel="noopener">FreeRADIUS新手入门</a></li><li><a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/" target="_blank" rel="noopener">Mac 开发配置手册</a></li><li><a href="https://www.freebsd.org/doc/zh_CN/books/handbook/index.html" target="_blank" rel="noopener">FreeBSD 使用手册</a></li><li><a href="http://billie66.github.io/TLCL/book/" target="_blank" rel="noopener">Linux 命令行(中文版)</a></li><li><a href="http://works.jinbuguo.com/lfs/lfs62/index.html" target="_blank" rel="noopener">Linux 构建指南</a></li><li><a href="https://github.com/me115/linuxtools_rst" target="_blank" rel="noopener">Linux工具快速教程</a></li><li><a href="https://www.gitbook.com/book/tinylab/linux-doc/details" target="_blank" rel="noopener">Linux Documentation (中文版)</a></li><li><a href="https://www.gitbook.com/book/tinylab/elinux/details" target="_blank" rel="noopener">嵌入式 Linux 知识库 (eLinux.org 中文版)</a></li><li><a href="https://github.com/tobegit3hub/understand_linux_process" target="_blank" rel="noopener">理解Linux进程</a></li><li><a href="https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md" target="_blank" rel="noopener">命令行的艺术</a></li><li><a href="https://spacewander.gitbooks.io/systemtapbeginnersguide_zh/content/index.html" target="_blank" rel="noopener">SystemTap新手指南</a></li><li><a href="https://github.com/wizardforcel/think-os-zh" target="_blank" rel="noopener">操作系统思考</a></li></ul><h4 id="智能系统"><a href="#智能系统" class="headerlink" title="智能系统"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E6%99%BA%E8%83%BD%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener"></a>智能系统</h4><ul><li><a href="https://github.com/phodal/designiot" target="_blank" rel="noopener">一步步搭建物联网系统</a></li></ul><h3 id="分布式系统"><a href="#分布式系统" class="headerlink" title="分布式系统"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener"></a>分布式系统</h3><ul><li><a href="http://dcaoyuan.github.io/papers/pdfs/Scalability.pdf" target="_blank" rel="noopener">走向分布式</a></li></ul><h3 id="编译原理"><a href="#编译原理" class="headerlink" title="编译原理"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86" target="_blank" rel="noopener"></a>编译原理</h3><ul><li><a href="https://github.com/DeathKing/Learning-SICP" target="_blank" rel="noopener">《计算机程序的结构和解释》公开课 翻译项目</a></li></ul><h3 id="函数式概念"><a href="#函数式概念" class="headerlink" title="函数式概念"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E5%87%BD%E6%95%B0%E5%BC%8F%E6%A6%82%E5%BF%B5" target="_blank" rel="noopener"></a>函数式概念</h3><ul><li><a href="https://github.com/justinyhuang/Functional-Programming-For-The-Rest-of-Us-Cn" target="_blank" rel="noopener">傻瓜函数编程</a></li></ul><h3 id="计算机图形学"><a href="#计算机图形学" class="headerlink" title="计算机图形学"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6" target="_blank" rel="noopener"></a>计算机图形学</h3><ul><li><a href="https://github.com/zilongshanren/opengl-tutorials" target="_blank" rel="noopener">OpenGL 教程</a></li><li><a href="http://html5.iii.org.tw/course/webgl/" target="_blank" rel="noopener">WebGL自学网</a></li></ul><h3 id="WEB服务器"><a href="#WEB服务器" class="headerlink" title="WEB服务器"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#web%E6%9C%8D%E5%8A%A1%E5%99%A8" target="_blank" rel="noopener"></a>WEB服务器</h3><ul><li><a href="http://tengine.taobao.org/book/index.html" target="_blank" rel="noopener">Nginx开发从入门到精通</a> (淘宝团队出品)</li><li><a href="http://www.ttlsa.com/nginx/nginx-stu-pdf/" target="_blank" rel="noopener">Nginx教程从入门到精通</a>(PDF版本，运维生存时间出品)</li><li><a href="https://www.gitbook.com/book/moonbingbing/openresty-best-practices/details" target="_blank" rel="noopener">OpenResty最佳实践</a></li><li><a href="http://works.jinbuguo.com/apache/menu22/index.html" target="_blank" rel="noopener">Apache 中文手册</a></li></ul><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6" target="_blank" rel="noopener"></a>版本控制</h3><ul><li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程</a> （本文由 <a href="http://www.liaoxuefeng.com/" target="_blank" rel="noopener">廖雪峰</a> 创作，如果觉得本教程对您有帮助，可以去 <a href="https://itunes.apple.com/cn/app/git-jiao-cheng/id876420437" target="_blank" rel="noopener">iTunes</a> 购买）</li><li><a href="http://rogerdudler.github.io/git-guide/index.zh.html" target="_blank" rel="noopener">git - 简易指南</a></li><li><a href="http://backlogtool.com/git-guide/cn/" target="_blank" rel="noopener">猴子都能懂的GIT入门</a></li><li><a href="http://gitref.justjavac.com/" target="_blank" rel="noopener">Git 参考手册</a></li><li><a href="http://git-scm.com/book/zh/v2" target="_blank" rel="noopener">Pro Git</a></li><li><a href="https://www.gitbook.com/book/0532/progit/details" target="_blank" rel="noopener">Pro Git 中文版</a> (整理在gitbook上)</li><li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/" target="_blank" rel="noopener">Git Magic</a></li><li><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="noopener">GotGitHub</a></li><li><a href="http://www.worldhello.net/gotgit/" target="_blank" rel="noopener">Git权威指南</a></li><li><a href="http://gitbook.liuhui998.com/index.html" target="_blank" rel="noopener">Git Community Book 中文版</a></li><li><a href="https://www.mercurial-scm.org/wiki/ChineseTutorial" target="_blank" rel="noopener">Mercurial 使用教程</a></li><li><a href="http://bucunzai.net/hginit/" target="_blank" rel="noopener">HgInit (中文版)</a></li><li><a href="http://igit.linuxtoy.org/" target="_blank" rel="noopener">沉浸式学 Git</a></li><li><a href="https://github.com/flyhigher139/Git-Cheat-Sheet" target="_blank" rel="noopener">Git-Cheat-Sheet</a> （感谢 @flyhigher139 翻译了中文版）</li><li><a href="https://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/index.html" target="_blank" rel="noopener">GitHub秘籍</a></li><li><a href="https://github.com/waylau/github-help" target="_blank" rel="noopener">GitHub帮助文档</a></li><li><a href="http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html" target="_blank" rel="noopener">git-flow 备忘清单</a></li><li><a href="http://svnbook.red-bean.com/nightly/zh/index.html" target="_blank" rel="noopener">svn 手册</a></li><li><a href="https://github.com/phodal/github-roam" target="_blank" rel="noopener">GitHub漫游指南</a></li></ul><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%BC%96%E8%BE%91%E5%99%A8" target="_blank" rel="noopener"></a>编辑器</h3><ul><li><a href="http://exvim.github.io/docs-zh/intro/" target="_blank" rel="noopener">exvim–vim 改良成IDE项目</a></li><li><a href="http://learnvimscriptthehardway.onefloweroneworld.com/" target="_blank" rel="noopener">笨方法学Vimscript 中译本</a></li><li><a href="https://github.com/vimcn/vimcdoc" target="_blank" rel="noopener">Vim中文文档</a></li><li><a href="https://github.com/yangyangwithgnu/use_vim_as_ide" target="_blank" rel="noopener">所需即所获：像 IDE 一样使用 vim</a></li><li><a href="https://github.com/dofy/learn-vim" target="_blank" rel="noopener">vim 实操教程</a></li><li><a href="https://github.com/wizardforcel/atom-flight-manual-zh-cn" target="_blank" rel="noopener">Atom飞行手册中文版</a></li><li><a href="https://github.com/wizardforcel/markdown-simple-world" target="_blank" rel="noopener">Markdown·简单的世界</a></li><li><a href="https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org" target="_blank" rel="noopener">一年成为 Emacs 高手</a></li><li><a href="http://lifegoo.pluskid.org/upload/blog/152/Survive.in.Emacs.pdf" target="_blank" rel="noopener">Emacs 生存指南</a></li><li><a href="https://atom-china.org/t/atom/62" target="_blank" rel="noopener">Atom官方手册</a></li></ul><h3 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#nosql" target="_blank" rel="noopener"></a>NoSQL</h3><ul><li><a href="http://old.sebug.net/paper/databases/nosql/Nosql.html" target="_blank" rel="noopener">NoSQL数据库笔谈</a></li><li><a href="http://redisbook.com/" target="_blank" rel="noopener">Redis 设计与实现</a></li><li><a href="http://redisdoc.com/" target="_blank" rel="noopener">Redis 命令参考</a></li><li><a href="https://github.com/huangz1990/redis-3.0-annotated" target="_blank" rel="noopener">带有详细注释的 Redis 3.0 代码</a></li><li><a href="https://github.com/huangz1990/annotated_redis_source" target="_blank" rel="noopener">带有详细注释的 Redis 2.6 代码</a></li><li><a href="https://github.com/justinyhuang/the-little-mongodb-book-cn/blob/master/mongodb.md" target="_blank" rel="noopener">The Little MongoDB Book</a></li><li><a href="https://github.com/JasonLai256/the-little-redis-book/blob/master/cn/redis.md" target="_blank" rel="noopener">The Little Redis Book</a></li><li><a href="http://docs.neo4j.org.cn/" target="_blank" rel="noopener">Neo4j 简体中文手册 v1.8</a></li><li><a href="http://neo4j.tw/" target="_blank" rel="noopener">Neo4j .rb 中文資源</a></li><li><a href="http://disquebook.com/" target="_blank" rel="noopener">Disque 使用教程</a></li><li><a href="https://github.com/JerryLead/SparkInternals/tree/master/markdown" target="_blank" rel="noopener">Apache Spark 设计与实现</a></li></ul><h3 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#postgresql" target="_blank" rel="noopener"></a>PostgreSQL</h3><ul><li><a href="http://works.jinbuguo.com/postgresql/menu823/index.html" target="_blank" rel="noopener">PostgreSQL 8.2.3 中文文档</a></li><li><a href="http://www.postgres.cn/docs/9.3/index.html" target="_blank" rel="noopener">PostgreSQL 9.3.1 中文文档</a></li><li><a href="http://www.postgres.cn/docs/9.5/index.html" target="_blank" rel="noopener">PostgreSQL 9.5.3 中文文档</a></li></ul><h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#mysql" target="_blank" rel="noopener"></a>MySQL</h3><ul><li><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html" target="_blank" rel="noopener">MySQL索引背后的数据结构及算法原理</a></li><li><a href="http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html" target="_blank" rel="noopener">21分钟MySQL入门教程</a></li></ul><h3 id="管理和监控"><a href="#管理和监控" class="headerlink" title="管理和监控"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%AE%A1%E7%90%86%E5%92%8C%E7%9B%91%E6%8E%A7" target="_blank" rel="noopener"></a>管理和监控</h3><ul><li><a href="http://kibana.logstash.es/" target="_blank" rel="noopener">ELKstack 中文指南</a></li><li><a href="http://udn.yyuap.com/doc/mastering-elasticsearch/" target="_blank" rel="noopener">Mastering Elasticsearch(中文版)</a></li><li><a href="https://www.gitbook.com/book/fuxiaopang/learnelasticsearch/details" target="_blank" rel="noopener">ElasticSearch 权威指南</a></li><li><a href="http://es.xiaoleilu.com/" target="_blank" rel="noopener">Elasticsearch 权威指南（中文版）</a></li><li><a href="https://github.com/chenryn/logstash-best-practice-cn" target="_blank" rel="noopener">Logstash 最佳实践</a></li><li><a href="http://bbs.konotes.org/workdoc/puppet-27/" target="_blank" rel="noopener">Puppet 2.7 Cookbook 中文版</a></li></ul><h3 id="项目相关"><a href="#项目相关" class="headerlink" title="项目相关"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3" target="_blank" rel="noopener"></a>项目相关</h3><ul><li><a href="http://article.yeeyan.org/view/2251/94882" target="_blank" rel="noopener">持续集成（第二版）</a> (译言网)</li><li><a href="http://www.ibm.com/developerworks/cn/java/j-ap/" target="_blank" rel="noopener">让开发自动化系列专栏</a></li><li><a href="http://www.ibm.com/developerworks/cn/java/j-cq/" target="_blank" rel="noopener">追求代码质量</a></li><li><a href="https://github.com/fool2fish/selenium-doc" target="_blank" rel="noopener">selenium 中文文档</a></li><li><a href="http://it-ebooks.flygon.net/selenium-simple-tutorial/" target="_blank" rel="noopener">Selenium Webdriver 简易教程</a></li><li><a href="http://local.joelonsoftware.com/wiki/Chinese_(Simplified" target="_blank" rel="noopener">Joel谈软件</a>)</li><li><a href="http://local.joelonsoftware.com/wiki/%E9%A6%96%E9%A0%81" target="_blank" rel="noopener">約耳談軟體(Joel on Software)</a></li><li><a href="https://github.com/waylau/Gradle-2-User-Guide" target="_blank" rel="noopener">Gradle 2 用户指南</a></li><li><a href="http://yuedu.baidu.com/ebook/f23af265998fcc22bcd10da2" target="_blank" rel="noopener">Gradle 中文使用文档</a></li><li><a href="https://github.com/ecomfe/spec" target="_blank" rel="noopener">编码规范</a></li><li><a href="http://www.ituring.com.cn/book/1143" target="_blank" rel="noopener">开源软件架构</a></li><li><a href="http://docs.huihoo.com/gnu/linux/gmake.html" target="_blank" rel="noopener">GNU make 指南</a></li><li><a href="http://www.yayu.org/book/gnu_make/" target="_blank" rel="noopener">GNU make 中文手册</a></li><li><a href="http://12factor.net/zh_cn/" target="_blank" rel="noopener">The Twelve-Factor App</a></li></ul><h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener"></a>设计模式</h3><ul><li><a href="https://github.com/me115/design_patterns" target="_blank" rel="noopener">图说设计模式</a></li><li><a href="http://blog.csdn.net/lovelion/article/details/17517213" target="_blank" rel="noopener">史上最全设计模式导学目录</a></li><li><a href="https://github.com/AlfredTheBest/Design-Pattern" target="_blank" rel="noopener">design pattern 包教不包会</a></li><li><a href="https://quanke.gitbooks.io/design-pattern-java/content/" target="_blank" rel="noopener">设计模式 Java 版</a></li></ul><h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#web" target="_blank" rel="noopener"></a>Web</h3><ul><li><a href="http://www.20thingsilearned.com/zh-CN/home" target="_blank" rel="noopener">关于浏览器和网络的 20 项须知</a></li><li><a href="http://jinlong.github.io/2013/08/29/devtoolsecrets/" target="_blank" rel="noopener">浏览器开发工具的秘密</a></li><li><a href="https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools" target="_blank" rel="noopener">Chrome 开发者工具中文手册</a></li><li><a href="http://open.chrome.360.cn/extension_dev/overview.html" target="_blank" rel="noopener">Chrome扩展开发文档</a></li><li><a href="http://www.gruntjs.net/" target="_blank" rel="noopener">Grunt中文文档</a></li><li><a href="http://www.gulpjs.com.cn/docs/" target="_blank" rel="noopener">gulp中文文档</a></li><li><a href="https://github.com/nimojs/gulp-book" target="_blank" rel="noopener">Gulp 入门指南</a></li><li><a href="https://github.com/AlloyTeam/Mars" target="_blank" rel="noopener">移动Web前端知识库</a></li><li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式30分钟入门教程</a></li><li><a href="https://github.com/fouber/blog/issues/2" target="_blank" rel="noopener">前端开发体系建设日记</a></li><li><a href="https://github.com/hoosin/mobile-web-favorites" target="_blank" rel="noopener">移动前端开发收藏夹</a></li><li><a href="https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md" target="_blank" rel="noopener">JSON风格指南</a></li><li><a href="https://github.com/bolasblack/http-api-guide" target="_blank" rel="noopener">HTTP 接口设计指北</a></li><li><a href="https://github.com/hacke2/hacke2.github.io/issues/1" target="_blank" rel="noopener">前端资源分享（一）</a></li><li><a href="https://github.com/hacke2/hacke2.github.io/issues/3" target="_blank" rel="noopener">前端资源分享（二）</a></li><li><a href="http://coderlmn.github.io/code-standards/" target="_blank" rel="noopener">前端代码规范 及 最佳实践</a></li><li><a href="https://www.gitbook.com/book/dwqs/frontenddevhandbook/details" target="_blank" rel="noopener">前端开发者手册</a></li><li><a href="https://www.gitbook.com/book/leohxj/front-end-database/details" target="_blank" rel="noopener">前端工程师手册</a></li><li><a href="https://github.com/wizardforcel/w3school" target="_blank" rel="noopener">w3school教程整理</a></li><li><a href="http://man.lupaworld.com/content/network/wireshark/index.html" target="_blank" rel="noopener">Wireshark用户手册</a></li><li><a href="https://community.emc.com/thread/194901" target="_blank" rel="noopener">一站式学习Wireshark</a></li><li><a href="https://ccbikai.gitbooks.io/http-book/content/" target="_blank" rel="noopener">HTTP 下午茶</a></li><li><a href="http://yuedu.baidu.com/ebook/478d1a62376baf1ffc4fad99?pn=1" target="_blank" rel="noopener">HTTP/2.0 中文翻译</a></li><li><a href="https://github.com/abbshr/rfc7540-translation-zh_cn" target="_blank" rel="noopener">RFC 7540 - HTTP/2 中文翻译版</a></li><li><a href="https://www.gitbook.com/book/ye11ow/http2-explained/details" target="_blank" rel="noopener">http2讲解</a></li><li><a href="https://www.gitbook.com/book/juntao/3-web-designs-in-3-weeks/details" target="_blank" rel="noopener">3 Web Designs in 3 Weeks</a></li><li><a href="https://github.com/hellorocky/Site-Reliability-Engineering" target="_blank" rel="noopener">站点可靠性工程</a></li></ul><h3 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E5%A4%A7%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener"></a>大数据</h3><ul><li><a href="https://github.com/Flowerowl/Big-Data-Resources" target="_blank" rel="noopener">大数据/数据挖掘/推荐系统/机器学习相关资源</a></li><li><a href="https://github.com/egrcc/guidetodatamining" target="_blank" rel="noopener">面向程序员的数据挖掘指南</a></li><li><a href="https://code.csdn.net/CODE_Translation/spark_matei_phd" target="_blank" rel="noopener">大型集群上的快速和通用数据处理架构</a></li><li><a href="https://github.com/linyiqun/DataMiningAlgorithm" target="_blank" rel="noopener">数据挖掘中经典的算法实现和详细的注释</a></li><li><a href="https://aiyanbo.gitbooks.io/spark-programming-guide-zh-cn/content/" target="_blank" rel="noopener">Spark 编程指南简体中文版</a></li></ul><h2 id="编程艺术"><a href="#编程艺术" class="headerlink" title="编程艺术"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF" target="_blank" rel="noopener"></a>编程艺术</h2><ul><li><a href="https://github.com/julycoding/The-Art-Of-Programming-by-July" target="_blank" rel="noopener">程序员编程艺术</a></li><li><a href="http://www.oschina.net/translate/what-every-programmer-should-know-about-memory-part1?print" target="_blank" rel="noopener">每个程序员都应该了解的内存知识(译)</a>【第一部分】</li><li><a href="http://read.douban.com/ebook/4972883/" target="_blank" rel="noopener">取悦的工序：如何理解游戏</a> (豆瓣阅读，免费书籍)</li></ul><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E5%85%B6%E5%AE%83" target="_blank" rel="noopener"></a>其它</h2><ul><li><a href="https://www.gitbook.com/book/softwaredownload/openwrt-fanqiang/details" target="_blank" rel="noopener">OpenWrt智能、自动、透明翻墙路由器教程</a></li><li><a href="https://community.emc.com/docs/DOC-16067" target="_blank" rel="noopener">SAN 管理入门系列</a></li><li><a href="http://sketchcn.com/sketch-chinese-user-manual.html#introduce" target="_blank" rel="noopener">Sketch 中文手册</a></li><li><a href="http://ifeve.com/perfbook/" target="_blank" rel="noopener">深入理解并行编程</a></li><li><a href="http://www.kancloud.cn/kancloud/a-programmer-prepares" target="_blank" rel="noopener">程序员的自我修养</a></li><li><a href="https://github.com/phodal/growth-ebook" target="_blank" rel="noopener">Growth: 全栈增长工程师指南</a></li></ul><h2 id="语言相关类"><a href="#语言相关类" class="headerlink" title="语言相关类"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3%E7%B1%BB" target="_blank" rel="noopener"></a>语言相关类</h2><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#android" target="_blank" rel="noopener"></a>Android</h3><ul><li><a href="http://www.apkbus.com/design/index.html" target="_blank" rel="noopener">Android Design(中文版)</a></li><li>Google Material Design 正體中文版 (<a href="https://wcc723.gitbooks.io/google_design_translate/content/style-icons.html" target="_blank" rel="noopener">译本一</a> <a href="https://github.com/1sters/material_design_zh" target="_blank" rel="noopener">译本二</a>)</li><li><a href="http://wiki.jikexueyuan.com/project/material-design/" target="_blank" rel="noopener">Material Design 中文版</a></li><li><a href="http://hukai.me/android-training-course-in-chinese/index.html" target="_blank" rel="noopener">Google Android官方培训课程中文版</a></li><li><a href="http://www.stormzhang.com/android/2014/07/07/learn-android-from-rookie/" target="_blank" rel="noopener">Android学习之路</a></li><li><a href="https://github.com/bboyfeiyu/android-tech-frontier" target="_blank" rel="noopener">Android开发技术前线(android-tech-frontier)</a></li><li><a href="https://github.com/FX-Max/Point-of-Android" target="_blank" rel="noopener">Point-of-Android</a> Android 一些重要知识点解析整理</li><li><a href="http://leanote.com/blog/post/561658f938f41126b2000298?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="noopener">Android6.0新特性详解</a></li></ul><h3 id="APP"><a href="#APP" class="headerlink" title="APP"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#app" target="_blank" rel="noopener"></a>APP</h3><ul><li><a href="https://github.com/waylau/cordova-dev-guide" target="_blank" rel="noopener">Apache Cordova 开发指南</a></li></ul><h3 id="AWK"><a href="#AWK" class="headerlink" title="AWK"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#awk" target="_blank" rel="noopener"></a>AWK</h3><ul><li><a href="https://github.com/wuzhouhui/awk" target="_blank" rel="noopener">awk程序设计语言</a></li><li><a href="http://awk.readthedocs.org/en/latest/index.html" target="_blank" rel="noopener">awk中文指南</a></li></ul><h3 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#cc" target="_blank" rel="noopener"></a>C/C++</h3><ul><li><a href="http://zh.cppreference.com/" target="_blank" rel="noopener">C/C++ 中文参考手册</a> (欢迎大家参与在线翻译和校对)</li><li><a href="https://www.gitbook.com/book/tinylab/cbook/details" target="_blank" rel="noopener">C 语言编程透视</a></li><li><a href="https://github.com/forhappy/Cplusplus-Concurrency-In-Practice" target="_blank" rel="noopener">C++ 并发编程指南</a></li><li><a href="http://akaedu.github.io/book/" target="_blank" rel="noopener">Linux C编程一站式学习</a> (宋劲杉, 北京亚嵌教育研究中心)</li><li><a href="https://github.com/leeyiw/cgdb-manual-in-chinese" target="_blank" rel="noopener">CGDB中文手册</a></li><li><a href="https://github.com/hellogcc/100-gdb-tips/blob/master/src/index.md" target="_blank" rel="noopener">100个gdb小技巧</a></li><li><a href="https://github.com/hellogcc/100-gcc-tips/blob/master/src/index.md" target="_blank" rel="noopener">100个gcc小技巧</a></li><li><a href="https://github.com/anjuke/zguide-cn" target="_blank" rel="noopener">ZMQ 指南</a></li><li><a href="http://www.ituring.com.cn/book/1203" target="_blank" rel="noopener">How to Think Like a Computer Scientist</a> (中英文版)</li><li><a href="http://scc.qibebt.cas.cn/docs/linux/base/%B8%FA%CE%D2%D2%BB%C6%F0%D0%B4Makefile-%B3%C2%F0%A9.pdf" target="_blank" rel="noopener">跟我一起写Makefile(PDF)</a></li><li><a href="http://www.yayu.org/book/gnu_make/" target="_blank" rel="noopener">GNU make中文手册</a></li><li><a href="http://docs.huihoo.com/gnu/linux/gmake.html" target="_blank" rel="noopener">GNU make 指南</a></li><li><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-cpp-styleguide/contents/" target="_blank" rel="noopener">Google C++ 风格指南</a></li><li><a href="https://github.com/andycai/cprimer" target="_blank" rel="noopener">C/C++ Primer</a> (by @andycai)</li><li><a href="http://www.nowamagic.net/librarys/books/contents/c" target="_blank" rel="noopener">简单易懂的C魔法</a></li><li><a href="http://sewm.pku.edu.cn/src/paradise/reference/CMake%20Practice.pdf" target="_blank" rel="noopener">Cmake 实践</a> (PDF版)</li><li><a href="http://www.sunistudio.com/cppfaq/" target="_blank" rel="noopener">C++ FAQ LITE(中文版)</a></li><li><a href="https://github.com/Mooophy/Cpp-Primer" target="_blank" rel="noopener">C++ Primer 5th Answers</a></li><li><a href="https://www.gitbook.com/book/chenxiaowei/cpp_concurrency_in_action/details" target="_blank" rel="noopener">C++ 并发编程(基于C++11)</a></li><li><a href="http://www.kuqin.com/qtdocument/tutorial.html" target="_blank" rel="noopener">QT 教程</a></li><li><a href="http://www.devbean.net/category/qt-study-road-2/" target="_blank" rel="noopener">DevBean的《Qt学习之路2》(Qt5)</a></li><li><a href="https://github.com/wuye9036/CppTemplateTutorial" target="_blank" rel="noopener">C++ Template 进阶指南</a></li><li><a href="https://github.com/luohaha/Chinese-uvbook" target="_blank" rel="noopener">libuv中文教程</a></li><li><a href="http://zh.highscore.de/cpp/boost/" target="_blank" rel="noopener">Boost 库中文教程</a></li><li><a href="https://github.com/wizardforcel/lcthw-zh" target="_blank" rel="noopener">笨办法学C</a></li></ul><h3 id="C"><a href="#C" class="headerlink" title="C"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#c" target="_blank" rel="noopener"></a>C</h3><ul><li><a href="https://msdn.microsoft.com/zh-cn/library/kx37x362.aspx" target="_blank" rel="noopener">MSDN C# 中文文档</a></li><li><a href="https://msdn.microsoft.com/zh-cn/library/gg145045.aspx" target="_blank" rel="noopener">.NET 类库参考</a></li><li><a href="http://www.cnblogs.com/powertoolsteam/p/aspnetmvc5-tutorials-grapecity.html" target="_blank" rel="noopener">ASP.NET MVC 5 入门指南</a></li><li><a href="http://www.cnblogs.com/LonelyShadow/p/4162318.html" target="_blank" rel="noopener">超全面的 .NET GDI+ 图形图像编程教程</a></li><li><a href="https://github.com/JackWangCUMT/customcontrol" target="_blank" rel="noopener">.NET控件开发基础</a></li><li><a href="https://github.com/sherlockchou86/-free-ebook-.NET-" target="_blank" rel="noopener">.NET开发要点精讲（初稿）</a></li></ul><h3 id="Clojure"><a href="#Clojure" class="headerlink" title="Clojure"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#clojure" target="_blank" rel="noopener"></a>Clojure</h3><ul><li><a href="http://xumingming.sinaapp.com/302/clojure-functional-programming-for-the-jvm-clojure-tutorial/" target="_blank" rel="noopener">Clojure入门教程</a></li></ul><h3 id="CSS-HTML"><a href="#CSS-HTML" class="headerlink" title="CSS/HTML"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#csshtml" target="_blank" rel="noopener"></a>CSS/HTML</h3><ul><li><a href="http://zh.learnlayout.com/" target="_blank" rel="noopener">学习CSS布局</a></li><li><a href="https://github.com/chadluo/CSS-Guidelines/blob/master/README.md" target="_blank" rel="noopener">通用 CSS 笔记、建议与指导</a></li><li><a href="http://css.doyoe.com/" target="_blank" rel="noopener">CSS参考手册</a></li><li><a href="http://yanxyz.github.io/emmet-docs/" target="_blank" rel="noopener">Emmet 文档</a></li><li><a href="http://alloyteam.github.io/CodeGuide/" target="_blank" rel="noopener">前端代码规范</a> (腾讯 AlloyTeam 团队)</li><li><a href="http://codeguide.bootcss.com/" target="_blank" rel="noopener">HTML和CSS编码规范</a></li><li><a href="http://sass-guidelin.es/zh/" target="_blank" rel="noopener">Sass Guidelines 中文</a></li><li><a href="https://github.com/waylau/css3-tutorial" target="_blank" rel="noopener">CSS3 Tutorial 《CSS3 教程》</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML" target="_blank" rel="noopener">MDN HTML 中文文档</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS" target="_blank" rel="noopener">MDN CSS 中文文档</a></li></ul><h3 id="Dart"><a href="#Dart" class="headerlink" title="Dart"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#dart" target="_blank" rel="noopener"></a>Dart</h3><ul><li><a href="http://dart.lidian.info/wiki/Language_Tour" target="_blank" rel="noopener">Dart 语言导览</a></li></ul><h3 id="Elixir"><a href="#Elixir" class="headerlink" title="Elixir"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#elixir" target="_blank" rel="noopener"></a>Elixir</h3><ul><li><a href="https://github.com/straightdave/programming_elixir" target="_blank" rel="noopener">Elixir编程入门</a></li></ul><h3 id="Erlang"><a href="#Erlang" class="headerlink" title="Erlang"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#erlang" target="_blank" rel="noopener"></a>Erlang</h3><ul><li><a href="http://xn--21erlang-p00o82pmp3o.github.io/" target="_blank" rel="noopener">21天学通Erlang</a></li></ul><h3 id="Fortran"><a href="#Fortran" class="headerlink" title="Fortran"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#fortran" target="_blank" rel="noopener"></a>Fortran</h3><ul><li><a href="http://micro.ustc.edu.cn/Fortran/ZJDing/" target="_blank" rel="noopener">Fortran77和90/95编程入门</a></li></ul><h3 id="Go"><a href="#Go" class="headerlink" title="Go"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#go" target="_blank" rel="noopener"></a>Go</h3><ul><li><a href="https://github.com/Unknwon/go-fundamental-programming" target="_blank" rel="noopener">Go编程基础</a></li><li><a href="https://github.com/Unknwon/the-way-to-go_ZH_CN" target="_blank" rel="noopener">Go入门指南</a></li><li><a href="http://mikespook.com/learning-go/" target="_blank" rel="noopener">学习Go语言</a></li><li><a href="https://github.com/astaxie/build-web-application-with-golang" target="_blank" rel="noopener">Go Web 编程</a> (此书已经出版，希望开发者们去购买，支持作者的创作)</li><li><a href="https://github.com/astaxie/Go-in-Action" target="_blank" rel="noopener">Go实战开发</a> (当我收录此项目时，作者已经写完第三章，如果读完前面章节觉得有帮助，可以给作者<a href="https://me.alipay.com/astaxie" target="_blank" rel="noopener">捐赠</a>，以鼓励作者的继续创作)</li><li><a href="https://github.com/astaxie/NPWG_zh" target="_blank" rel="noopener">Network programming with Go 中文翻译版本</a></li><li><a href="http://www.hellogcc.org/effective_go.html" target="_blank" rel="noopener">Effective Go</a></li><li><a href="https://github.com/polaris1119/The-Golang-Standard-Library-by-Example" target="_blank" rel="noopener">Go 语言标准库</a></li><li><a href="http://godoc.ml/" target="_blank" rel="noopener">Golang标准库文档</a></li><li><a href="http://gorevel.cn/docs/manual/index.html" target="_blank" rel="noopener">Revel 框架手册</a></li><li><a href="http://blog.csdn.net/dc_726/article/details/46565241" target="_blank" rel="noopener">Java程序员的Golang入门指南</a></li><li><a href="https://github.com/hyper-carrot/go_command_tutorial" target="_blank" rel="noopener">Go命令教程</a></li><li><a href="https://github.com/achun/Go-Blog-In-Action" target="_blank" rel="noopener">Go语言博客实践</a></li><li><a href="https://github.com/golang-china/golangdoc.translations" target="_blank" rel="noopener">Go 官方文档翻译</a></li><li><a href="https://github.com/tiancaiamao/go-internals" target="_blank" rel="noopener">深入解析Go</a></li><li><a href="https://bitbucket.org/golang-china/gopl-zh/wiki/Home" target="_blank" rel="noopener">Go语言圣经(中文版)</a> (<a href="https://www.gitbook.com/book/wizardforcel/gopl-zh/details" target="_blank" rel="noopener">GitBook</a>)</li></ul><h3 id="Groovy"><a href="#Groovy" class="headerlink" title="Groovy"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#groovy" target="_blank" rel="noopener"></a>Groovy</h3><ul><li><a href="http://www.ibm.com/developerworks/cn/java/j-pg/" target="_blank" rel="noopener">实战 Groovy 系列</a></li></ul><h3 id="Haskell"><a href="#Haskell" class="headerlink" title="Haskell"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#haskell" target="_blank" rel="noopener"></a>Haskell</h3><ul><li><a href="http://rwh.readthedocs.org/en/latest/" target="_blank" rel="noopener">Real World Haskell 中文版</a></li><li><a href="http://fleurer-lee.com/lyah/" target="_blank" rel="noopener">Haskell趣学指南</a></li></ul><h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#ios" target="_blank" rel="noopener"></a>iOS</h3><ul><li><a href="https://github.com/qinjx/30min_guides/blob/master/ios.md" target="_blank" rel="noopener">iOS开发60分钟入门</a></li><li><a href="http://isux.tencent.com/ios-human-interface-guidelines-ui-design-basics-ios7.html" target="_blank" rel="noopener">iOS7人机界面指南</a></li><li><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-objc-styleguide/" target="_blank" rel="noopener">Google Objective-C Style Guide 中文版</a></li><li><a href="http://wileam.com/iphone-6-screen-cn/" target="_blank" rel="noopener">iPhone 6 屏幕揭秘</a></li><li><a href="http://nilsun.github.io/apple-watch/" target="_blank" rel="noopener">Apple Watch开发初探</a></li><li><a href="https://developer.apple.com/library/ios/referencelibrary/GettingStarted/RoadMapiOSCh/index.html" target="_blank" rel="noopener">马上着手开发 iOS 应用程序</a></li><li><a href="https://github.com/jkyin/Subtitle" target="_blank" rel="noopener">网易斯坦福大学公开课：iOS 7应用开发字幕文件</a></li></ul><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#java" target="_blank" rel="noopener"></a>Java</h3><ul><li><a href="https://github.com/waylau/apache-shiro-1.2.x-reference" target="_blank" rel="noopener">Apache Shiro 用户指南</a></li><li><a href="https://github.com/waylau/Jersey-2.x-User-Guide" target="_blank" rel="noopener">Jersey 2.x 用户指南</a></li><li><a href="https://github.com/waylau/spring-framework-4-reference" target="_blank" rel="noopener">Spring Framework 4.x参考文档</a></li><li><a href="https://github.com/qibaoguang/Spring-Boot-Reference-Guide" target="_blank" rel="noopener">Spring Boot参考指南</a> (翻译中)</li><li><a href="http://mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">MyBatis中文文档</a></li><li><a href="http://mbg.cndocs.tk/" target="_blank" rel="noopener">MyBatis Generator 中文文档</a></li><li><a href="https://github.com/waylau/RestDemo" target="_blank" rel="noopener">用jersey构建REST服务</a></li><li><a href="https://github.com/waylau/activiti-5.x-user-guide" target="_blank" rel="noopener">Activiti 5.x 用户指南</a></li><li><a href="http://www.hawstein.com/posts/google-java-style.html" target="_blank" rel="noopener">Google Java编程风格指南</a></li><li><a href="https://github.com/waylau/netty-4-user-guide" target="_blank" rel="noopener">Netty 4.x 用户指南</a></li><li><a href="https://github.com/waylau/essential-netty-in-action" target="_blank" rel="noopener">Netty 实战(精髓)</a></li><li><a href="https://github.com/waylau/rest-in-action" target="_blank" rel="noopener">REST 实战</a></li><li><a href="https://github.com/waylau/java-code-conventions" target="_blank" rel="noopener">Java 编码规范</a></li><li><a href="https://github.com/waylau/apache-mina-2.x-user-guide" target="_blank" rel="noopener">Apache MINA 2 用户指南</a></li><li><a href="https://github.com/waylau/h2-database-doc" target="_blank" rel="noopener">H2 Database 教程</a></li><li><a href="https://github.com/waylau/servlet-3.1-specification" target="_blank" rel="noopener">Java Servlet 3.1 规范</a></li><li><a href="https://github.com/waylau/jsse-reference-guide" target="_blank" rel="noopener">JSSE 参考指南</a></li><li><a href="https://github.com/biezhi/jb" target="_blank" rel="noopener">Java开源实现及最佳实践</a></li><li><a href="https://github.com/waylau/essential-java" target="_blank" rel="noopener">Java 编程要点</a></li><li><a href="http://www.ituring.com.cn/minibook/69" target="_blank" rel="noopener">Think Java</a></li><li><a href="https://github.com/wizardforcel/modern-java-zh" target="_blank" rel="noopener">Java 8 简明教程</a></li></ul><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#javascript" target="_blank" rel="noopener"></a>JavaScript</h3><ul><li><a href="http://bq69.com/blog/articles/script/868/google-javascript-style-guide.html" target="_blank" rel="noopener">Google JavaScript 代码风格指南</a></li><li><a href="https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md" target="_blank" rel="noopener">Google JSON 风格指南</a></li><li><a href="https://github.com/adamlu/javascript-style-guide" target="_blank" rel="noopener">Airbnb JavaScript 规范</a></li><li><a href="http://javascript.ruanyifeng.com/" target="_blank" rel="noopener">JavaScript 标准参考教程（alpha）</a></li><li><a href="http://pij.robinqu.me/" target="_blank" rel="noopener">Javascript编程指南</a> (<a href="https://github.com/RobinQu/Programing-In-Javascript" target="_blank" rel="noopener">源码</a>)</li><li><a href="https://github.com/justjavac/12-javascript-quirks" target="_blank" rel="noopener">javascript 的 12 个怪癖</a></li><li><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/" target="_blank" rel="noopener">JavaScript 秘密花园</a></li><li><a href="http://icodeit.org/jsccp/" target="_blank" rel="noopener">JavaScript核心概念及实践</a> (PDF) (此书已由人民邮电出版社出版发行，但作者依然免费提供PDF版本，希望开发者们去购买，支持作者)</li><li><a href="https://github.com/jayli/javascript-patterns" target="_blank" rel="noopener">《JavaScript 模式》</a> “JavaScript patterns”中译本</li><li><a href="http://justjavac.com/named-function-expressions-demystified.html" target="_blank" rel="noopener">命名函数表达式探秘</a> (注:原文由<a href="http://www.cn-cuckoo.com/" target="_blank" rel="noopener">为之漫笔</a>翻译，原始地址无法打开，所以此处地址为我博客上的备份)</li><li><a href="http://www.oschina.net/translate/learning-javascript-design-patterns" target="_blank" rel="noopener">学用 JavaScript 设计模式</a> (开源中国)</li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html" target="_blank" rel="noopener">深入理解JavaScript系列</a></li><li><a href="http://yanhaijing.com/es5" target="_blank" rel="noopener">ECMAScript 5.1 中文版</a></li><li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">ECMAScript 6 入门</a> (作者：阮一峰)</li><li><a href="http://liubin.github.io/promises-book/" target="_blank" rel="noopener">JavaScript Promise迷你书</a></li><li><a href="https://github.com/getify/You-Dont-Know-JS" target="_blank" rel="noopener">You-Dont-Know-JS</a> (深入JavaScript语言核心机制的系列图书)</li><li><a href="http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener">JavaScript 教程</a> 廖雪峰</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript" target="_blank" rel="noopener">MDN JavaScript 中文文档</a></li><li>jQuery<ul><li><a href="http://www.cn-cuckoo.com/deconstructed/jquery.html" target="_blank" rel="noopener">jQuery 解构</a></li><li><a href="http://www.nowamagic.net/librarys/books/contents/jquery" target="_blank" rel="noopener">简单易懂的JQuery魔法</a></li><li><a href="http://i5ting.github.io/How-to-write-jQuery-plugin/build/jquery.plugin.html" target="_blank" rel="noopener">How to write jQuery plugin</a></li><li><a href="https://github.com/oneuijs/You-Dont-Need-jQuery/blob/master/README.zh-CN.md" target="_blank" rel="noopener">You Don’t Need jQuery</a></li><li><a href="https://github.com/MeCKodo/forchange" target="_blank" rel="noopener">如何实现一个类jQuery？</a></li></ul></li><li>Node.js<ul><li><a href="http://www.nodebeginner.org/index-zh-cn.html" target="_blank" rel="noopener">Node入门</a></li><li><a href="http://nqdeng.github.io/7-days-nodejs/" target="_blank" rel="noopener">七天学会NodeJS</a></li><li><a href="https://github.com/nodejs-tw/nodejs-wiki-book" target="_blank" rel="noopener">Nodejs Wiki Book</a> (繁体中文)</li><li><a href="http://expressjs.jser.us/" target="_blank" rel="noopener">express.js 中文文档</a></li><li><a href="https://github.com/guo-yu/koa-guide" target="_blank" rel="noopener">koa 中文文档</a></li><li><a href="http://base-n.github.io/koa-generator-examples/" target="_blank" rel="noopener">一起学koa</a></li><li><a href="https://github.com/nswbmw/N-blog" target="_blank" rel="noopener">使用 Express + MongoDB 搭建多人博客</a></li><li><a href="http://javascript.ruanyifeng.com/nodejs/express.html" target="_blank" rel="noopener">Express框架</a></li><li><a href="https://github.com/alsotang/node-lessons" target="_blank" rel="noopener">Node.js 包教不包会</a></li><li><a href="https://www.npmjs.com/package/learnyounode-zh-cn" target="_blank" rel="noopener">Learn You The Node.js For Much Win! (中文版)</a></li><li><a href="http://i5ting.github.io/node-debug-tutorial/" target="_blank" rel="noopener">Node debug 三法三例</a></li><li><a href="https://www.gitbook.com/book/0532/nodejs/details" target="_blank" rel="noopener">nodejs中文文档</a></li><li><a href="https://github.com/wizardforcel/orm2-doc-zh-cn" target="_blank" rel="noopener">orm2 中文文档</a></li></ul></li><li>underscore.js<ul><li><a href="http://learningcn.com/underscore/" target="_blank" rel="noopener">Underscore.js中文文档</a></li></ul></li><li>backbone.js<ul><li><a href="http://www.css88.com/doc/backbone/" target="_blank" rel="noopener">backbone.js中文文档</a></li><li><a href="http://www.the5fire.com/backbone-js-tutorials-pdf-download.html" target="_blank" rel="noopener">backbone.js入门教程</a> (PDF)</li><li><a href="https://github.com/the5fire/backbonejs-learning-note" target="_blank" rel="noopener">Backbone.js入门教程第二版</a></li><li><a href="http://feliving.github.io/developing-backbone-applications/" target="_blank" rel="noopener">Developing Backbone.js Applications(中文版)</a></li></ul></li><li>AngularJS<ul><li><a href="https://github.com/mgechev/angularjs-style-guide/blob/master/README-zh-cn.md" target="_blank" rel="noopener">AngularJS最佳实践和风格指南</a></li><li><a href="https://github.com/peiransun/angularjs-cn" target="_blank" rel="noopener">AngularJS中译本</a></li><li><a href="https://github.com/zensh/AngularjsTutorial_cn" target="_blank" rel="noopener">AngularJS入门教程</a></li><li><a href="https://github.com/xufei/Make-Your-Own-AngularJS/blob/master/01.md" target="_blank" rel="noopener">构建自己的AngularJS</a></li><li><a href="http://www.waylau.com/build-angularjs-app-with-yeoman-in-windows/" target="_blank" rel="noopener">在Windows环境下用Yeoman构建AngularJS项目</a></li></ul></li><li>Zepto.js<ul><li><a href="http://mweb.baidu.com/zeptoapi/" target="_blank" rel="noopener">Zepto.js 中文文档</a></li></ul></li><li>Sea.js<ul><li><a href="http://island205.com/HelloSea.js/" target="_blank" rel="noopener">Hello Sea.js</a></li></ul></li><li>React.js<ul><li><a href="https://doc.react-china.org/" target="_blank" rel="noopener">React.js 中文文档</a></li><li><a href="https://github.com/fakefish/react-webpack-cookbook" target="_blank" rel="noopener">React webpack-cookbook</a></li><li><a href="http://fraserxu.me/intro-to-react/" target="_blank" rel="noopener">React 入门教程</a></li><li><a href="http://wiki.jikexueyuan.com/project/react-native/" target="_blank" rel="noopener">React Native 中文文档(含最新Android内容)</a></li><li><a href="https://github.com/theJian/build-a-hn-front-page" target="_blank" rel="noopener">Learn React &amp; Webpack by building the Hacker News front page</a></li></ul></li><li>impress.js<ul><li><a href="https://github.com/kokdemo/impress.js-tutorial-in-Chinese" target="_blank" rel="noopener">impress.js的中文教程</a></li></ul></li><li>CoffeeScript<ul><li><a href="http://island205.com/coffeescript-cookbook.github.com/" target="_blank" rel="noopener">CoffeeScript Cookbook</a></li><li><a href="http://island205.com/tlboc/" target="_blank" rel="noopener">The Little Book on CoffeeScript中文版</a></li><li><a href="https://github.com/geekplux/coffeescript-style-guide" target="_blank" rel="noopener">CoffeeScript 编码风格指南</a></li></ul></li><li>TypeScipt<ul><li><a href="https://zhongsp.gitbooks.io/typescript-handbook/content/" target="_blank" rel="noopener">TypeScript Handbook</a></li></ul></li><li>ExtJS<ul><li><a href="http://extjs-doc-cn.github.io/ext4api/" target="_blank" rel="noopener">Ext4.1.0 中文文档</a></li></ul></li><li>Meteor<ul><li><a href="http://zh.discovermeteor.com/" target="_blank" rel="noopener">Discover Meteor</a></li><li><a href="http://docs.meteorhub.org/#/basic/" target="_blank" rel="noopener">Meteor 中文文档</a></li><li><a href="http://angular.meteorhub.org/" target="_blank" rel="noopener">Angular-Meteor 中文教程</a></li></ul></li><li><a href="http://www.ituring.com.cn/minibook/950" target="_blank" rel="noopener">Chrome扩展及应用开发</a></li></ul><h3 id="LaTeX"><a href="#LaTeX" class="headerlink" title="LaTeX"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#latex" target="_blank" rel="noopener"></a>LaTeX</h3><ul><li><a href="http://liam0205.me/2014/09/08/latex-introduction/" target="_blank" rel="noopener">一份其实很短的 LaTeX 入门文档</a></li><li><a href="http://www.mohu.org/info/lshort-cn.pdf" target="_blank" rel="noopener">一份不太简短的 LATEX 2ε 介绍</a> （PDF版）</li></ul><h3 id="LISP"><a href="#LISP" class="headerlink" title="LISP"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#lisp" target="_blank" rel="noopener"></a>LISP</h3><ul><li>Common Lisp<ul><li><a href="http://acl.readthedocs.org/en/latest/" target="_blank" rel="noopener">ANSI Common Lisp 中文翻譯版</a></li><li><a href="http://www.ituring.com.cn/minibook/862" target="_blank" rel="noopener">On Lisp 中文翻译版本</a></li></ul></li><li>Scheme<ul><li><a href="http://deathking.github.io/yast-cn/" target="_blank" rel="noopener">Yet Another Scheme Tutorial Scheme入门教程</a></li><li><a href="http://songjinghe.github.io/TYS-zh-translation/" target="_blank" rel="noopener">Scheme语言简明教程</a></li><li>Racket<ul><li><a href="https://github.com/tyrchen/racket-book" target="_blank" rel="noopener">Racket book</a></li></ul></li></ul></li></ul><h3 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#lua" target="_blank" rel="noopener"></a>Lua</h3><ul><li><a href="https://github.com/andycai/luaprimer" target="_blank" rel="noopener">Lua编程入门</a></li><li><a href="http://www.codingnow.com/2000/download/lua_manual.html" target="_blank" rel="noopener">Lua 5.1 参考手册 中文翻译</a></li><li><a href="http://cloudwu.github.io/lua53doc/" target="_blank" rel="noopener">Lua 5.3 参考手册 中文翻译</a></li><li><a href="http://www.codingnow.com/temp/readinglua.pdf" target="_blank" rel="noopener">Lua源码欣赏</a></li></ul><h3 id="OCaml"><a href="#OCaml" class="headerlink" title="OCaml"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#ocaml" target="_blank" rel="noopener"></a>OCaml</h3><ul><li><a href="https://github.com/zforget/translation/tree/master/real_world_ocaml" target="_blank" rel="noopener">Real World OCaml</a></li></ul><h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#perl" target="_blank" rel="noopener"></a>Perl</h3><ul><li><a href="https://github.com/horus/modern_perl_book" target="_blank" rel="noopener">Modern Perl 中文版</a></li><li><a href="http://perl.linuxtoy.org/" target="_blank" rel="noopener">Perl 程序员应该知道的事</a></li></ul><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#php" target="_blank" rel="noopener"></a>PHP</h3><ul><li><a href="http://php.net/manual/zh/" target="_blank" rel="noopener">PHP 官方手册</a></li><li><a href="http://www.laruence.com/2010/06/21/1608.html" target="_blank" rel="noopener">PHP调试技术手册</a>(PDF)</li><li>PHP之道：php-the-right-way (<a href="http://wulijun.github.io/php-the-right-way/" target="_blank" rel="noopener">@wulijun版</a> <a href="http://laravel-china.github.io/php-the-right-way/" target="_blank" rel="noopener">PHPHub版</a>)</li><li><a href="https://github.com/justjavac/PHP-Best-Practices-zh_CN" target="_blank" rel="noopener">PHP 最佳实践</a></li><li><a href="https://ryancao.gitbooks.io/php-developer-prepares/content/" target="_blank" rel="noopener">PHP 开发者实践</a></li><li><a href="https://github.com/reeze/tipi" target="_blank" rel="noopener">深入理解PHP内核</a></li><li><a href="http://www.walu.cc/phpbook/" target="_blank" rel="noopener">PHP扩展开发及内核应用</a></li><li><a href="http://laravel-china.org/docs/5.1" target="_blank" rel="noopener">Laravel5.1 中文文档</a></li><li><a href="https://cs.phphub.org/" target="_blank" rel="noopener">Laravel 5.1 LTS 速查表</a></li><li><a href="http://wiki.jikexueyuan.com/project/symfony-cookbook/" target="_blank" rel="noopener">Symfony2 Cookbook 中文版</a>(版本 2.7.0 LTS)</li><li><a href="http://symfony-docs-chs.readthedocs.org/en/latest/" target="_blank" rel="noopener">Symfony2中文文档</a> (未译完)</li><li><a href="http://yiibook.com//doc" target="_blank" rel="noopener">YiiBook几本Yii框架的在线教程</a></li><li><a href="http://www.digpage.com/" target="_blank" rel="noopener">深入理解 Yii 2.0</a></li><li><a href="http://www.yiichina.com/" target="_blank" rel="noopener">Yii 框架中文文檔</a></li><li><a href="http://www.nowamagic.net/librarys/books/contents/php" target="_blank" rel="noopener">简单易懂的PHP魔法</a></li><li><a href="https://github.com/LinkedDestiny/swoole-doc" target="_blank" rel="noopener">swoole文档及入门教程</a></li><li><a href="http://www.phpcomposer.com/" target="_blank" rel="noopener">Composer 中文网</a></li><li><a href="http://ww1.minimee.org/php/slim" target="_blank" rel="noopener">Slim 中文文档</a></li><li><a href="http://lumen.laravel-china.org/" target="_blank" rel="noopener">Lumen 中文文档</a></li><li><a href="https://phpunit.de/manual/current/zh_cn/installation.html" target="_blank" rel="noopener">PHPUnit 中文文档</a></li></ul><h3 id="Prolog"><a href="#Prolog" class="headerlink" title="Prolog"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#prolog" target="_blank" rel="noopener"></a>Prolog</h3><ul><li><a href="http://fengdidi.github.io/blog/2011/11/15/qian-yan/" target="_blank" rel="noopener">笨办法学Prolog</a></li></ul><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#python" target="_blank" rel="noopener"></a>Python</h3><ul><li><a href="http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000" target="_blank" rel="noopener">廖雪峰 Python 2.7 中文教程</a></li><li><a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noopener">廖雪峰 Python 3 中文教程</a></li><li><a href="http://www.kuqin.com/abyteofpython_cn/" target="_blank" rel="noopener">简明Python教程</a></li><li><a href="http://www.kancloud.cn/kancloud/python-basic" target="_blank" rel="noopener">零基础学 Python 第一版</a></li><li><a href="http://www.kancloud.cn/kancloud/starter-learning-python" target="_blank" rel="noopener">零基础学 Python 第二版</a></li><li><a href="http://lovelypython.readthedocs.org/en/latest/" target="_blank" rel="noopener">可爱的 Python</a></li><li><a href="http://www.pythondoc.com/pythontutorial27/index.html" target="_blank" rel="noopener">Python 2.7 官方教程中文版</a></li><li><a href="http://www.pythondoc.com/pythontutorial3/index.html" target="_blank" rel="noopener">Python 3.3 官方教程中文版</a></li><li><a href="http://www.kancloud.cn/thinkphp/python-cookbook" target="_blank" rel="noopener">Python Cookbook 中文版</a></li><li><a href="https://github.com/yidao620c/python3-cookbook" target="_blank" rel="noopener">Python3 Cookbook 中文版</a></li><li><a href="http://www.kuqin.com/docs/diveintopythonzh-cn-5.4b/html/toc/" target="_blank" rel="noopener">深入 Python</a></li><li><a href="http://old.sebug.net/paper/books/dive-into-python3/" target="_blank" rel="noopener">深入 Python 3</a></li><li><a href="https://code.google.com/p/zhong-wiki/wiki/PEP8" target="_blank" rel="noopener">PEP8 Python代码风格规范</a></li><li><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-python-styleguide/" target="_blank" rel="noopener">Google Python 风格指南 中文版</a></li><li><a href="http://liam0205.me/2013/11/02/Python-tutorial-zh_cn/" target="_blank" rel="noopener">Python入门教程</a> (<a href="http://liam0205.me/attachment/Python/The_Python_Tutorial_zh-cn.pdf" target="_blank" rel="noopener">PDF</a>)</li><li><a href="http://old.sebug.net/paper/books/LearnPythonTheHardWay/" target="_blank" rel="noopener">笨办法学 Python</a> (<a href="http://liam0205.me/attachment/Python/PyHardWay/Learn_Python_The_Hard_Way_zh-cn.pdf" target="_blank" rel="noopener">PDF</a> <a href="https://www.gitbook.com/download/epub/book/wizardforcel/lpthw" target="_blank" rel="noopener">EPUB</a>)</li><li><a href="http://pan.baidu.com/s/1qW4pvnY" target="_blank" rel="noopener">Python自然语言处理中文版</a> （感谢陈涛同学的翻译，也谢谢 <a href="https://github.com/shwley" target="_blank" rel="noopener">@shwley</a> 联系了作者）</li><li><a href="http://liam0205.me/2014/09/11/matplotlib-tutorial-zh-cn/" target="_blank" rel="noopener">Python 绘图库 matplotlib 官方指南中文翻译</a></li><li><a href="http://scrapy-chs.readthedocs.org/zh_CN/latest/" target="_blank" rel="noopener">Scrapy 0.25 文档</a></li><li><a href="https://github.com/carfly/thinkpython-cn" target="_blank" rel="noopener">ThinkPython</a></li><li><a href="https://github.com/bingjin/ThinkPython2-CN" target="_blank" rel="noopener">ThinkPython 2ed</a></li><li><a href="http://www.cnblogs.com/vamei/archive/2012/09/13/2682778.html" target="_blank" rel="noopener">Python快速教程</a></li><li><a href="http://wiki.ubuntu.org.cn/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97" target="_blank" rel="noopener">Python 正则表达式操作指南</a></li><li><a href="http://www.crifan.com/files/doc/docbook/python_beginner_tutorial/release/html/python_beginner_tutorial.html" target="_blank" rel="noopener">python初级教程：入门详解</a></li><li><a href="https://www.gitbook.com/book/likebeta/twisted-intro-cn/details" target="_blank" rel="noopener">Twisted 与异步编程入门</a></li><li><a href="http://textgrocery.readthedocs.org/zh/latest/index.html" target="_blank" rel="noopener">TextGrocery 中文 API</a> ( 基于svm算法的一个短文本分类 Python 库 )</li><li><a href="http://requests-docs-cn.readthedocs.org/zh_CN/latest/" target="_blank" rel="noopener">Requests: HTTP for Humans</a></li><li><a href="http://pillow-cn.readthedocs.org/en/latest/#" target="_blank" rel="noopener">Pillow 中文文档</a></li><li><a href="http://pymotwcn.readthedocs.org/en/latest/index.html" target="_blank" rel="noopener">PyMOTW 中文版</a></li><li><a href="http://data.digitser.net/zh-CN/python_index.html" target="_blank" rel="noopener">Python 官方文档中文版</a></li><li><a href="http://fabric-chs.readthedocs.org/" target="_blank" rel="noopener">Fabric 中文文档</a></li><li><a href="http://beautifulsoup.readthedocs.org/zh_CN/latest/" target="_blank" rel="noopener">Beautiful Soup 4.2.0 中文文档</a></li><li><a href="http://old.sebug.net/paper/books/scipydoc" target="_blank" rel="noopener">用Python做科学计算</a></li><li><a href="http://www.pythondoc.com/sphinx/index.html" target="_blank" rel="noopener">Sphinx 中文文档</a></li><li><a href="https://github.com/cundi/Mastering.Python.Design.Patterns" target="_blank" rel="noopener">精通 Python 设计模式</a></li><li><a href="https://github.com/smartFlash/pySecurity" target="_blank" rel="noopener">python 安全编程教程</a></li><li><a href="https://www.gitbook.com/book/wizardforcel/sjtu-cs902-courseware/details" target="_blank" rel="noopener">程序设计思想与方法</a></li><li><a href="https://read.douban.com/ebook/16691849/" target="_blank" rel="noopener">知乎周刊·编程小白学Python</a></li><li><a href="https://github.com/cloga/scipy-lecture-notes_cn" target="_blank" rel="noopener">Scipy 讲义</a></li><li><a href="http://www.kuqin.com/docs/pythonbasic.html" target="_blank" rel="noopener">Python 学习笔记 基础篇</a></li><li><a href="http://www.kuqin.com/docs/pythonmodule.html" target="_blank" rel="noopener">Python 学习笔记 模块篇</a></li><li><a href="http://old.sebug.net/paper/books/python/%E3%80%8APython%E6%A0%87%E5%87%86%E5%BA%93%E3%80%8B%E4%B8%AD%E6%96%87%E7%89%88.pdf" target="_blank" rel="noopener">Python 标准库 中文版</a></li><li><a href="https://www.gitbook.com/book/eastlakeside/interpy-zh/details" target="_blank" rel="noopener">Python进阶</a></li><li><a href="https://wizardforcel.gitbooks.io/core-python-2e/content/" target="_blank" rel="noopener">Python 核心编程 第二版</a> CPyUG译</li><li><a href="http://pythonguidecn.readthedocs.io/zh/latest/" target="_blank" rel="noopener">Python最佳实践指南</a></li><li><a href="https://www.gitbook.com/book/wizardforcel/python-essential-tutorial/details" target="_blank" rel="noopener">Python 精要教程</a></li><li><a href="https://www.gitbook.com/book/wizardforcel/python-quant-uqer/details" target="_blank" rel="noopener">Python 量化交易教程</a></li><li>Django<ul><li><a href="http://django-chinese-docs.readthedocs.org/en/latest/" target="_blank" rel="noopener">Django 1.5 文档中文版</a> 正在翻译中</li><li><a href="http://django-1-7-doc.coding.io/" target="_blank" rel="noopener">Diango 1.7 文档中文版</a> 正在翻译中，目前只翻译了目录</li><li><a href="http://python.usyiyi.cn/django/index.html" target="_blank" rel="noopener">Django 1.8.2 文档中文版</a> 正在翻译中</li><li><a href="https://github.com/yangyubo/zh-django-best-practices" target="_blank" rel="noopener">Django 最佳实践</a></li><li><a href="https://www.gitbook.com/book/andrew-liu/django-blog/details" target="_blank" rel="noopener">Django搭建简易博客教程</a></li><li><a href="http://djangobook.py3k.cn/2.0/" target="_blank" rel="noopener">The Django Book 中文版</a></li><li><a href="https://github.com/cundi/Django-Design-Patterns-and-Best-Practices" target="_blank" rel="noopener">Django 设计模式与最佳实践</a></li><li><a href="https://github.com/cundi/Web.Development.with.Django.Cookbook" target="_blank" rel="noopener">Django 网站开发 Cookbook</a></li><li><a href="https://www.gitbook.com/book/djangogirlstaipei/django-girls-taipei-tutorial/details" target="_blank" rel="noopener">Django Girls 學習指南</a></li></ul></li><li>Flask<ul><li><a href="http://docs.jinkan.org/docs/flask/" target="_blank" rel="noopener">Flask 文档中文版</a></li><li><a href="http://docs.jinkan.org/docs/jinja2/" target="_blank" rel="noopener">Jinja2 文档中文版</a></li><li><a href="http://werkzeug-docs-cn.readthedocs.org/zh_CN/latest/" target="_blank" rel="noopener">Werkzeug 文档中文版</a></li><li><a href="http://spacewander.github.io/explore-flask-zh/" target="_blank" rel="noopener">Flask之旅</a></li><li><a href="https://www.gitbook.com/book/wizardforcel/flask-extension-docs/details" target="_blank" rel="noopener">Flask 扩展文档汇总</a></li><li><a href="http://www.pythondoc.com/flask-mega-tutorial/index.html" target="_blank" rel="noopener">Flask 大型教程</a></li><li><a href="https://github.com/sixu05202004/sqlalchemy-docs-cn" target="_blank" rel="noopener">SQLAlchemy 中文文档</a></li></ul></li><li>web.py<ul><li><a href="http://webpy.org/tutorial3.zh-cn" target="_blank" rel="noopener">web.py 0.3 新手指南</a></li><li><a href="http://webpy.org/cookbook/index.zh-cn" target="_blank" rel="noopener">Web.py Cookbook 简体中文版</a></li></ul></li><li>Tornado<ul><li><a href="http://demo.pythoner.com/itt2zh/index.html" target="_blank" rel="noopener">Introduction to Tornado 中文翻译</a></li><li><a href="http://www.nowamagic.net/academy/detail/13321002" target="_blank" rel="noopener">Tornado源码解析</a></li><li><a href="https://tornado-zh.readthedocs.org/zh/latest/" target="_blank" rel="noopener">Tornado 4.3 文档中文版</a></li></ul></li></ul><h3 id="R"><a href="#R" class="headerlink" title="R"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#r" target="_blank" rel="noopener"></a>R</h3><ul><li><a href="https://github.com/yihui/r-ninja" target="_blank" rel="noopener">R语言忍者秘笈</a></li></ul><h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#ruby" target="_blank" rel="noopener"></a>Ruby</h3><ul><li><a href="https://github.com/JuanitoFatas/ruby-style-guide/blob/master/README-zhCN.md" target="_blank" rel="noopener">Ruby 风格指南</a></li><li><a href="https://github.com/JuanitoFatas/rails-style-guide/blob/master/README-zhCN.md" target="_blank" rel="noopener">Rails 风格指南</a></li><li><a href="http://lrthw.github.io/" target="_blank" rel="noopener">笨方法學 Ruby</a></li><li><a href="http://guides.ruby-china.org/" target="_blank" rel="noopener">Ruby on Rails 指南</a></li><li><a href="https://ihower.tw/rails4/index.html" target="_blank" rel="noopener">Ruby on Rails 實戰聖經</a></li><li><a href="http://railstutorial-china.org/" target="_blank" rel="noopener">Ruby on Rails Tutorial 原书第 3 版</a> (本书网页版免费提供，电子版以 PDF、EPub 和 Mobi 格式提供购买，仅售 9.9 美元)</li><li><a href="http://rails-practice.com/content/index.html" target="_blank" rel="noopener">Rails 实践</a></li><li><a href="https://www.gitbook.com/book/kelby/rails-beginner-s-guide/details" target="_blank" rel="noopener">Rails 5 开发进阶(Beta)</a></li><li><a href="https://www.gitbook.com/book/rocodev/rails-102/details" target="_blank" rel="noopener">Rails 102</a></li><li><a href="https://wusuopu.gitbooks.io/write-ruby-extension-with-c/content/" target="_blank" rel="noopener">编写Ruby的C拓展</a></li><li><a href="https://ruby-china.org/topics/22386" target="_blank" rel="noopener">Ruby 源码解读</a></li><li><a href="http://deathking.github.io/metaprogramming-in-ruby/" target="_blank" rel="noopener">Ruby中的元编程</a></li></ul><h3 id="Rust"><a href="#Rust" class="headerlink" title="Rust"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#rust" target="_blank" rel="noopener"></a>Rust</h3><ul><li><a href="https://www.gitbook.com/book/kaisery/rust-book-chinese/details" target="_blank" rel="noopener">rust book 中文翻译</a></li><li><a href="https://github.com/rustcc/RustPrimer" target="_blank" rel="noopener">rust primer</a></li></ul><h3 id="Scala"><a href="#Scala" class="headerlink" title="Scala"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#scala" target="_blank" rel="noopener"></a>Scala</h3><ul><li><a href="http://twitter.github.io/scala_school/zh_cn/index.html" target="_blank" rel="noopener">Scala课堂</a> (Twitter的Scala中文教程)</li><li><a href="http://twitter.github.io/effectivescala/index-cn.html" target="_blank" rel="noopener">Effective Scala</a>(Twitter的Scala最佳实践的中文翻译)</li><li><a href="http://zh.scala-tour.com/" target="_blank" rel="noopener">Scala指南</a></li></ul><h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#shell" target="_blank" rel="noopener"></a>Shell</h3><ul><li><a href="https://github.com/qinjx/30min_guides/blob/master/shell.md" target="_blank" rel="noopener">Shell脚本编程30分钟入门</a></li><li><a href="http://blog.sae.sina.com.cn/archives/3606" target="_blank" rel="noopener">Bash脚本15分钟进阶教程</a></li><li><a href="https://github.com/me115/linuxtools_rst" target="_blank" rel="noopener">Linux工具快速教程</a></li><li><a href="https://github.com/wzb56/13_questions_of_shell" target="_blank" rel="noopener">shell十三问</a></li><li><a href="https://www.gitbook.com/book/tinylab/shellbook/details" target="_blank" rel="noopener">Shell编程范例</a></li></ul><h3 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#swift" target="_blank" rel="noopener"></a>Swift</h3><ul><li><a href="http://numbbbbb.github.io/the-swift-programming-language-in-chinese/" target="_blank" rel="noopener">The Swift Programming Language 中文版</a></li><li><a href="http://dev.swiftguide.cn/" target="_blank" rel="noopener">Swift 语言指南</a></li><li><a href="https://github.com/x140yu/Developing_iOS_8_Apps_With_Swift" target="_blank" rel="noopener">Stanford 公开课，Developing iOS 8 Apps with Swift 字幕翻译文件</a></li><li><a href="http://c4ios.swift.gg/" target="_blank" rel="noopener">C4iOS - COSMOS</a></li></ul><h3 id="读书笔记及其它"><a href="#读书笔记及其它" class="headerlink" title="读书笔记及其它"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E5%8F%8A%E5%85%B6%E5%AE%83" target="_blank" rel="noopener"></a>读书笔记及其它</h3><ul><li><a href="https://github.com/fool2fish/dragon-book-exercise-answers" target="_blank" rel="noopener">编译原理（紫龙书）中文第2版习题答案</a></li><li><a href="http://www.hawstein.com/posts/make-thiner-programming-pearls.html" target="_blank" rel="noopener">把《编程珠玑》读薄</a></li><li><a href="https://github.com/XiaolongJason/ReadingNote/blob/master/Effective%20C%2B%2B/Effective%20C%2B%2B.md" target="_blank" rel="noopener">Effective C++读书笔记</a></li><li><a href="https://github.com/qyuhen/book" target="_blank" rel="noopener">Golang 学习笔记、Python 学习笔记、C 学习笔记</a> (PDF)</li><li><a href="https://github.com/code4craft/jsoup-learning" target="_blank" rel="noopener">Jsoup 学习笔记</a></li><li><a href="https://github.com/lzjun567/note" target="_blank" rel="noopener">学习笔记: Vim、Python、memcached</a></li><li><a href="http://www.ituring.com.cn/activity/details/2004" target="_blank" rel="noopener">图灵开放书翻译计划–C++、Python、Java等</a></li><li><a href="http://g.yeeyan.org/books/2095" target="_blank" rel="noopener">蒂姆·奥莱利随笔</a> （由译言网翻译，电子版免费）</li><li><a href="http://sicp.readthedocs.org/en/latest/" target="_blank" rel="noopener">SICP 解题集</a></li><li><a href="https://github.com/hacke2/hacke2.github.io/issues/2" target="_blank" rel="noopener">精彩博客集合</a></li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines" target="_blank" rel="noopener">中文文案排版指北</a></li><li><a href="http://ganquan.info/standard-c/" target="_blank" rel="noopener">Standard C 语言标准函数库速查 (Cheat Sheet)</a></li><li><a href="http://gh.amio.us/git-cheatsheet-chs/" target="_blank" rel="noopener">Git Cheatsheet Chs</a></li><li><a href="http://www.chengweiyang.cn/gitbook/index.html" target="_blank" rel="noopener">GitBook简明教程</a></li><li><a href="https://github.com/qibaoguang/Study-Step-by-Step/blob/master/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/javascript_the_good_parts.md" target="_blank" rel="noopener">JavaScript语言精粹</a></li><li><a href="http://producingoss.com/zh/" target="_blank" rel="noopener">制造开源软件</a></li><li><a href="http://www.dianbo.org/9238/stone/tiwendezhihui.htm" target="_blank" rel="noopener">提问的智慧</a></li><li><a href="https://github.com/LearnShare/Learning-Markdown" target="_blank" rel="noopener">Markdown 入门参考</a></li><li><a href="https://github.com/stanzgy/wiki/blob/master/markup/asciidoc-guide.asciidoc" target="_blank" rel="noopener">AsciiDoc简明指南</a></li><li><a href="http://love-oriented.com/pack/" target="_blank" rel="noopener">背包问题九讲</a></li><li><a href="https://github.com/qiwsir/ITArticles" target="_blank" rel="noopener">老齐的技术资料</a></li><li><a href="https://github.com/JacksonTian/fks" target="_blank" rel="noopener">前端技能汇总</a></li><li><a href="https://github.com/zhuangbiaowei/learn-with-open-source" target="_blank" rel="noopener">借助开源项目，学习软件开发</a></li><li><a href="https://github.com/h5bp/Front-end-Developer-Interview-Questions/tree/master/Translations/Chinese" target="_blank" rel="noopener">前端工作面试问题</a></li><li><a href="https://www.gitbook.com/book/yuanbin/algorithm/details" target="_blank" rel="noopener">leetcode/lintcode题解/算法学习笔记</a></li><li><a href="https://github.com/li-xinyang/FEND_Note" target="_blank" rel="noopener">前端开发笔记本</a></li></ul><h3 id="测试相关"><a href="#测试相关" class="headerlink" title="测试相关"></a><a href="https://github.com/justjavac/free-programming-books-zh_CN#%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3" target="_blank" rel="noopener"></a>测试相关</h3>]]></content>
      
      
      <categories>
          
          <category> 学习资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用hexo+next打造自己的博客站点</title>
      <link href="/2018/06/10/%E4%BD%BF%E7%94%A8hexo+next%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/"/>
      <url>/2018/06/10/%E4%BD%BF%E7%94%A8hexo+next%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>用hexo+next搭建自己的博客站点<br><a href="https://www.jianshu.com/p/44e601a7567a" target="_blank" rel="noopener">简书地址</a><br><a id="more"></a></p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>这段时间工作很忙，2018年，从过了年以后就一直很忙，尤其是3月15号开始到海尔驻场以后，干的工作越来越杂，一开始前面还有个商务，项目上有个产品经理，3月底商务辞职了，再后来产品经理也调走了，项目上也没有测试人员，所以我就变成了一身多职的角色。</p><p>因为总是比较忙，而且无论如何也还是一枚程序猿，还是码农，但是我觉得自己的工作内容离技术路远有点越走越远，所以我起了在还没有荒废技术之前，将已有的知识总结总结，归纳归纳，搭建一套属于自己的博客站点。</p><h2 id="最后的效果暂时是这样的"><a href="#最后的效果暂时是这样的" class="headerlink" title="最后的效果暂时是这样的 "></a>最后的效果暂时是这样的 <img src="http://upload-images.jianshu.io/upload_images/4109786-1e2c17acf4ef41bc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="与时间赛跑"></h2><h2 id="选型"><a href="#选型" class="headerlink" title="选型"></a>选型</h2><h4 id="1）java-tomcat博客"><a href="#1）java-tomcat博客" class="headerlink" title="1）java+tomcat博客"></a>1）java+tomcat博客</h4><p>过年前后因为在学习spring cloud，docker技术，也是出于想把自己学到的东西积攒起来，而且自己本身就是java奴，所以选择了 <a href="https://github.com/qdhaiqiang/My-Blog" target="_blank" rel="noopener">Docker+SpringBoot+Mybatis+thymeleaf</a> 结构的博客，主要是那会儿看着这个博客确实也还挺漂亮的。有个成型的 <a href="http://13blog.site/" target="_blank" rel="noopener">博客</a> 系统，可以看出来样子确实还不错，管理后台也有了，也集成了富文本编辑器（主要是小白我不会markdown语法，也不敢去学）所以觉得很到位了。于是自己clone下来，先用tomcat做服务器配置起来，前后端run起来以后写了一篇文章，发现几个不方便的地方：</p><blockquote><ol><li>一共有20张定死的首页展示图，并不是随机的，而且获取这些图的地方，随机数总数也是写死了，与我以为每次都从某一图库随机获取有点差异。</li><li>管理后台上传图片不太方便，tomcat重启后图片就没有了，因此我是动用都七牛的图片服务器，拿到链接后在代码里面直接使用，跟预想有出入。</li><li>富文本编辑器的排班不理想。跟发布以后生成的效果有差异。</li><li>首页功能有点少，自己定制的话成本有点大，也不划算，分享、评论等功能缺失。</li><li>发布有点麻烦，还要从新启动服务器。</li></ol></blockquote><h4 id="2）wordpress博客"><a href="#2）wordpress博客" class="headerlink" title="2）wordpress博客"></a>2）wordpress博客</h4><p>WordPress是使用PHP语言开发的博客平台，用户可以在支持PHP和MySQL数据库的服务器上架设属于自己的网站。也可以把 WordPress当作一个内容管理系统（<a href="https://baike.baidu.com/item/CMS/315935" target="_blank" rel="noopener">CMS</a>）来使用。</p><p>WordPress是一款个人博客系统，并逐步演化成一款内容管理系统软件，它是使用PHP语言和MySQL数据库开发的。用户可以在支持 PHP 和 MySQL数据库的服务器上使用自己的博客。</p><p>WordPress有许多第三方开发的免费模板，安装方式简单易用。不过要做一个自己的模板，则需要你有一定的专业知识。比如你至少要懂的标准通用标记语言下的一个应用HTML代码、CSS、PHP等相关知识。</p><p>WordPress官方支持中文版，同时有爱好者开发的第三方中文语言包，如wopus中文语言包。WordPress拥有成千上万个各式插件和不计其数的主题模板样式。</p><p>身边就有两位同事在使用着基于php环境的<a href="https://cn.wordpress.org/" target="_blank" rel="noopener">WordPress</a>的博客，我也查过，这款博客的好评率确实也可以，应用也是相当的广泛，甚至还衍生出了Jpress这样的产品，号称是wordpress的java版，<a href="https://www.oschina.net/p/jpress" target="_blank" rel="noopener">这篇文章</a>里的介绍至少看起来是比较好的，不过我没有亲试，倒是身边就有两个同事用的wordpress的博客。<br>一个是Dirk的博客 ： <a href="http://101.132.162.138/blog/" target="_blank" rel="noopener">奋力奔跑的蜗牛</a><br>一个壮壮的博客    ：<a href="http://blog.strongfish.site/" target="_blank" rel="noopener">StrongFish</a>。</p><h4 id="3）hexo-next-超级火的静态博客"><a href="#3）hexo-next-超级火的静态博客" class="headerlink" title="3）hexo+next 超级火的静态博客"></a>3）hexo+next 超级火的静态博客</h4><p>基于docker的博客虽然搭起来了，也写了一篇文章，但是这小半年时间没有再更新了。最近在掘金上看到了不少关于博客的好文，提的比较多的是hexo，因为现在都流行静态网页，所以我打算动手重新DIY一个自己的站点。要走<strong>高端大气上档次，炫酷狂拽叼炸天</strong>的路线了</p><hr><h2 id="搭建自己的小空间"><a href="#搭建自己的小空间" class="headerlink" title="搭建自己的小空间"></a>搭建自己的小空间</h2><p>网上搭建系统的文章写的很好的太多了，再说也就那么点事，所以不再浪费时间，简单记录下重要过程吧。</p><blockquote><ol><li><strong>2018-06-05</strong> ：clone hexo和next的项目 修改站点名称，使用gitbub作为项目的最终部署地，使用hexo d命令，将原始代码部署上去，发现<a href="https://qdhaiqiang.github.io">https://qdhaiqiang.github.io</a>可以访问,第一步完成。</li><li><strong>2018-06-06</strong> ：将原来的qdhaiqiqiang.github.io项目拉出来删除部署文件，重新建一个项目叫blog，blog是项目原文件，而github.io是部署后的文件，一开始以为是一个，后来才明白原来可以不是同一个项目。</li><li><strong>2018-06-07</strong> ：修改hexo的主题文件，主要修改项参考博文<a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a>一文，感谢作者的总结。</li><li><strong>2018-06-08</strong> ：修改新建文章模板，创建时同时创建图库；添加音乐播放外链；修改【阅读全文】的样式；添加来必力评论系统；添加百度SEO收录，谷歌SEO收录。</li><li><strong>2018-06-09</strong> ：添加jiathis分享；添加站内搜索；修改头像；引入daovioce在线交流，并绑定微信接收消息；添加侧栏音乐；关闭canvas线条，关闭打赏(还是脸皮饱，不好意思要);</li></ol></blockquote><p>至此，本站点基本可以。换遗留几个想搞但没有搞起来的东西</p><blockquote><ul><li>博客上还没有萌萌的宠物，还想养只猫；</li><li>文章加密还没有做，有需要的时候再考虑；</li><li>百度收录没有成功，https验证没有通过，很遗憾，继续加油；</li><li>动态背景；</li></ul></blockquote><hr><h2 id="鸣谢-amp-推荐"><a href="#鸣谢-amp-推荐" class="headerlink" title="鸣谢&amp;推荐"></a>鸣谢&amp;推荐</h2><p>这里要公布几个查资料时查到的用hexo实现的好的博客，当然，都是next主题的。另外就是针对hexo+next的实现的一些好的博文，在此免费做个推广，博主就不用谢了哈。</p><h4 id="好的hexo站点"><a href="#好的hexo站点" class="headerlink" title="好的hexo站点"></a>好的hexo站点</h4><p><strong><a href="http://darryrzhong.site/" target="_blank" rel="noopener">darryrzhong</a></strong><br><strong><a href="http://shenzekun.cn/" target="_blank" rel="noopener">Moorez</a></strong><br><strong><a href="http://blogwenbo.com/" target="_blank" rel="noopener">WenBo丨星空灬</a></strong><br><strong><a href="http://51world.win/" target="_blank" rel="noopener">时间的朋友</a></strong></p><p>很巧妙的是，在这次搭建过程中发现的这几个博客博主看起来都是前端工程，而用wordpress搭建的多是后端工程师，不知道这个研究结果值多少钱，哈哈哈。</p><h4 id="好的博文"><a href="#好的博文" class="headerlink" title="好的博文"></a>好的博文</h4><p><strong><a href="https://juejin.im/post/598eeaff5188257d592e55bb" target="_blank" rel="noopener">浅析 Hexo 搭建博客的原理</a></strong><br><strong><a href="http://jet-han.oschina.io/2017/05/27/Hexo-NexT%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Hexo-NexT主题搭建个人博客</a></strong><br><strong><a href="https://www.jianshu.com/p/9a7316c871ef" target="_blank" rel="noopener">网易云跟帖关闭服务后转移到来必力</a></strong><br><strong><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></strong><br><strong><a href="http://51world.win/2017/09/04/code/%E7%BC%96%E7%A8%8B%E9%82%A3%E7%82%B9%E4%BA%8B%E5%84%BF-Hexo%20NexT%20%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%8A%A8%E7%94%BB%E6%8F%92%E4%BB%B6/" target="_blank" rel="noopener">踢球动画插件</a></strong></p><h4 id="特别推荐"><a href="#特别推荐" class="headerlink" title="特别推荐"></a>特别推荐</h4><p><a href="http://darryrzhong.site/" target="_blank" rel="noopener">darryrzhong</a>的文章是从基础篇 -&gt; 进阶篇 -&gt; 高级篇  -&gt; 百度收录 -&gt; 谷歌收录一路走过来的，配置截图等都非常详细，非常的教程，感谢博主的努力，真想给扒过来，呵呵呵。<br><img src="http://upload-images.jianshu.io/upload_images/4109786-a89d673f891f646b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="系列文章"></p><p>博客搭建暂时告一段段落，好好丰富内容吧，加油！</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/06/05/hello-world/"/>
      <url>/2018/06/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>  Hello Hexo<br><a id="more"></a></p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><p>测试远程图片：<img src="http://25.io/mou/Mou_128.png" alt="远程图片"><br>测试本地图片：<img src="/2018/06/05/hello-world/btb-3x.png" alt="本地图片"></p><h3 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h3><p>去往网易云音乐搜索喜欢的音乐，点击生成外链播放器，复制代码直接放到博文末尾即可，height设为0可隐藏播放器，但仍然可以播放音乐，auto设成0可手动播放，默认是1自动播放，可把代码放到themes/next/layout/_custom/sidebar.swig文件里，播放器会显示在站点预览中。其中的width=298 height=52 均改为0就看不到了，依然可以播放音乐。</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=27928457&auto=1&height=32"></iframe>]]></content>
      
      
      
    </entry>
    
  
  
</search>
